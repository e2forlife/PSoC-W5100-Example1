ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"cyPm.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CyPmHibSlpSaveSet,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  22              		.type	CyPmHibSlpSaveSet, %function
  23              	CyPmHibSlpSaveSet:
  24              	.LFB11:
  25              		.file 1 ".\\Generated_Source\\PSoC5\\cyPm.c"
   1:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/cyPm.c **** * File Name: cyPm.c
   3:.\Generated_Source\PSoC5/cyPm.c **** * Version 4.10
   4:.\Generated_Source\PSoC5/cyPm.c **** *
   5:.\Generated_Source\PSoC5/cyPm.c **** * Description:
   6:.\Generated_Source\PSoC5/cyPm.c **** *  Provides an API for the power management.
   7:.\Generated_Source\PSoC5/cyPm.c **** *
   8:.\Generated_Source\PSoC5/cyPm.c **** * Note:
   9:.\Generated_Source\PSoC5/cyPm.c **** *  Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC5/cyPm.c **** *  System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC5/cyPm.c **** *
  12:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
  13:.\Generated_Source\PSoC5/cyPm.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC5/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC5/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC5/cyPm.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC5/cyPm.c **** 
  19:.\Generated_Source\PSoC5/cyPm.c **** #include "cyPm.h"
  20:.\Generated_Source\PSoC5/cyPm.c **** 
  21:.\Generated_Source\PSoC5/cyPm.c **** 
  22:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************
  23:.\Generated_Source\PSoC5/cyPm.c **** * Place your includes, defines, and code here. Do not use the merge
  24:.\Generated_Source\PSoC5/cyPm.c **** * region below unless any component datasheet suggests doing so.
  25:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************/
  26:.\Generated_Source\PSoC5/cyPm.c **** /* `#START CY_PM_HEADER_INCLUDE` */
  27:.\Generated_Source\PSoC5/cyPm.c **** 
  28:.\Generated_Source\PSoC5/cyPm.c **** /* `#END` */
  29:.\Generated_Source\PSoC5/cyPm.c **** 
  30:.\Generated_Source\PSoC5/cyPm.c **** 
  31:.\Generated_Source\PSoC5/cyPm.c **** static CY_PM_BACKUP_STRUCT          cyPmBackup;
  32:.\Generated_Source\PSoC5/cyPm.c **** static CY_PM_CLOCK_BACKUP_STRUCT    cyPmClockBackup;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 2


  33:.\Generated_Source\PSoC5/cyPm.c **** 
  34:.\Generated_Source\PSoC5/cyPm.c **** /* Convertion table between register's values and frequency in MHz  */
  35:.\Generated_Source\PSoC5/cyPm.c **** static const uint8 CYCODE cyPmImoFreqReg2Mhz[7u] = {12u, 6u, 24u, 3u, 48u, 62u, 74u};
  36:.\Generated_Source\PSoC5/cyPm.c **** 
  37:.\Generated_Source\PSoC5/cyPm.c **** /* Function Prototypes */
  38:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSaveSet(void);
  39:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibRestore(void) ;
  40:.\Generated_Source\PSoC5/cyPm.c **** 
  41:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSlpSaveSet(void) ;
  42:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSlpRestore(void) ;
  43:.\Generated_Source\PSoC5/cyPm.c **** 
  44:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHviLviSaveDisable(void) ;
  45:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHviLviRestore(void) ;
  46:.\Generated_Source\PSoC5/cyPm.c **** 
  47:.\Generated_Source\PSoC5/cyPm.c **** 
  48:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
  49:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmSaveClocks
  50:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
  51:.\Generated_Source\PSoC5/cyPm.c **** *
  52:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
  53:.\Generated_Source\PSoC5/cyPm.c **** *  This function is called in preparation for entering sleep or hibernate low
  54:.\Generated_Source\PSoC5/cyPm.c **** *  power modes. Saves all the states of the clocking system that do not persist
  55:.\Generated_Source\PSoC5/cyPm.c **** *  during sleep/hibernate or that need to be altered in preparation for
  56:.\Generated_Source\PSoC5/cyPm.c **** *  sleep/hibernate. Shutdowns all the digital and analog clock dividers for the
  57:.\Generated_Source\PSoC5/cyPm.c **** *  active power mode configuration.
  58:.\Generated_Source\PSoC5/cyPm.c **** *
  59:.\Generated_Source\PSoC5/cyPm.c **** *  Switches the master clock over to the IMO and shuts down the PLL and MHz
  60:.\Generated_Source\PSoC5/cyPm.c **** *  Crystal. The IMO frequency is set to either 12 MHz or 48 MHz to match the
  61:.\Generated_Source\PSoC5/cyPm.c **** *  Design-Wide Resources System Editor "Enable Fast IMO During Startup" setting.
  62:.\Generated_Source\PSoC5/cyPm.c **** *  The ILO and 32 KHz oscillators are not impacted. The current Flash wait state
  63:.\Generated_Source\PSoC5/cyPm.c **** *  setting is saved and the Flash wait state setting is set for the current IMO
  64:.\Generated_Source\PSoC5/cyPm.c **** *  speed.
  65:.\Generated_Source\PSoC5/cyPm.c **** *
  66:.\Generated_Source\PSoC5/cyPm.c **** *  Note If the Master Clock source is routed through the DSI inputs, then it
  67:.\Generated_Source\PSoC5/cyPm.c **** *  must be set manually to another source before using the
  68:.\Generated_Source\PSoC5/cyPm.c **** *  CyPmSaveClocks()/CyPmRestoreClocks() functions.
  69:.\Generated_Source\PSoC5/cyPm.c **** *
  70:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
  71:.\Generated_Source\PSoC5/cyPm.c **** *  None
  72:.\Generated_Source\PSoC5/cyPm.c **** *
  73:.\Generated_Source\PSoC5/cyPm.c **** * Return:
  74:.\Generated_Source\PSoC5/cyPm.c **** *  None
  75:.\Generated_Source\PSoC5/cyPm.c **** *
  76:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
  77:.\Generated_Source\PSoC5/cyPm.c **** *  All peripheral clocks are going to be off after this API method call.
  78:.\Generated_Source\PSoC5/cyPm.c **** *
  79:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
  80:.\Generated_Source\PSoC5/cyPm.c **** void CyPmSaveClocks(void) 
  81:.\Generated_Source\PSoC5/cyPm.c **** {
  82:.\Generated_Source\PSoC5/cyPm.c ****     /* Digital and analog clocks - save enable state and disable them all */
  83:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkA = CY_PM_ACT_CFG1_REG & CY_PM_ACT_EN_CLK_A_MASK;
  84:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkD = CY_PM_ACT_CFG2_REG;
  85:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_A_MASK));
  86:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG2_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_D_MASK));
  87:.\Generated_Source\PSoC5/cyPm.c **** 
  88:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current flash wait cycles and set the maximum value */
  89:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.flashWaitCycles = CY_PM_CACHE_CR_CYCLES_MASK & CY_PM_CACHE_CR_REG;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 3


  90:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
  91:.\Generated_Source\PSoC5/cyPm.c **** 
  92:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - save current IMO MHz OSC frequency and USB mode is on bit */
  93:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.imoFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
  94:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.imoUsbClk = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_USB;
  95:.\Generated_Source\PSoC5/cyPm.c **** 
  96:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO doubler - save enable state */
  97:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
  98:.\Generated_Source\PSoC5/cyPm.c ****     {
  99:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO doubler enabled - save and disable */
 100:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imo2x = CY_PM_ENABLED;
 101:.\Generated_Source\PSoC5/cyPm.c ****     }
 102:.\Generated_Source\PSoC5/cyPm.c ****     else
 103:.\Generated_Source\PSoC5/cyPm.c ****     {
 104:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO doubler disabled */
 105:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imo2x = CY_PM_DISABLED;
 106:.\Generated_Source\PSoC5/cyPm.c ****     }
 107:.\Generated_Source\PSoC5/cyPm.c **** 
 108:.\Generated_Source\PSoC5/cyPm.c ****     /* Master clock - save source */
 109:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.masterClkSrc = CY_PM_CLKDIST_MSTR1_REG & CY_PM_MASTER_CLK_SRC_MASK;
 110:.\Generated_Source\PSoC5/cyPm.c **** 
 111:.\Generated_Source\PSoC5/cyPm.c ****     /* Switch Master clock's source from PLL's output to PLL's source */
 112:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_PLL == cyPmClockBackup.masterClkSrc)
 113:.\Generated_Source\PSoC5/cyPm.c ****     {
 114:.\Generated_Source\PSoC5/cyPm.c ****         switch (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_PLL_SRC_MASK)
 115:.\Generated_Source\PSoC5/cyPm.c ****         {
 116:.\Generated_Source\PSoC5/cyPm.c ****         case CY_PM_CLKDIST_PLL_SRC_IMO:
 117:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 118:.\Generated_Source\PSoC5/cyPm.c ****             break;
 119:.\Generated_Source\PSoC5/cyPm.c **** 
 120:.\Generated_Source\PSoC5/cyPm.c ****         case CY_PM_CLKDIST_PLL_SRC_XTAL:
 121:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_XTAL);
 122:.\Generated_Source\PSoC5/cyPm.c ****             break;
 123:.\Generated_Source\PSoC5/cyPm.c **** 
 124:.\Generated_Source\PSoC5/cyPm.c ****         case CY_PM_CLKDIST_PLL_SRC_DSI:
 125:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_DSI);
 126:.\Generated_Source\PSoC5/cyPm.c ****             break;
 127:.\Generated_Source\PSoC5/cyPm.c **** 
 128:.\Generated_Source\PSoC5/cyPm.c ****         default:
 129:.\Generated_Source\PSoC5/cyPm.c ****             CYASSERT(0u != 0u);
 130:.\Generated_Source\PSoC5/cyPm.c ****             break;
 131:.\Generated_Source\PSoC5/cyPm.c ****         }
 132:.\Generated_Source\PSoC5/cyPm.c ****     }
 133:.\Generated_Source\PSoC5/cyPm.c **** 
 134:.\Generated_Source\PSoC5/cyPm.c ****     /* PLL - check enable state, disable if needed */
 135:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_PLL_CFG0_REG & CY_PM_PLL_CFG0_ENABLE))
 136:.\Generated_Source\PSoC5/cyPm.c ****     {
 137:.\Generated_Source\PSoC5/cyPm.c ****         /* PLL is enabled - save state and disable */
 138:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.pllEnableState = CY_PM_ENABLED;
 139:.\Generated_Source\PSoC5/cyPm.c ****         CyPLL_OUT_Stop();
 140:.\Generated_Source\PSoC5/cyPm.c ****     }
 141:.\Generated_Source\PSoC5/cyPm.c ****     else
 142:.\Generated_Source\PSoC5/cyPm.c ****     {
 143:.\Generated_Source\PSoC5/cyPm.c ****         /* PLL is disabled - save state */
 144:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.pllEnableState = CY_PM_DISABLED;
 145:.\Generated_Source\PSoC5/cyPm.c ****     }
 146:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 4


 147:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - set appropriate frequency for LPM */
 148:.\Generated_Source\PSoC5/cyPm.c ****     CyIMO_SetFreq(CY_PM_IMO_FREQ_LPM);
 149:.\Generated_Source\PSoC5/cyPm.c **** 
 150:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - save enable state and enable without wait to settle */
 151:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG))
 152:.\Generated_Source\PSoC5/cyPm.c ****     {
 153:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO - save enabled state */
 154:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoEnable = CY_PM_ENABLED;
 155:.\Generated_Source\PSoC5/cyPm.c ****     }
 156:.\Generated_Source\PSoC5/cyPm.c ****     else
 157:.\Generated_Source\PSoC5/cyPm.c ****     {
 158:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO - save disabled state */
 159:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoEnable = CY_PM_DISABLED;
 160:.\Generated_Source\PSoC5/cyPm.c **** 
 161:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable the IMO. Use software delay instead of the FTW-based inside */
 162:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 163:.\Generated_Source\PSoC5/cyPm.c **** 
 164:.\Generated_Source\PSoC5/cyPm.c ****         /* Settling time of the IMO is of the order of less than 6us */
 165:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayUs(6u);
 166:.\Generated_Source\PSoC5/cyPm.c ****     }
 167:.\Generated_Source\PSoC5/cyPm.c **** 
 168:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - save the current IMOCLK source and set to IMO if not yet */
 169:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_XCLKEN))
 170:.\Generated_Source\PSoC5/cyPm.c ****     {
 171:.\Generated_Source\PSoC5/cyPm.c ****         /* DSI or XTAL CLK */
 172:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc =
 173:.\Generated_Source\PSoC5/cyPm.c ****             (0u == (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO2X_SRC)) ? CY_IMO_SOURCE_DSI : CY_IMO_S
 174:.\Generated_Source\PSoC5/cyPm.c **** 
 175:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO -  set IMOCLK source to IMO */
 176:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetSource(CY_IMO_SOURCE_IMO);
 177:.\Generated_Source\PSoC5/cyPm.c ****     }
 178:.\Generated_Source\PSoC5/cyPm.c ****     else
 179:.\Generated_Source\PSoC5/cyPm.c ****     {
 180:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO */
 181:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc = CY_IMO_SOURCE_IMO;
 182:.\Generated_Source\PSoC5/cyPm.c ****     }
 183:.\Generated_Source\PSoC5/cyPm.c **** 
 184:.\Generated_Source\PSoC5/cyPm.c ****     /* Save clk_imo source */
 185:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkImoSrc = CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK;
 186:.\Generated_Source\PSoC5/cyPm.c **** 
 187:.\Generated_Source\PSoC5/cyPm.c ****     /* If IMOCLK2X or SPC OSC is source for clk_imo, set it to IMOCLK */
 188:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_CLKDIST_IMO_OUT_IMO != cyPmClockBackup.clkImoSrc)
 189:.\Generated_Source\PSoC5/cyPm.c ****     {
 190:.\Generated_Source\PSoC5/cyPm.c ****         /* Set IMOCLK to source for clk_imo */
 191:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 192:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_CLKDIST_IMO_OUT_IMO;
 193:.\Generated_Source\PSoC5/cyPm.c ****     }    /* Need to change nothing if IMOCLK is source clk_imo */
 194:.\Generated_Source\PSoC5/cyPm.c **** 
 195:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO doubler - disable it (saved above) */
 196:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 197:.\Generated_Source\PSoC5/cyPm.c ****     {
 198:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_DisableDoubler();
 199:.\Generated_Source\PSoC5/cyPm.c ****     }
 200:.\Generated_Source\PSoC5/cyPm.c **** 
 201:.\Generated_Source\PSoC5/cyPm.c ****     /* Master clock - save divider and set it to divide-by-one (if no yet) */
 202:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkSyncDiv = CY_PM_CLKDIST_MSTR0_REG;
 203:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_DIV_BY_ONE != cyPmClockBackup.clkSyncDiv)
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 5


 204:.\Generated_Source\PSoC5/cyPm.c ****     {
 205:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetDivider(CY_PM_DIV_BY_ONE);
 206:.\Generated_Source\PSoC5/cyPm.c ****     }    /* No change if master clock divider is 1 */
 207:.\Generated_Source\PSoC5/cyPm.c **** 
 208:.\Generated_Source\PSoC5/cyPm.c ****     /* Master clock source - set it to IMO if not yet. */
 209:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_IMO != cyPmClockBackup.masterClkSrc)
 210:.\Generated_Source\PSoC5/cyPm.c ****     {
 211:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 212:.\Generated_Source\PSoC5/cyPm.c ****     }    /* No change if master clock source is IMO */
 213:.\Generated_Source\PSoC5/cyPm.c **** 
 214:.\Generated_Source\PSoC5/cyPm.c ****     /* Bus clock - save divider and set it, if needed, to divide-by-one */
 215:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv = (uint16) ((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 216:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv |= CY_PM_CLK_BUS_LSB_DIV_REG;
 217:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_BUS_CLK_DIV_BY_ONE != cyPmClockBackup.clkBusDiv)
 218:.\Generated_Source\PSoC5/cyPm.c ****     {
 219:.\Generated_Source\PSoC5/cyPm.c ****         CyBusClk_SetDivider(CY_PM_BUS_CLK_DIV_BY_ONE);
 220:.\Generated_Source\PSoC5/cyPm.c ****     }    /* Do nothing if saved and actual values are equal */
 221:.\Generated_Source\PSoC5/cyPm.c **** 
 222:.\Generated_Source\PSoC5/cyPm.c ****     /* Set number of wait cycles for flash according to CPU frequency in MHz */
 223:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles((uint8)CY_PM_GET_CPU_FREQ_MHZ);
 224:.\Generated_Source\PSoC5/cyPm.c **** 
 225:.\Generated_Source\PSoC5/cyPm.c ****     /* MHz ECO - check enable state and disable if needed */
 226:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_ENABLE))
 227:.\Generated_Source\PSoC5/cyPm.c ****     {
 228:.\Generated_Source\PSoC5/cyPm.c ****         /* MHz ECO is enabled - save state and disable */
 229:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.xmhzEnableState = CY_PM_ENABLED;
 230:.\Generated_Source\PSoC5/cyPm.c ****         CyXTAL_Stop();
 231:.\Generated_Source\PSoC5/cyPm.c ****     }
 232:.\Generated_Source\PSoC5/cyPm.c ****     else
 233:.\Generated_Source\PSoC5/cyPm.c ****     {
 234:.\Generated_Source\PSoC5/cyPm.c ****         /* MHz ECO is disabled - save state */
 235:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.xmhzEnableState = CY_PM_DISABLED;
 236:.\Generated_Source\PSoC5/cyPm.c ****     }
 237:.\Generated_Source\PSoC5/cyPm.c **** 
 238:.\Generated_Source\PSoC5/cyPm.c **** 
 239:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
 240:.\Generated_Source\PSoC5/cyPm.c ****     * Save the enable state of delay between the system bus clock and each of the
 241:.\Generated_Source\PSoC5/cyPm.c ****     * 4 individual analog clocks. This bit non-retention and its value should
 242:.\Generated_Source\PSoC5/cyPm.c ****     * be restored on wakeup.
 243:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
 244:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_CLKDIST_DELAY_REG & CY_PM_CLKDIST_DELAY_EN))
 245:.\Generated_Source\PSoC5/cyPm.c ****     {
 246:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.clkDistDelay = CY_PM_ENABLED;
 247:.\Generated_Source\PSoC5/cyPm.c ****     }
 248:.\Generated_Source\PSoC5/cyPm.c ****     else
 249:.\Generated_Source\PSoC5/cyPm.c ****     {
 250:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.clkDistDelay = CY_PM_DISABLED;
 251:.\Generated_Source\PSoC5/cyPm.c ****     }
 252:.\Generated_Source\PSoC5/cyPm.c **** }
 253:.\Generated_Source\PSoC5/cyPm.c **** 
 254:.\Generated_Source\PSoC5/cyPm.c **** 
 255:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
 256:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmRestoreClocks
 257:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
 258:.\Generated_Source\PSoC5/cyPm.c **** *
 259:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
 260:.\Generated_Source\PSoC5/cyPm.c **** *  Restores any state that was preserved by the last call to CyPmSaveClocks().
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 6


 261:.\Generated_Source\PSoC5/cyPm.c **** *  The Flash wait state setting is also restored.
 262:.\Generated_Source\PSoC5/cyPm.c **** *
 263:.\Generated_Source\PSoC5/cyPm.c **** *  Note If the Master Clock source is routed through the DSI inputs, then it
 264:.\Generated_Source\PSoC5/cyPm.c **** *  must be set manually to another source before using the
 265:.\Generated_Source\PSoC5/cyPm.c **** *  CyPmSaveClocks()/CyPmRestoreClocks() functions.
 266:.\Generated_Source\PSoC5/cyPm.c **** *
 267:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 3 and PSoC 5LP:
 268:.\Generated_Source\PSoC5/cyPm.c **** *  The merge region could be used to process state when the megahertz crystal is
 269:.\Generated_Source\PSoC5/cyPm.c **** *  not ready after a hold-off timeout.
 270:.\Generated_Source\PSoC5/cyPm.c **** *
 271:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 5:
 272:.\Generated_Source\PSoC5/cyPm.c **** *  The 130 ms is given for the megahertz crystal to stabilize. Its readiness is
 273:.\Generated_Source\PSoC5/cyPm.c **** *  not verified after a hold-off timeout.
 274:.\Generated_Source\PSoC5/cyPm.c **** *
 275:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
 276:.\Generated_Source\PSoC5/cyPm.c **** *  None
 277:.\Generated_Source\PSoC5/cyPm.c **** *
 278:.\Generated_Source\PSoC5/cyPm.c **** * Return:
 279:.\Generated_Source\PSoC5/cyPm.c **** *  None
 280:.\Generated_Source\PSoC5/cyPm.c **** *
 281:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
 282:.\Generated_Source\PSoC5/cyPm.c **** void CyPmRestoreClocks(void) 
 283:.\Generated_Source\PSoC5/cyPm.c **** {
 284:.\Generated_Source\PSoC5/cyPm.c ****     cystatus status = CYRET_TIMEOUT;
 285:.\Generated_Source\PSoC5/cyPm.c ****     uint16 i;
 286:.\Generated_Source\PSoC5/cyPm.c ****     uint16 clkBusDivTmp;
 287:.\Generated_Source\PSoC5/cyPm.c **** 
 288:.\Generated_Source\PSoC5/cyPm.c **** 
 289:.\Generated_Source\PSoC5/cyPm.c ****     /* Convertion table between CyIMO_SetFreq() parameters and register's value */
 290:.\Generated_Source\PSoC5/cyPm.c ****     const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 291:.\Generated_Source\PSoC5/cyPm.c ****         CY_IMO_FREQ_12MHZ, CY_IMO_FREQ_6MHZ,  CY_IMO_FREQ_24MHZ, CY_IMO_FREQ_3MHZ,
 292:.\Generated_Source\PSoC5/cyPm.c ****         CY_IMO_FREQ_48MHZ, 5u, 6u};
 293:.\Generated_Source\PSoC5/cyPm.c **** 
 294:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore enable state of delay between system bus clock and ACLKs. */
 295:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.clkDistDelay)
 296:.\Generated_Source\PSoC5/cyPm.c ****     {
 297:.\Generated_Source\PSoC5/cyPm.c ****         /* Delay for both bandgap and delay line to settle out */
 298:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayCycles((uint32)(CY_PM_CLK_DELAY_BANDGAP_SETTLE_US + CY_PM_CLK_DELAY_BIAS_SETTLE_US) 
 299:.\Generated_Source\PSoC5/cyPm.c ****                         CY_PM_GET_CPU_FREQ_MHZ);
 300:.\Generated_Source\PSoC5/cyPm.c **** 
 301:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_DELAY_REG |= CY_PM_CLKDIST_DELAY_EN;
 302:.\Generated_Source\PSoC5/cyPm.c ****     }
 303:.\Generated_Source\PSoC5/cyPm.c **** 
 304:.\Generated_Source\PSoC5/cyPm.c ****     /* MHz ECO restore state */
 305:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState)
 306:.\Generated_Source\PSoC5/cyPm.c ****     {
 307:.\Generated_Source\PSoC5/cyPm.c ****         /***********************************************************************
 308:.\Generated_Source\PSoC5/cyPm.c ****         * Enabling XMHZ XTAL. The actual CyXTAL_Start() with a non zero wait
 309:.\Generated_Source\PSoC5/cyPm.c ****         * period uses FTW for period measurement. This could cause a problem
 310:.\Generated_Source\PSoC5/cyPm.c ****         * if CTW/FTW is used as a wake up time in the low power modes APIs.
 311:.\Generated_Source\PSoC5/cyPm.c ****         * So, the XTAL wait procedure is implemented with a software delay.
 312:.\Generated_Source\PSoC5/cyPm.c ****         ***********************************************************************/
 313:.\Generated_Source\PSoC5/cyPm.c **** 
 314:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable XMHZ XTAL with no wait */
 315:.\Generated_Source\PSoC5/cyPm.c ****         (void) CyXTAL_Start(CY_PM_XTAL_MHZ_NO_WAIT);
 316:.\Generated_Source\PSoC5/cyPm.c **** 
 317:.\Generated_Source\PSoC5/cyPm.c ****         /* Read XERR bit to clear it */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 7


 318:.\Generated_Source\PSoC5/cyPm.c ****         (void) CY_PM_FASTCLK_XMHZ_CSR_REG;
 319:.\Generated_Source\PSoC5/cyPm.c **** 
 320:.\Generated_Source\PSoC5/cyPm.c ****         /* Wait */
 321:.\Generated_Source\PSoC5/cyPm.c ****         for(i = CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US; i > 0u; i--)
 322:.\Generated_Source\PSoC5/cyPm.c ****         {
 323:.\Generated_Source\PSoC5/cyPm.c ****             /* Make a 200 microseconds delay */
 324:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayCycles((uint32)CY_PM_WAIT_200_US * CY_PM_GET_CPU_FREQ_MHZ);
 325:.\Generated_Source\PSoC5/cyPm.c **** 
 326:.\Generated_Source\PSoC5/cyPm.c ****             /* High output indicates oscillator failure */
 327:.\Generated_Source\PSoC5/cyPm.c ****             if(0u == (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_XERR))
 328:.\Generated_Source\PSoC5/cyPm.c ****             {
 329:.\Generated_Source\PSoC5/cyPm.c ****                 status = CYRET_SUCCESS;
 330:.\Generated_Source\PSoC5/cyPm.c ****                 break;
 331:.\Generated_Source\PSoC5/cyPm.c ****             }
 332:.\Generated_Source\PSoC5/cyPm.c ****         }
 333:.\Generated_Source\PSoC5/cyPm.c **** 
 334:.\Generated_Source\PSoC5/cyPm.c ****         if(CYRET_TIMEOUT == status)
 335:.\Generated_Source\PSoC5/cyPm.c ****         {
 336:.\Generated_Source\PSoC5/cyPm.c ****             /*******************************************************************
 337:.\Generated_Source\PSoC5/cyPm.c ****             * Process the situation when megahertz crystal is not ready.
 338:.\Generated_Source\PSoC5/cyPm.c ****             * Time to stabilize the value is crystal specific.
 339:.\Generated_Source\PSoC5/cyPm.c ****             *******************************************************************/
 340:.\Generated_Source\PSoC5/cyPm.c ****            /* `#START_MHZ_ECO_TIMEOUT` */
 341:.\Generated_Source\PSoC5/cyPm.c **** 
 342:.\Generated_Source\PSoC5/cyPm.c ****            /* `#END` */
 343:.\Generated_Source\PSoC5/cyPm.c ****         }
 344:.\Generated_Source\PSoC5/cyPm.c ****     }   /* (CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState) */
 345:.\Generated_Source\PSoC5/cyPm.c **** 
 346:.\Generated_Source\PSoC5/cyPm.c **** 
 347:.\Generated_Source\PSoC5/cyPm.c ****     /* Temprorary set maximum flash wait cycles */
 348:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 349:.\Generated_Source\PSoC5/cyPm.c **** 
 350:.\Generated_Source\PSoC5/cyPm.c ****     /* XTAL and DSI clocks are ready to be source for Master clock. */
 351:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_XTAL == cyPmClockBackup.masterClkSrc) ||
 352:.\Generated_Source\PSoC5/cyPm.c ****        (CY_PM_MASTER_CLK_SRC_DSI  == cyPmClockBackup.masterClkSrc))
 353:.\Generated_Source\PSoC5/cyPm.c ****     {
 354:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore Master clock's divider */
 355:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 356:.\Generated_Source\PSoC5/cyPm.c ****         {
 357:.\Generated_Source\PSoC5/cyPm.c ****             /* Restore Master clock divider */
 358:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 359:.\Generated_Source\PSoC5/cyPm.c ****         }
 360:.\Generated_Source\PSoC5/cyPm.c **** 
 361:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore Master clock source */
 362:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 363:.\Generated_Source\PSoC5/cyPm.c ****     }
 364:.\Generated_Source\PSoC5/cyPm.c **** 
 365:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - restore IMO frequency */
 366:.\Generated_Source\PSoC5/cyPm.c ****     if((0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB)) &&
 367:.\Generated_Source\PSoC5/cyPm.c ****         (CY_IMO_FREQ_24MHZ == cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]))
 368:.\Generated_Source\PSoC5/cyPm.c ****     {
 369:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore IMO frequency (24 MHz) and trim it for USB */
 370:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetFreq(CY_IMO_FREQ_USB);
 371:.\Generated_Source\PSoC5/cyPm.c ****     }
 372:.\Generated_Source\PSoC5/cyPm.c ****     else
 373:.\Generated_Source\PSoC5/cyPm.c ****     {
 374:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore IMO frequency */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 8


 375:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetFreq(cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]);
 376:.\Generated_Source\PSoC5/cyPm.c **** 
 377:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB))
 378:.\Generated_Source\PSoC5/cyPm.c ****         {
 379:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_FASTCLK_IMO_CR_REG |= CY_PM_FASTCLK_IMO_CR_USB;
 380:.\Generated_Source\PSoC5/cyPm.c ****         }
 381:.\Generated_Source\PSoC5/cyPm.c ****         else
 382:.\Generated_Source\PSoC5/cyPm.c ****         {
 383:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_FASTCLK_IMO_CR_REG &= ((uint8)(~CY_PM_FASTCLK_IMO_CR_USB));
 384:.\Generated_Source\PSoC5/cyPm.c ****         }
 385:.\Generated_Source\PSoC5/cyPm.c ****     }
 386:.\Generated_Source\PSoC5/cyPm.c **** 
 387:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - restore enable state if needed */
 388:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_ENABLED == cyPmClockBackup.imoEnable) &&
 389:.\Generated_Source\PSoC5/cyPm.c ****        (0u == (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 390:.\Generated_Source\PSoC5/cyPm.c ****     {
 391:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO - restore enabled state */
 392:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 393:.\Generated_Source\PSoC5/cyPm.c ****     }
 394:.\Generated_Source\PSoC5/cyPm.c **** 
 395:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - restore IMOCLK source */
 396:.\Generated_Source\PSoC5/cyPm.c ****     CyIMO_SetSource(cyPmClockBackup.imoClkSrc);
 397:.\Generated_Source\PSoC5/cyPm.c **** 
 398:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore IMO doubler enable state (turned off by CyPmSaveClocks()) */
 399:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.imo2x)
 400:.\Generated_Source\PSoC5/cyPm.c ****     {
 401:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_EnableDoubler();
 402:.\Generated_Source\PSoC5/cyPm.c ****     }
 403:.\Generated_Source\PSoC5/cyPm.c **** 
 404:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - restore clk_imo source, if needed */
 405:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkImoSrc != (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK))
 406:.\Generated_Source\PSoC5/cyPm.c ****     {
 407:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 408:.\Generated_Source\PSoC5/cyPm.c ****                                 cyPmClockBackup.clkImoSrc;
 409:.\Generated_Source\PSoC5/cyPm.c ****     }
 410:.\Generated_Source\PSoC5/cyPm.c **** 
 411:.\Generated_Source\PSoC5/cyPm.c **** 
 412:.\Generated_Source\PSoC5/cyPm.c ****     /* PLL restore state */
 413:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.pllEnableState)
 414:.\Generated_Source\PSoC5/cyPm.c ****     {
 415:.\Generated_Source\PSoC5/cyPm.c ****         /***********************************************************************
 416:.\Generated_Source\PSoC5/cyPm.c ****         * Enable PLL. The actual CyPLL_OUT_Start() without wait period uses FTW
 417:.\Generated_Source\PSoC5/cyPm.c ****         * for period measurement. This could cause a problem if CTW/FTW is used
 418:.\Generated_Source\PSoC5/cyPm.c ****         * as a wakeup time in the low power modes APIs. To omit this issue PLL
 419:.\Generated_Source\PSoC5/cyPm.c ****         * wait procedure is implemented with a software delay.
 420:.\Generated_Source\PSoC5/cyPm.c ****         ***********************************************************************/
 421:.\Generated_Source\PSoC5/cyPm.c ****         status = CYRET_TIMEOUT;
 422:.\Generated_Source\PSoC5/cyPm.c **** 
 423:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable PLL */
 424:.\Generated_Source\PSoC5/cyPm.c ****         (void) CyPLL_OUT_Start(CY_PM_PLL_OUT_NO_WAIT);
 425:.\Generated_Source\PSoC5/cyPm.c **** 
 426:.\Generated_Source\PSoC5/cyPm.c ****         /* Read to clear lock status after delay */
 427:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayUs((uint32)80u);
 428:.\Generated_Source\PSoC5/cyPm.c ****         (void) CY_PM_FASTCLK_PLL_SR_REG;
 429:.\Generated_Source\PSoC5/cyPm.c **** 
 430:.\Generated_Source\PSoC5/cyPm.c ****         /* It should take 250 us lock: 251-80 = 171 */
 431:.\Generated_Source\PSoC5/cyPm.c ****         for(i = 171u; i > 0u; i--)
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 9


 432:.\Generated_Source\PSoC5/cyPm.c ****         {
 433:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayUs((uint32)1u);
 434:.\Generated_Source\PSoC5/cyPm.c **** 
 435:.\Generated_Source\PSoC5/cyPm.c ****             /* Accept PLL is OK after two consecutive polls indicate PLL lock */
 436:.\Generated_Source\PSoC5/cyPm.c ****             if((0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)) &&
 437:.\Generated_Source\PSoC5/cyPm.c ****                (0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)))
 438:.\Generated_Source\PSoC5/cyPm.c ****             {
 439:.\Generated_Source\PSoC5/cyPm.c ****                 status = CYRET_SUCCESS;
 440:.\Generated_Source\PSoC5/cyPm.c ****                 break;
 441:.\Generated_Source\PSoC5/cyPm.c ****             }
 442:.\Generated_Source\PSoC5/cyPm.c ****         }
 443:.\Generated_Source\PSoC5/cyPm.c **** 
 444:.\Generated_Source\PSoC5/cyPm.c ****         if(CYRET_TIMEOUT == status)
 445:.\Generated_Source\PSoC5/cyPm.c ****         {
 446:.\Generated_Source\PSoC5/cyPm.c ****             /*******************************************************************
 447:.\Generated_Source\PSoC5/cyPm.c ****             * Process the situation when PLL is not ready.
 448:.\Generated_Source\PSoC5/cyPm.c ****             *******************************************************************/
 449:.\Generated_Source\PSoC5/cyPm.c ****            /* `#START_PLL_TIMEOUT` */
 450:.\Generated_Source\PSoC5/cyPm.c **** 
 451:.\Generated_Source\PSoC5/cyPm.c ****            /* `#END` */
 452:.\Generated_Source\PSoC5/cyPm.c ****         }
 453:.\Generated_Source\PSoC5/cyPm.c ****     }   /* (CY_PM_ENABLED == cyPmClockBackup.pllEnableState) */
 454:.\Generated_Source\PSoC5/cyPm.c **** 
 455:.\Generated_Source\PSoC5/cyPm.c **** 
 456:.\Generated_Source\PSoC5/cyPm.c ****     /* PLL and IMO is ready to be source for Master clock */
 457:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_IMO == cyPmClockBackup.masterClkSrc) ||
 458:.\Generated_Source\PSoC5/cyPm.c ****        (CY_PM_MASTER_CLK_SRC_PLL == cyPmClockBackup.masterClkSrc))
 459:.\Generated_Source\PSoC5/cyPm.c ****     {
 460:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore Master clock divider */
 461:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 462:.\Generated_Source\PSoC5/cyPm.c ****         {
 463:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 464:.\Generated_Source\PSoC5/cyPm.c ****         }
 465:.\Generated_Source\PSoC5/cyPm.c **** 
 466:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore Master clock source */
 467:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 468:.\Generated_Source\PSoC5/cyPm.c ****     }
 469:.\Generated_Source\PSoC5/cyPm.c **** 
 470:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - disable if it was originally disabled */
 471:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_DISABLED == cyPmClockBackup.imoEnable) &&
 472:.\Generated_Source\PSoC5/cyPm.c ****        (0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 473:.\Generated_Source\PSoC5/cyPm.c ****     {
 474:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Stop();
 475:.\Generated_Source\PSoC5/cyPm.c ****     }
 476:.\Generated_Source\PSoC5/cyPm.c **** 
 477:.\Generated_Source\PSoC5/cyPm.c ****     /* Bus clock - restore divider, if needed */
 478:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp = (uint16) ((uint16)CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 479:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp |= CY_PM_CLK_BUS_LSB_DIV_REG;
 480:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkBusDiv != clkBusDivTmp)
 481:.\Generated_Source\PSoC5/cyPm.c ****     {
 482:.\Generated_Source\PSoC5/cyPm.c ****         CyBusClk_SetDivider(cyPmClockBackup.clkBusDiv);
 483:.\Generated_Source\PSoC5/cyPm.c ****     }
 484:.\Generated_Source\PSoC5/cyPm.c **** 
 485:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore flash wait cycles */
 486:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_CACHE_CR_REG = ((CY_PM_CACHE_CR_REG & ((uint8)(~CY_PM_CACHE_CR_CYCLES_MASK))) |
 487:.\Generated_Source\PSoC5/cyPm.c ****                            cyPmClockBackup.flashWaitCycles);
 488:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 10


 489:.\Generated_Source\PSoC5/cyPm.c ****     /* Digital and analog clocks - restore state */
 490:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG = cyPmClockBackup.enClkA;
 491:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG2_REG = cyPmClockBackup.enClkD;
 492:.\Generated_Source\PSoC5/cyPm.c **** }
 493:.\Generated_Source\PSoC5/cyPm.c **** 
 494:.\Generated_Source\PSoC5/cyPm.c **** 
 495:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
 496:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmAltAct
 497:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
 498:.\Generated_Source\PSoC5/cyPm.c **** *
 499:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
 500:.\Generated_Source\PSoC5/cyPm.c **** *  Puts the part into the Alternate Active (Standby) state. The Alternate Active
 501:.\Generated_Source\PSoC5/cyPm.c **** *  state can allow for any of the capabilities of the device to be active, but
 502:.\Generated_Source\PSoC5/cyPm.c **** *  the operation of this function is dependent on the CPU being disabled during
 503:.\Generated_Source\PSoC5/cyPm.c **** *  the Alternate Active state. The configuration code and the component APIs
 504:.\Generated_Source\PSoC5/cyPm.c **** *  will configure the template for the Alternate Active state to be the same as
 505:.\Generated_Source\PSoC5/cyPm.c **** *  the Active state with the exception that the CPU will be disabled during
 506:.\Generated_Source\PSoC5/cyPm.c **** *  Alternate Active.
 507:.\Generated_Source\PSoC5/cyPm.c **** *
 508:.\Generated_Source\PSoC5/cyPm.c **** *  Note Before calling this function, you must manually configure the power mode
 509:.\Generated_Source\PSoC5/cyPm.c **** *  of the source clocks for the timer that is used as the wakeup timer.
 510:.\Generated_Source\PSoC5/cyPm.c **** *
 511:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 3:
 512:.\Generated_Source\PSoC5/cyPm.c **** *  Before switching to Alternate Active, if a wakeupTime other than NONE is
 513:.\Generated_Source\PSoC5/cyPm.c **** *  specified, then the appropriate timer state is configured as specified with
 514:.\Generated_Source\PSoC5/cyPm.c **** *  the interrupt for that timer disabled.  The wakeup source will be the
 515:.\Generated_Source\PSoC5/cyPm.c **** *  combination of the values specified in the wakeupSource and any timer
 516:.\Generated_Source\PSoC5/cyPm.c **** *  specified in the wakeupTime argument.  Once the wakeup condition is
 517:.\Generated_Source\PSoC5/cyPm.c **** *  satisfied, then all saved state is restored and the function returns in the
 518:.\Generated_Source\PSoC5/cyPm.c **** *  Active state.
 519:.\Generated_Source\PSoC5/cyPm.c **** *
 520:.\Generated_Source\PSoC5/cyPm.c **** *  Note that if the wakeupTime is made with a different value, the period before
 521:.\Generated_Source\PSoC5/cyPm.c **** *  the wakeup occurs can be significantly shorter than the specified time.  If
 522:.\Generated_Source\PSoC5/cyPm.c **** *  the next call is made with the same wakeupTime value, then the wakeup will
 523:.\Generated_Source\PSoC5/cyPm.c **** *  occur the specified period after the previous wakeup occurred.
 524:.\Generated_Source\PSoC5/cyPm.c **** *
 525:.\Generated_Source\PSoC5/cyPm.c **** *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 526:.\Generated_Source\PSoC5/cyPm.c **** *  specified timer will be left as specified by wakeupTime with the timer
 527:.\Generated_Source\PSoC5/cyPm.c **** *  enabled and the interrupt disabled.  If the CTW, FTW or One PPS is already
 528:.\Generated_Source\PSoC5/cyPm.c **** *  configured for wakeup, for example with the SleepTimer or RTC components,
 529:.\Generated_Source\PSoC5/cyPm.c **** *  then specify NONE for the wakeupTime and include the appropriate source for
 530:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupSource.
 531:.\Generated_Source\PSoC5/cyPm.c **** *
 532:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 5LP:
 533:.\Generated_Source\PSoC5/cyPm.c **** *  This function is used to both enter the Alternate Active mode and halt the
 534:.\Generated_Source\PSoC5/cyPm.c **** *  processor.  For PSoC 3 these two actions must be paired together.  With PSoC
 535:.\Generated_Source\PSoC5/cyPm.c **** *  5LP the processor can be halted independently with the __WFI() function from
 536:.\Generated_Source\PSoC5/cyPm.c **** *  the CMSIS library that is included in Creator.  This function should be used
 537:.\Generated_Source\PSoC5/cyPm.c **** *  instead when the action required is just to halt the processor until an
 538:.\Generated_Source\PSoC5/cyPm.c **** *  enabled interrupt occurs.
 539:.\Generated_Source\PSoC5/cyPm.c **** *
 540:.\Generated_Source\PSoC5/cyPm.c **** *  The wakeupTime parameter is not used for this device. It must be set to zero
 541:.\Generated_Source\PSoC5/cyPm.c **** *  (PM_ALT_ACT_TIME_NONE). The wake up time configuration can be done by a
 542:.\Generated_Source\PSoC5/cyPm.c **** *  separate component: the CTW wakeup interval should be configured with the
 543:.\Generated_Source\PSoC5/cyPm.c **** *  Sleep Timer component and one second interval should be configured with the
 544:.\Generated_Source\PSoC5/cyPm.c **** *  RTC component.
 545:.\Generated_Source\PSoC5/cyPm.c **** *
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 11


 546:.\Generated_Source\PSoC5/cyPm.c **** *  The wakeup behavior depends on the wakeupSource parameter in the following
 547:.\Generated_Source\PSoC5/cyPm.c **** *  manner: upon function execution the device will be switched from Active to
 548:.\Generated_Source\PSoC5/cyPm.c **** *  Alternate Active mode and then the CPU will be halted. When an enabled wakeup
 549:.\Generated_Source\PSoC5/cyPm.c **** *  event occurs the device will return to Active mode.  Similarly when an
 550:.\Generated_Source\PSoC5/cyPm.c **** *  enabled interrupt occurs the CPU will be started. These two actions will
 551:.\Generated_Source\PSoC5/cyPm.c **** *  occur together provided that the event that occurs is an enabled wakeup
 552:.\Generated_Source\PSoC5/cyPm.c **** *  source and also generates an interrupt. If just the wakeup event occurs then
 553:.\Generated_Source\PSoC5/cyPm.c **** *  the device will be in Active mode, but the CPU will remain halted waiting for
 554:.\Generated_Source\PSoC5/cyPm.c **** *  an interrupt. If an interrupt occurs from something other than a wakeup
 555:.\Generated_Source\PSoC5/cyPm.c **** *  source, then the CPU will restart with the device in Alternate Active mode
 556:.\Generated_Source\PSoC5/cyPm.c **** *  until a wakeup event occurs.
 557:.\Generated_Source\PSoC5/cyPm.c **** *
 558:.\Generated_Source\PSoC5/cyPm.c **** *  For example, if CyPmAltAct(PM_ALT_ACT_TIME_NONE, PM_ALT_ACT_SRC_PICU) is
 559:.\Generated_Source\PSoC5/cyPm.c **** *  called and PICU interrupt occurs, the CPU will be started and device will be
 560:.\Generated_Source\PSoC5/cyPm.c **** *  switched into Active mode. And if CyPmAltAct(PM_ALT_ACT_TIME_NONE,
 561:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_NONE) is called and PICU interrupt occurs, the CPU will be
 562:.\Generated_Source\PSoC5/cyPm.c **** *  started while device remains in Alternate Active mode.
 563:.\Generated_Source\PSoC5/cyPm.c **** *
 564:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
 565:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupTime: Specifies a timer wakeup source and the frequency of that
 566:.\Generated_Source\PSoC5/cyPm.c **** *              source. For PSoC 5LP this parameter is ignored.
 567:.\Generated_Source\PSoC5/cyPm.c **** *
 568:.\Generated_Source\PSoC5/cyPm.c **** *           Define                      Time
 569:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_NONE             None
 570:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_ONE_PPS          One PPS: 1 second
 571:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_2MS          CTW: 2 ms
 572:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_4MS          CTW: 4 ms
 573:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_8MS          CTW: 8 ms
 574:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_16MS         CTW: 16 ms
 575:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_32MS         CTW: 32 ms
 576:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_64MS         CTW: 64 ms
 577:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_128MS        CTW: 128 ms
 578:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_256MS        CTW: 256 ms
 579:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_512MS        CTW: 512 ms
 580:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_1024MS       CTW: 1024 ms
 581:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_2048MS       CTW: 2048 ms
 582:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_4096MS       CTW: 4096 ms
 583:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_FTW(1-256)*       FTW: 10us to 2.56 ms
 584:.\Generated_Source\PSoC5/cyPm.c **** *
 585:.\Generated_Source\PSoC5/cyPm.c **** *  *Note:   PM_ALT_ACT_TIME_FTW() is a macro that takes an argument that
 586:.\Generated_Source\PSoC5/cyPm.c **** *           specifies how many increments of 10 us to delay.
 587:.\Generated_Source\PSoC5/cyPm.c ****             For PSoC 3 silicon the valid range of  values is 1 to 256.
 588:.\Generated_Source\PSoC5/cyPm.c **** *
 589:.\Generated_Source\PSoC5/cyPm.c **** *  wakeUpSource:    Specifies a bitwise mask of wakeup sources. In addition, if
 590:.\Generated_Source\PSoC5/cyPm.c **** *                   a wakeupTime has been specified, the associated timer will be
 591:.\Generated_Source\PSoC5/cyPm.c **** *                   included as a wakeup source.
 592:.\Generated_Source\PSoC5/cyPm.c **** *
 593:.\Generated_Source\PSoC5/cyPm.c **** *           Define                      Source
 594:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_NONE              None
 595:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_COMPARATOR0       Comparator 0
 596:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_COMPARATOR1       Comparator 1
 597:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_COMPARATOR2       Comparator 2
 598:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_COMPARATOR3       Comparator 3
 599:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_INTERRUPT         Interrupt
 600:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_PICU              PICU
 601:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_I2C               I2C
 602:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_BOOSTCONVERTER    Boost Converter
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 12


 603:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_FTW               Fast Timewheel*
 604:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_VD                High and Low Voltage Detection (HVI, LVI)*
 605:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_CTW               Central Timewheel**
 606:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_ONE_PPS           One PPS**
 607:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_LCD               LCD
 608:.\Generated_Source\PSoC5/cyPm.c **** *
 609:.\Generated_Source\PSoC5/cyPm.c **** *  *Note : FTW and HVI/LVI wakeup signals are in the same mask bit.
 610:.\Generated_Source\PSoC5/cyPm.c **** *  **Note: CTW and One PPS wakeup signals are in the same mask bit.
 611:.\Generated_Source\PSoC5/cyPm.c **** *
 612:.\Generated_Source\PSoC5/cyPm.c **** *  When specifying a Comparator as the wakeupSource, an instance specific define
 613:.\Generated_Source\PSoC5/cyPm.c **** *  that will track with the specific comparator that the instance
 614:.\Generated_Source\PSoC5/cyPm.c **** *  is placed into should be used. As an example, for a Comparator instance named MyComp the
 615:.\Generated_Source\PSoC5/cyPm.c **** *  value to OR into the mask is: MyComp_ctComp__CMP_MASK.
 616:.\Generated_Source\PSoC5/cyPm.c **** *
 617:.\Generated_Source\PSoC5/cyPm.c **** *  When CTW, FTW or One PPS is used as a wakeup source, the CyPmReadStatus()
 618:.\Generated_Source\PSoC5/cyPm.c **** *  function must be called upon wakeup with a corresponding parameter. Please
 619:.\Generated_Source\PSoC5/cyPm.c **** *  refer to the CyPmReadStatus() API in the System Reference Guide for more
 620:.\Generated_Source\PSoC5/cyPm.c **** *  information.
 621:.\Generated_Source\PSoC5/cyPm.c **** *
 622:.\Generated_Source\PSoC5/cyPm.c **** * Return:
 623:.\Generated_Source\PSoC5/cyPm.c **** *  None
 624:.\Generated_Source\PSoC5/cyPm.c **** *
 625:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
 626:.\Generated_Source\PSoC5/cyPm.c **** *  No
 627:.\Generated_Source\PSoC5/cyPm.c **** *
 628:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
 629:.\Generated_Source\PSoC5/cyPm.c **** *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 630:.\Generated_Source\PSoC5/cyPm.c **** *  specified timer will be left as specified by wakeupTime with the timer
 631:.\Generated_Source\PSoC5/cyPm.c **** *  enabled and the interrupt disabled.  Also, the ILO 1 KHz (if CTW timer is
 632:.\Generated_Source\PSoC5/cyPm.c **** *  used as wakeup time) or ILO 100 KHz (if the FTW timer is used as wakeup time)
 633:.\Generated_Source\PSoC5/cyPm.c **** *  will be left started.
 634:.\Generated_Source\PSoC5/cyPm.c **** *
 635:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
 636:.\Generated_Source\PSoC5/cyPm.c **** void CyPmAltAct(uint16 wakeupTime, uint16 wakeupSource) 
 637:.\Generated_Source\PSoC5/cyPm.c **** {
 638:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC5)
 639:.\Generated_Source\PSoC5/cyPm.c **** 
 640:.\Generated_Source\PSoC5/cyPm.c ****         /* Arguments expected to be 0 */
 641:.\Generated_Source\PSoC5/cyPm.c ****         CYASSERT(PM_ALT_ACT_TIME_NONE == wakeupTime);
 642:.\Generated_Source\PSoC5/cyPm.c **** 
 643:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != wakeupTime)
 644:.\Generated_Source\PSoC5/cyPm.c ****         {
 645:.\Generated_Source\PSoC5/cyPm.c ****             /* To remove unreferenced local variable warning */
 646:.\Generated_Source\PSoC5/cyPm.c ****         }
 647:.\Generated_Source\PSoC5/cyPm.c **** 
 648:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC5) */
 649:.\Generated_Source\PSoC5/cyPm.c **** 
 650:.\Generated_Source\PSoC5/cyPm.c **** 
 651:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
 652:.\Generated_Source\PSoC5/cyPm.c **** 
 653:.\Generated_Source\PSoC5/cyPm.c ****         /* FTW - save current and set new configuration */
 654:.\Generated_Source\PSoC5/cyPm.c ****         if((wakeupTime >= PM_ALT_ACT_TIME_FTW(1u)) && (wakeupTime <= PM_ALT_ACT_TIME_FTW(256u)))
 655:.\Generated_Source\PSoC5/cyPm.c ****         {
 656:.\Generated_Source\PSoC5/cyPm.c ****             CyPmFtwSetInterval(PM_ALT_ACT_FTW_INTERVAL(wakeupTime));
 657:.\Generated_Source\PSoC5/cyPm.c **** 
 658:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 659:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_ALT_ACT_SRC_FTW;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 13


 660:.\Generated_Source\PSoC5/cyPm.c ****         }
 661:.\Generated_Source\PSoC5/cyPm.c **** 
 662:.\Generated_Source\PSoC5/cyPm.c ****         /* CTW - save current and set new configuration */
 663:.\Generated_Source\PSoC5/cyPm.c ****         if((wakeupTime >= PM_ALT_ACT_TIME_CTW_2MS) && (wakeupTime <= PM_ALT_ACT_TIME_CTW_4096MS))
 664:.\Generated_Source\PSoC5/cyPm.c ****         {
 665:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current CTW configuration and set new one */
 666:.\Generated_Source\PSoC5/cyPm.c ****             CyPmCtwSetInterval((uint8)(wakeupTime - 1u));
 667:.\Generated_Source\PSoC5/cyPm.c **** 
 668:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 669:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_ALT_ACT_SRC_CTW;
 670:.\Generated_Source\PSoC5/cyPm.c ****         }
 671:.\Generated_Source\PSoC5/cyPm.c **** 
 672:.\Generated_Source\PSoC5/cyPm.c ****         /* 1PPS - save current and set new configuration */
 673:.\Generated_Source\PSoC5/cyPm.c ****         if(PM_ALT_ACT_TIME_ONE_PPS == wakeupTime)
 674:.\Generated_Source\PSoC5/cyPm.c ****         {
 675:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current 1PPS configuration and set new one */
 676:.\Generated_Source\PSoC5/cyPm.c ****             CyPmOppsSet();
 677:.\Generated_Source\PSoC5/cyPm.c **** 
 678:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 679:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_ALT_ACT_SRC_ONE_PPS;
 680:.\Generated_Source\PSoC5/cyPm.c ****         }
 681:.\Generated_Source\PSoC5/cyPm.c **** 
 682:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
 683:.\Generated_Source\PSoC5/cyPm.c **** 
 684:.\Generated_Source\PSoC5/cyPm.c **** 
 685:.\Generated_Source\PSoC5/cyPm.c ****     /* Save and set new wake up configuration */
 686:.\Generated_Source\PSoC5/cyPm.c **** 
 687:.\Generated_Source\PSoC5/cyPm.c ****     /* Interrupt, PICU, I2C, Boost converter, CTW/1PPS */
 688:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 689:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 690:.\Generated_Source\PSoC5/cyPm.c **** 
 691:.\Generated_Source\PSoC5/cyPm.c ****     /* Comparators */
 692:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 693:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 694:.\Generated_Source\PSoC5/cyPm.c **** 
 695:.\Generated_Source\PSoC5/cyPm.c ****     /* LCD */
 696:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 697:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 698:.\Generated_Source\PSoC5/cyPm.c **** 
 699:.\Generated_Source\PSoC5/cyPm.c **** 
 700:.\Generated_Source\PSoC5/cyPm.c ****     /* Switch to the Alternate Active mode */
 701:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_A
 702:.\Generated_Source\PSoC5/cyPm.c **** 
 703:.\Generated_Source\PSoC5/cyPm.c ****     /* Recommended readback. */
 704:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
 705:.\Generated_Source\PSoC5/cyPm.c **** 
 706:.\Generated_Source\PSoC5/cyPm.c ****     /* Two recommended NOPs to get into the mode. */
 707:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 708:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 709:.\Generated_Source\PSoC5/cyPm.c **** 
 710:.\Generated_Source\PSoC5/cyPm.c ****     /* Execute WFI instruction (for ARM-based devices only) */
 711:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
 712:.\Generated_Source\PSoC5/cyPm.c **** 
 713:.\Generated_Source\PSoC5/cyPm.c ****     /* Point of return from Alternate Active Mode */
 714:.\Generated_Source\PSoC5/cyPm.c **** 
 715:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore wake up configuration */
 716:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 14


 717:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 718:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 719:.\Generated_Source\PSoC5/cyPm.c **** }
 720:.\Generated_Source\PSoC5/cyPm.c **** 
 721:.\Generated_Source\PSoC5/cyPm.c **** 
 722:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
 723:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmSleep
 724:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
 725:.\Generated_Source\PSoC5/cyPm.c **** *
 726:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
 727:.\Generated_Source\PSoC5/cyPm.c **** *  Puts the part into the Sleep state.
 728:.\Generated_Source\PSoC5/cyPm.c **** *
 729:.\Generated_Source\PSoC5/cyPm.c **** *  Note Before calling this function, you must manually configure the power
 730:.\Generated_Source\PSoC5/cyPm.c **** *  mode of the source clocks for the timer that is used as the wakeup timer.
 731:.\Generated_Source\PSoC5/cyPm.c **** *
 732:.\Generated_Source\PSoC5/cyPm.c **** *  Note Before calling this function, you must prepare clock tree configuration
 733:.\Generated_Source\PSoC5/cyPm.c **** *  for the low power mode by calling CyPmSaveClocks(). And restore clock
 734:.\Generated_Source\PSoC5/cyPm.c **** *  configuration after CyPmSleep() execution by calling CyPmRestoreClocks(). See
 735:.\Generated_Source\PSoC5/cyPm.c **** *  Power Management section, Clock Configuration subsection of the System
 736:.\Generated_Source\PSoC5/cyPm.c **** *  Reference Guide for more information.
 737:.\Generated_Source\PSoC5/cyPm.c **** *
 738:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 3:
 739:.\Generated_Source\PSoC5/cyPm.c **** *  Before switching to Sleep, if a wakeupTime other than NONE is specified,
 740:.\Generated_Source\PSoC5/cyPm.c **** *  then the appropriate timer state is configured as specified with the
 741:.\Generated_Source\PSoC5/cyPm.c **** *  interrupt for that timer disabled.  The wakeup source will be a combination
 742:.\Generated_Source\PSoC5/cyPm.c **** *  of the values specified in the wakeupSource and any timer specified in the
 743:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupTime argument.  Once the wakeup condition is satisfied, then all saved
 744:.\Generated_Source\PSoC5/cyPm.c **** *  state is restored and the function returns in the Active state.
 745:.\Generated_Source\PSoC5/cyPm.c **** *
 746:.\Generated_Source\PSoC5/cyPm.c **** *  Note that if the wakeupTime is made with a different value, the period before
 747:.\Generated_Source\PSoC5/cyPm.c **** *  the wakeup occurs can be significantly shorter than the specified time.  If
 748:.\Generated_Source\PSoC5/cyPm.c **** *  the next call is made with the same wakeupTime value, then the wakeup will
 749:.\Generated_Source\PSoC5/cyPm.c **** *  occur the specified period after the previous wakeup occurred.
 750:.\Generated_Source\PSoC5/cyPm.c **** *
 751:.\Generated_Source\PSoC5/cyPm.c **** *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 752:.\Generated_Source\PSoC5/cyPm.c **** *  specified timer will be left as specified by wakeupTime with the timer
 753:.\Generated_Source\PSoC5/cyPm.c **** *  enabled and the interrupt disabled.  If the CTW or One PPS is already
 754:.\Generated_Source\PSoC5/cyPm.c **** *  configured for wakeup, for example with the SleepTimer or RTC components,
 755:.\Generated_Source\PSoC5/cyPm.c **** *  then specify NONE for the wakeupTime and include the appropriate source for
 756:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupSource.
 757:.\Generated_Source\PSoC5/cyPm.c **** *
 758:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 5LP:
 759:.\Generated_Source\PSoC5/cyPm.c **** *  The wakeupTime parameter is not used and the only NONE can be specified.
 760:.\Generated_Source\PSoC5/cyPm.c **** *  The wakeup time must be configured with the component, SleepTimer for CTW
 761:.\Generated_Source\PSoC5/cyPm.c **** *  intervals and RTC for 1PPS interval. The component must be configured to
 762:.\Generated_Source\PSoC5/cyPm.c **** *  generate interrupt.
 763:.\Generated_Source\PSoC5/cyPm.c **** *
 764:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
 765:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupTime:      Specifies a timer wakeup source and the frequency of that
 766:.\Generated_Source\PSoC5/cyPm.c **** *                   source. For PSoC 5LP, this parameter is ignored.
 767:.\Generated_Source\PSoC5/cyPm.c **** *
 768:.\Generated_Source\PSoC5/cyPm.c **** *           Define                      Time
 769:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_NONE               None
 770:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_ONE_PPS            One PPS: 1 second
 771:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_2MS            CTW: 2 ms
 772:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_4MS            CTW: 4 ms
 773:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_8MS            CTW: 8 ms
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 15


 774:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_16MS           CTW: 16 ms
 775:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_32MS           CTW: 32 ms
 776:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_64MS           CTW: 64 ms
 777:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_128MS          CTW: 128 ms
 778:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_256MS          CTW: 256 ms
 779:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_512MS          CTW: 512 ms
 780:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_1024MS         CTW: 1024 ms
 781:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_2048MS         CTW: 2048 ms
 782:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_4096MS         CTW: 4096 ms
 783:.\Generated_Source\PSoC5/cyPm.c **** *
 784:.\Generated_Source\PSoC5/cyPm.c **** *  wakeUpSource:    Specifies a bitwise mask of wakeup sources. In addition, if
 785:.\Generated_Source\PSoC5/cyPm.c **** *                   a wakeupTime has been specified the associated timer will be
 786:.\Generated_Source\PSoC5/cyPm.c **** *                   included as a wakeup source.
 787:.\Generated_Source\PSoC5/cyPm.c **** *
 788:.\Generated_Source\PSoC5/cyPm.c **** *           Define                      Source
 789:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_NONE                None
 790:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_COMPARATOR0         Comparator 0
 791:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_COMPARATOR1         Comparator 1
 792:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_COMPARATOR2         Comparator 2
 793:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_COMPARATOR3         Comparator 3
 794:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_PICU                PICU
 795:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_I2C                 I2C
 796:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_BOOSTCONVERTER      Boost Converter
 797:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_VD                  High and Low Voltage Detection (HVI, LVI)
 798:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_CTW                 Central Timewheel*
 799:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_ONE_PPS             One PPS*
 800:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_LCD                 LCD
 801:.\Generated_Source\PSoC5/cyPm.c **** *
 802:.\Generated_Source\PSoC5/cyPm.c **** *  *Note:   CTW and One PPS wakeup signals are in the same mask bit.
 803:.\Generated_Source\PSoC5/cyPm.c **** *
 804:.\Generated_Source\PSoC5/cyPm.c **** *  When specifying a Comparator as the wakeupSource an instance specific define
 805:.\Generated_Source\PSoC5/cyPm.c **** *  should be used that will track with the specific comparator that the instance
 806:.\Generated_Source\PSoC5/cyPm.c **** *  is placed into. As an example for a Comparator instance named MyComp the
 807:.\Generated_Source\PSoC5/cyPm.c **** *  value to OR into the mask is: MyComp_ctComp__CMP_MASK.
 808:.\Generated_Source\PSoC5/cyPm.c **** *
 809:.\Generated_Source\PSoC5/cyPm.c **** *  When CTW or One PPS is used as a wakeup source, the CyPmReadStatus()
 810:.\Generated_Source\PSoC5/cyPm.c **** *  function must be called upon wakeup with corresponding parameter. Please
 811:.\Generated_Source\PSoC5/cyPm.c **** *  refer to the CyPmReadStatus() API in the System Reference Guide for more
 812:.\Generated_Source\PSoC5/cyPm.c **** *  information.
 813:.\Generated_Source\PSoC5/cyPm.c **** *
 814:.\Generated_Source\PSoC5/cyPm.c **** * Return:
 815:.\Generated_Source\PSoC5/cyPm.c **** *  None
 816:.\Generated_Source\PSoC5/cyPm.c **** *
 817:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
 818:.\Generated_Source\PSoC5/cyPm.c **** *  No
 819:.\Generated_Source\PSoC5/cyPm.c **** *
 820:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects and Restrictions:
 821:.\Generated_Source\PSoC5/cyPm.c **** *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 822:.\Generated_Source\PSoC5/cyPm.c **** *  specified timer will be left as specified by wakeupTime with the timer
 823:.\Generated_Source\PSoC5/cyPm.c **** *  enabled and the interrupt disabled. Also, the ILO 1 KHz (if CTW timer is
 824:.\Generated_Source\PSoC5/cyPm.c **** *  used as wake up time) will be left started.
 825:.\Generated_Source\PSoC5/cyPm.c **** *
 826:.\Generated_Source\PSoC5/cyPm.c **** *  The 1 kHz ILO clock is expected to be enabled for PSoC 3 and PSoC 5LP to
 827:.\Generated_Source\PSoC5/cyPm.c **** *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
 828:.\Generated_Source\PSoC5/cyPm.c **** *  delay is measured using rising edges of the 1 kHz ILO.
 829:.\Generated_Source\PSoC5/cyPm.c **** *
 830:.\Generated_Source\PSoC5/cyPm.c **** *  For PSoC 3 silicon hardware buzz should be disabled before entering a sleep
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 16


 831:.\Generated_Source\PSoC5/cyPm.c **** *  power mode. It is disabled by PSoC Creator during startup.
 832:.\Generated_Source\PSoC5/cyPm.c **** *  If a Low Voltage Interrupt (LVI), High Voltage Interrupt (HVI) or Brown Out
 833:.\Generated_Source\PSoC5/cyPm.c **** *  detect (power supply supervising capabilities) are required in a design
 834:.\Generated_Source\PSoC5/cyPm.c **** *  during sleep, use the Central Time Wheel (CTW) to periodically wake the
 835:.\Generated_Source\PSoC5/cyPm.c **** *  device, perform software buzz, and refresh the supervisory services. If LVI,
 836:.\Generated_Source\PSoC5/cyPm.c **** *  HVI, or Brown Out is not required, then CTW is not required.
 837:.\Generated_Source\PSoC5/cyPm.c **** *  Refer to the device errata for more information.
 838:.\Generated_Source\PSoC5/cyPm.c **** *
 839:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
 840:.\Generated_Source\PSoC5/cyPm.c **** void CyPmSleep(uint8 wakeupTime, uint16 wakeupSource) 
 841:.\Generated_Source\PSoC5/cyPm.c **** {
 842:.\Generated_Source\PSoC5/cyPm.c ****     uint8 interruptState;
 843:.\Generated_Source\PSoC5/cyPm.c **** 
 844:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current global interrupt enable and disable it */
 845:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 846:.\Generated_Source\PSoC5/cyPm.c **** 
 847:.\Generated_Source\PSoC5/cyPm.c **** 
 848:.\Generated_Source\PSoC5/cyPm.c ****     /***********************************************************************
 849:.\Generated_Source\PSoC5/cyPm.c ****     * The Hibernate/Sleep regulator has a settling time after a reset.
 850:.\Generated_Source\PSoC5/cyPm.c ****     * During this time, the system ignores requests to enter Sleep and
 851:.\Generated_Source\PSoC5/cyPm.c ****     * Hibernate modes. The holdoff delay is measured using rising edges of
 852:.\Generated_Source\PSoC5/cyPm.c ****     * the 1 kHz ILO.
 853:.\Generated_Source\PSoC5/cyPm.c ****     ***********************************************************************/
 854:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 855:.\Generated_Source\PSoC5/cyPm.c ****     {
 856:.\Generated_Source\PSoC5/cyPm.c ****         /* Disable hold off - no action on restore */
 857:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 858:.\Generated_Source\PSoC5/cyPm.c ****     }
 859:.\Generated_Source\PSoC5/cyPm.c ****     else
 860:.\Generated_Source\PSoC5/cyPm.c ****     {
 861:.\Generated_Source\PSoC5/cyPm.c ****         /* Abort, device is not ready for low power mode entry */
 862:.\Generated_Source\PSoC5/cyPm.c **** 
 863:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore global interrupt enable state */
 864:.\Generated_Source\PSoC5/cyPm.c ****         CyExitCriticalSection(interruptState);
 865:.\Generated_Source\PSoC5/cyPm.c **** 
 866:.\Generated_Source\PSoC5/cyPm.c ****         return;
 867:.\Generated_Source\PSoC5/cyPm.c ****     }
 868:.\Generated_Source\PSoC5/cyPm.c **** 
 869:.\Generated_Source\PSoC5/cyPm.c **** 
 870:.\Generated_Source\PSoC5/cyPm.c ****     /***********************************************************************
 871:.\Generated_Source\PSoC5/cyPm.c ****     * PSoC3 < TO6:
 872:.\Generated_Source\PSoC5/cyPm.c ****     * - Hardware buzz must be disabled before the sleep mode entry.
 873:.\Generated_Source\PSoC5/cyPm.c ****     * - Voltage supervision (HVI/LVI) requires hardware buzz, so they must
 874:.\Generated_Source\PSoC5/cyPm.c ****     *   be also disabled.
 875:.\Generated_Source\PSoC5/cyPm.c ****     *
 876:.\Generated_Source\PSoC5/cyPm.c ****     * PSoC3 >= TO6:
 877:.\Generated_Source\PSoC5/cyPm.c ****     * - Voltage supervision (HVI/LVI) requires hardware buzz, so hardware buzz must be
 878:.\Generated_Source\PSoC5/cyPm.c ****     *   enabled before the sleep mode entry and restored on the wakeup.
 879:.\Generated_Source\PSoC5/cyPm.c ****     ***********************************************************************/
 880:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
 881:.\Generated_Source\PSoC5/cyPm.c **** 
 882:.\Generated_Source\PSoC5/cyPm.c ****         /* Silicon Revision ID is below TO6 */
 883:.\Generated_Source\PSoC5/cyPm.c ****         if(CYDEV_CHIP_REV_ACTUAL < 5u)
 884:.\Generated_Source\PSoC5/cyPm.c ****         {
 885:.\Generated_Source\PSoC5/cyPm.c ****             /* Hardware buzz expected to be disabled in Sleep mode */
 886:.\Generated_Source\PSoC5/cyPm.c ****             CYASSERT(0u == (CY_PM_PWRSYS_WAKE_TR2_REG & CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ));
 887:.\Generated_Source\PSoC5/cyPm.c ****         }
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 17


 888:.\Generated_Source\PSoC5/cyPm.c **** 
 889:.\Generated_Source\PSoC5/cyPm.c **** 
 890:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (CY_PM_RESET_CR1_REG & (CY_PM_RESET_CR1_HVIA_EN |
 891:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_RESET_CR1_LVIA_EN | CY_PM_RESET_CR1_LVID_EN)))
 892:.\Generated_Source\PSoC5/cyPm.c ****         {
 893:.\Generated_Source\PSoC5/cyPm.c ****             if(CYDEV_CHIP_REV_ACTUAL < 5u)
 894:.\Generated_Source\PSoC5/cyPm.c ****             {
 895:.\Generated_Source\PSoC5/cyPm.c ****                 /* LVI/HVI requires hardware buzz to be enabled */
 896:.\Generated_Source\PSoC5/cyPm.c ****                 CYASSERT(0u != 0u);
 897:.\Generated_Source\PSoC5/cyPm.c ****             }
 898:.\Generated_Source\PSoC5/cyPm.c ****             else
 899:.\Generated_Source\PSoC5/cyPm.c ****             {
 900:.\Generated_Source\PSoC5/cyPm.c ****                 if (0u == (CY_PM_PWRSYS_WAKE_TR2_REG & CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ))
 901:.\Generated_Source\PSoC5/cyPm.c ****                 {
 902:.\Generated_Source\PSoC5/cyPm.c ****                     cyPmBackup.hardwareBuzz = CY_PM_DISABLED;
 903:.\Generated_Source\PSoC5/cyPm.c ****                     CY_PM_PWRSYS_WAKE_TR2_REG |= CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ;
 904:.\Generated_Source\PSoC5/cyPm.c ****                 }
 905:.\Generated_Source\PSoC5/cyPm.c ****                 else
 906:.\Generated_Source\PSoC5/cyPm.c ****                 {
 907:.\Generated_Source\PSoC5/cyPm.c ****                     cyPmBackup.hardwareBuzz = CY_PM_ENABLED;
 908:.\Generated_Source\PSoC5/cyPm.c ****                 }
 909:.\Generated_Source\PSoC5/cyPm.c ****             }
 910:.\Generated_Source\PSoC5/cyPm.c ****         }
 911:.\Generated_Source\PSoC5/cyPm.c **** 
 912:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
 913:.\Generated_Source\PSoC5/cyPm.c **** 
 914:.\Generated_Source\PSoC5/cyPm.c **** 
 915:.\Generated_Source\PSoC5/cyPm.c ****     /*******************************************************************************
 916:.\Generated_Source\PSoC5/cyPm.c ****     * For ARM-based devices,interrupt is required for the CPU to wake up. The
 917:.\Generated_Source\PSoC5/cyPm.c ****     * Power Management implementation assumes that wakeup time is configured with a
 918:.\Generated_Source\PSoC5/cyPm.c ****     * separate component (component-based wakeup time configuration) for
 919:.\Generated_Source\PSoC5/cyPm.c ****     * interrupt to be issued on terminal count. For more information, refer to the
 920:.\Generated_Source\PSoC5/cyPm.c ****     * Wakeup Time Configuration section of System Reference Guide.
 921:.\Generated_Source\PSoC5/cyPm.c ****     *******************************************************************************/
 922:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC5)
 923:.\Generated_Source\PSoC5/cyPm.c **** 
 924:.\Generated_Source\PSoC5/cyPm.c ****         /* Arguments expected to be 0 */
 925:.\Generated_Source\PSoC5/cyPm.c ****         CYASSERT(PM_SLEEP_TIME_NONE == wakeupTime);
 926:.\Generated_Source\PSoC5/cyPm.c **** 
 927:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != wakeupTime)
 928:.\Generated_Source\PSoC5/cyPm.c ****         {
 929:.\Generated_Source\PSoC5/cyPm.c ****             /* To remove unreferenced local variable warning */
 930:.\Generated_Source\PSoC5/cyPm.c ****         }
 931:.\Generated_Source\PSoC5/cyPm.c **** 
 932:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC5) */
 933:.\Generated_Source\PSoC5/cyPm.c **** 
 934:.\Generated_Source\PSoC5/cyPm.c **** 
 935:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpSaveSet();
 936:.\Generated_Source\PSoC5/cyPm.c **** 
 937:.\Generated_Source\PSoC5/cyPm.c **** 
 938:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
 939:.\Generated_Source\PSoC5/cyPm.c **** 
 940:.\Generated_Source\PSoC5/cyPm.c ****         /* CTW - save current and set new configuration */
 941:.\Generated_Source\PSoC5/cyPm.c ****         if((wakeupTime >= PM_SLEEP_TIME_CTW_2MS) && (wakeupTime <= PM_SLEEP_TIME_CTW_4096MS))
 942:.\Generated_Source\PSoC5/cyPm.c ****         {
 943:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current and set new configuration of CTW */
 944:.\Generated_Source\PSoC5/cyPm.c ****             CyPmCtwSetInterval((uint8)(wakeupTime - 1u));
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 18


 945:.\Generated_Source\PSoC5/cyPm.c **** 
 946:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 947:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_SLEEP_SRC_CTW;
 948:.\Generated_Source\PSoC5/cyPm.c ****         }
 949:.\Generated_Source\PSoC5/cyPm.c **** 
 950:.\Generated_Source\PSoC5/cyPm.c ****         /* 1PPS - save current and set new configuration */
 951:.\Generated_Source\PSoC5/cyPm.c ****         if(PM_SLEEP_TIME_ONE_PPS == wakeupTime)
 952:.\Generated_Source\PSoC5/cyPm.c ****         {
 953:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current and set new configuration of the 1PPS */
 954:.\Generated_Source\PSoC5/cyPm.c ****             CyPmOppsSet();
 955:.\Generated_Source\PSoC5/cyPm.c **** 
 956:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 957:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_SLEEP_SRC_ONE_PPS;
 958:.\Generated_Source\PSoC5/cyPm.c ****         }
 959:.\Generated_Source\PSoC5/cyPm.c **** 
 960:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
 961:.\Generated_Source\PSoC5/cyPm.c **** 
 962:.\Generated_Source\PSoC5/cyPm.c **** 
 963:.\Generated_Source\PSoC5/cyPm.c ****     /* Save and set new wake up configuration */
 964:.\Generated_Source\PSoC5/cyPm.c **** 
 965:.\Generated_Source\PSoC5/cyPm.c ****     /* Interrupt, PICU, I2C, Boost converter, CTW/1PPS */
 966:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 967:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 968:.\Generated_Source\PSoC5/cyPm.c **** 
 969:.\Generated_Source\PSoC5/cyPm.c ****     /* Comparators */
 970:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 971:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 972:.\Generated_Source\PSoC5/cyPm.c **** 
 973:.\Generated_Source\PSoC5/cyPm.c ****     /* LCD */
 974:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 975:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 976:.\Generated_Source\PSoC5/cyPm.c **** 
 977:.\Generated_Source\PSoC5/cyPm.c **** 
 978:.\Generated_Source\PSoC5/cyPm.c ****     /*******************************************************************
 979:.\Generated_Source\PSoC5/cyPm.c ****     * Do not use the merge region below unless any component datasheet
 980:.\Generated_Source\PSoC5/cyPm.c ****     * suggests doing so.
 981:.\Generated_Source\PSoC5/cyPm.c ****     *******************************************************************/
 982:.\Generated_Source\PSoC5/cyPm.c ****     /* `#START CY_PM_JUST_BEFORE_SLEEP` */
 983:.\Generated_Source\PSoC5/cyPm.c **** 
 984:.\Generated_Source\PSoC5/cyPm.c ****     /* `#END` */
 985:.\Generated_Source\PSoC5/cyPm.c **** 
 986:.\Generated_Source\PSoC5/cyPm.c **** 
 987:.\Generated_Source\PSoC5/cyPm.c ****     /* Last moment IMO frequency change */
 988:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
 989:.\Generated_Source\PSoC5/cyPm.c ****     {
 990:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO frequency is 12 MHz */
 991:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
 992:.\Generated_Source\PSoC5/cyPm.c ****     }
 993:.\Generated_Source\PSoC5/cyPm.c ****     else
 994:.\Generated_Source\PSoC5/cyPm.c ****     {
 995:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO frequency is not 12 MHz */
 996:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
 997:.\Generated_Source\PSoC5/cyPm.c **** 
 998:.\Generated_Source\PSoC5/cyPm.c ****         /* Save IMO frequency */
 999:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
1000:.\Generated_Source\PSoC5/cyPm.c **** 
1001:.\Generated_Source\PSoC5/cyPm.c ****         /* Set IMO frequency to 12 MHz */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 19


1002:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
1003:.\Generated_Source\PSoC5/cyPm.c ****     }
1004:.\Generated_Source\PSoC5/cyPm.c **** 
1005:.\Generated_Source\PSoC5/cyPm.c ****     /* Switch to Sleep mode */
1006:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_S
1007:.\Generated_Source\PSoC5/cyPm.c **** 
1008:.\Generated_Source\PSoC5/cyPm.c ****     /* Recommended readback. */
1009:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
1010:.\Generated_Source\PSoC5/cyPm.c **** 
1011:.\Generated_Source\PSoC5/cyPm.c ****     /* Two recommended NOPs to get into mode. */
1012:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
1013:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
1014:.\Generated_Source\PSoC5/cyPm.c **** 
1015:.\Generated_Source\PSoC5/cyPm.c ****     /* Execute WFI instruction (for ARM-based devices only) */
1016:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
1017:.\Generated_Source\PSoC5/cyPm.c **** 
1018:.\Generated_Source\PSoC5/cyPm.c ****     /* Point of return from Sleep Mode */
1019:.\Generated_Source\PSoC5/cyPm.c **** 
1020:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore last moment IMO frequency change */
1021:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
1022:.\Generated_Source\PSoC5/cyPm.c ****     {
1023:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
1024:.\Generated_Source\PSoC5/cyPm.c ****                                     cyPmBackup.imoActFreq;
1025:.\Generated_Source\PSoC5/cyPm.c ****     }
1026:.\Generated_Source\PSoC5/cyPm.c **** 
1027:.\Generated_Source\PSoC5/cyPm.c **** 
1028:.\Generated_Source\PSoC5/cyPm.c ****     /*******************************************************************
1029:.\Generated_Source\PSoC5/cyPm.c ****     * Do not use merge region below unless any component datasheet
1030:.\Generated_Source\PSoC5/cyPm.c ****     * suggest to do so.
1031:.\Generated_Source\PSoC5/cyPm.c ****     *******************************************************************/
1032:.\Generated_Source\PSoC5/cyPm.c ****     /* `#START CY_PM_JUST_AFTER_WAKEUP_FROM_SLEEP` */
1033:.\Generated_Source\PSoC5/cyPm.c **** 
1034:.\Generated_Source\PSoC5/cyPm.c ****     /* `#END` */
1035:.\Generated_Source\PSoC5/cyPm.c **** 
1036:.\Generated_Source\PSoC5/cyPm.c **** 
1037:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore hardware configuration */
1038:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpRestore();
1039:.\Generated_Source\PSoC5/cyPm.c **** 
1040:.\Generated_Source\PSoC5/cyPm.c **** 
1041:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable hardware buzz, if it was previously enabled */
1042:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
1043:.\Generated_Source\PSoC5/cyPm.c **** 
1044:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (CY_PM_RESET_CR1_REG & (CY_PM_RESET_CR1_HVIA_EN |
1045:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_RESET_CR1_LVIA_EN | CY_PM_RESET_CR1_LVID_EN)))
1046:.\Generated_Source\PSoC5/cyPm.c ****         {
1047:.\Generated_Source\PSoC5/cyPm.c ****             if(CYDEV_CHIP_REV_ACTUAL >= 5u)
1048:.\Generated_Source\PSoC5/cyPm.c ****             {
1049:.\Generated_Source\PSoC5/cyPm.c ****                 if (CY_PM_DISABLED == cyPmBackup.hardwareBuzz)
1050:.\Generated_Source\PSoC5/cyPm.c ****                 {
1051:.\Generated_Source\PSoC5/cyPm.c ****                     CY_PM_PWRSYS_WAKE_TR2_REG &= (uint8)(~CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ);
1052:.\Generated_Source\PSoC5/cyPm.c ****                 }
1053:.\Generated_Source\PSoC5/cyPm.c ****             }
1054:.\Generated_Source\PSoC5/cyPm.c ****         }
1055:.\Generated_Source\PSoC5/cyPm.c **** 
1056:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
1057:.\Generated_Source\PSoC5/cyPm.c **** 
1058:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 20


1059:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore current wake up configuration */
1060:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
1061:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
1062:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
1063:.\Generated_Source\PSoC5/cyPm.c **** 
1064:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore global interrupt enable state */
1065:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
1066:.\Generated_Source\PSoC5/cyPm.c **** }
1067:.\Generated_Source\PSoC5/cyPm.c **** 
1068:.\Generated_Source\PSoC5/cyPm.c **** 
1069:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1070:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibernate
1071:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1072:.\Generated_Source\PSoC5/cyPm.c **** *
1073:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1074:.\Generated_Source\PSoC5/cyPm.c **** *  Puts the part into the Hibernate state.
1075:.\Generated_Source\PSoC5/cyPm.c **** *
1076:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 3 and PSoC 5LP:
1077:.\Generated_Source\PSoC5/cyPm.c **** *  Before switching to Hibernate, the current status of the PICU wakeup source
1078:.\Generated_Source\PSoC5/cyPm.c **** *  bit is saved and then set. This configures the device to wake up from the
1079:.\Generated_Source\PSoC5/cyPm.c **** *  PICU. Make sure you have at least one pin configured to generate PICU
1080:.\Generated_Source\PSoC5/cyPm.c **** *  interrupt. For pin Px.y, the register "PICU_INTTYPE_PICUx_INTTYPEy" controls
1081:.\Generated_Source\PSoC5/cyPm.c **** *  the PICU behavior. In the TRM, this register is "PICU[0..15]_INTTYPE[0..7]."
1082:.\Generated_Source\PSoC5/cyPm.c **** *  In the Pins component datasheet, this register is referred to as the IRQ
1083:.\Generated_Source\PSoC5/cyPm.c **** *  option. Once the wakeup occurs, the PICU wakeup source bit is restored and
1084:.\Generated_Source\PSoC5/cyPm.c **** *  the PSoC returns to the Active state.
1085:.\Generated_Source\PSoC5/cyPm.c **** *
1086:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1087:.\Generated_Source\PSoC5/cyPm.c **** *  None
1088:.\Generated_Source\PSoC5/cyPm.c **** *
1089:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1090:.\Generated_Source\PSoC5/cyPm.c **** *  None
1091:.\Generated_Source\PSoC5/cyPm.c **** *
1092:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1093:.\Generated_Source\PSoC5/cyPm.c **** *  No
1094:.\Generated_Source\PSoC5/cyPm.c **** *
1095:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
1096:.\Generated_Source\PSoC5/cyPm.c **** *  Applications must wait 20 us before re-entering hibernate or sleep after
1097:.\Generated_Source\PSoC5/cyPm.c **** *  waking up from hibernate. The 20 us allows the sleep regulator time to
1098:.\Generated_Source\PSoC5/cyPm.c **** *  stabilize before the next hibernate / sleep event occurs. The 20 us
1099:.\Generated_Source\PSoC5/cyPm.c **** *  requirement begins when the device wakes up. There is no hardware check that
1100:.\Generated_Source\PSoC5/cyPm.c **** *  this requirement is met. The specified delay should be done on ISR entry.
1101:.\Generated_Source\PSoC5/cyPm.c **** *
1102:.\Generated_Source\PSoC5/cyPm.c **** *  After the wakeup PICU interrupt occurs, the Pin_ClearInterrupt() (where Pin is
1103:.\Generated_Source\PSoC5/cyPm.c **** *  instance name of the Pins component) function must be called to clear the
1104:.\Generated_Source\PSoC5/cyPm.c **** *  latched pin events to allow the proper Hibernate mode entry and to enable
1105:.\Generated_Source\PSoC5/cyPm.c **** *  detection of future events.
1106:.\Generated_Source\PSoC5/cyPm.c **** *
1107:.\Generated_Source\PSoC5/cyPm.c **** *  The 1 kHz ILO clock is expected to be enabled for PSoC 3 and PSoC 5LP to
1108:.\Generated_Source\PSoC5/cyPm.c **** *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
1109:.\Generated_Source\PSoC5/cyPm.c **** *  delay is measured using the rising edges of the 1 kHz ILO.
1110:.\Generated_Source\PSoC5/cyPm.c **** *
1111:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1112:.\Generated_Source\PSoC5/cyPm.c **** void CyPmHibernate(void) 
1113:.\Generated_Source\PSoC5/cyPm.c **** {
1114:.\Generated_Source\PSoC5/cyPm.c ****     uint8 interruptState;
1115:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 21


1116:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current global interrupt enable and disable it */
1117:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
1118:.\Generated_Source\PSoC5/cyPm.c **** 
1119:.\Generated_Source\PSoC5/cyPm.c ****         /***********************************************************************
1120:.\Generated_Source\PSoC5/cyPm.c ****         * The Hibernate/Sleep regulator has a settling time after a reset.
1121:.\Generated_Source\PSoC5/cyPm.c ****         * During this time, the system ignores requests to enter the Sleep and
1122:.\Generated_Source\PSoC5/cyPm.c ****         * Hibernate modes. The holdoff delay is measured using the rising edges of
1123:.\Generated_Source\PSoC5/cyPm.c ****         * the 1 kHz ILO.
1124:.\Generated_Source\PSoC5/cyPm.c ****         ***********************************************************************/
1125:.\Generated_Source\PSoC5/cyPm.c ****         if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
1126:.\Generated_Source\PSoC5/cyPm.c ****         {
1127:.\Generated_Source\PSoC5/cyPm.c ****             /* Disable hold off - no action on restore */
1128:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
1129:.\Generated_Source\PSoC5/cyPm.c ****         }
1130:.\Generated_Source\PSoC5/cyPm.c ****         else
1131:.\Generated_Source\PSoC5/cyPm.c ****         {
1132:.\Generated_Source\PSoC5/cyPm.c ****             /* Abort, device is not ready for low power mode entry */
1133:.\Generated_Source\PSoC5/cyPm.c **** 
1134:.\Generated_Source\PSoC5/cyPm.c ****             /* Restore global interrupt enable state */
1135:.\Generated_Source\PSoC5/cyPm.c ****             CyExitCriticalSection(interruptState);
1136:.\Generated_Source\PSoC5/cyPm.c **** 
1137:.\Generated_Source\PSoC5/cyPm.c ****             return;
1138:.\Generated_Source\PSoC5/cyPm.c ****         }
1139:.\Generated_Source\PSoC5/cyPm.c **** 
1140:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSaveSet();
1141:.\Generated_Source\PSoC5/cyPm.c **** 
1142:.\Generated_Source\PSoC5/cyPm.c **** 
1143:.\Generated_Source\PSoC5/cyPm.c ****     /* Save and enable only wakeup on PICU */
1144:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
1145:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = CY_PM_WAKEUP_PICU;
1146:.\Generated_Source\PSoC5/cyPm.c **** 
1147:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
1148:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = 0x00u;
1149:.\Generated_Source\PSoC5/cyPm.c **** 
1150:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
1151:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = 0x00u;
1152:.\Generated_Source\PSoC5/cyPm.c **** 
1153:.\Generated_Source\PSoC5/cyPm.c **** 
1154:.\Generated_Source\PSoC5/cyPm.c ****     /* Last moment IMO frequency change */
1155:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
1156:.\Generated_Source\PSoC5/cyPm.c ****     {
1157:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO frequency is 12 MHz */
1158:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
1159:.\Generated_Source\PSoC5/cyPm.c ****     }
1160:.\Generated_Source\PSoC5/cyPm.c ****     else
1161:.\Generated_Source\PSoC5/cyPm.c ****     {
1162:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO frequency is not 12 MHz */
1163:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
1164:.\Generated_Source\PSoC5/cyPm.c **** 
1165:.\Generated_Source\PSoC5/cyPm.c ****         /* Save IMO frequency */
1166:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
1167:.\Generated_Source\PSoC5/cyPm.c **** 
1168:.\Generated_Source\PSoC5/cyPm.c ****         /* Set IMO frequency to 12 MHz */
1169:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
1170:.\Generated_Source\PSoC5/cyPm.c ****     }
1171:.\Generated_Source\PSoC5/cyPm.c **** 
1172:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 22


1173:.\Generated_Source\PSoC5/cyPm.c ****     /* Switch to Hibernate Mode */
1174:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = (CY_PM_MODE_CSR_REG & ((uint8) (~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_H
1175:.\Generated_Source\PSoC5/cyPm.c **** 
1176:.\Generated_Source\PSoC5/cyPm.c ****     /* Recommended readback. */
1177:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
1178:.\Generated_Source\PSoC5/cyPm.c **** 
1179:.\Generated_Source\PSoC5/cyPm.c ****     /* Two recommended NOPs to get into mode. */
1180:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
1181:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
1182:.\Generated_Source\PSoC5/cyPm.c **** 
1183:.\Generated_Source\PSoC5/cyPm.c ****     /* Execute WFI instruction (for ARM-based devices only) */
1184:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
1185:.\Generated_Source\PSoC5/cyPm.c **** 
1186:.\Generated_Source\PSoC5/cyPm.c **** 
1187:.\Generated_Source\PSoC5/cyPm.c ****     /* Point of return from Hibernate mode */
1188:.\Generated_Source\PSoC5/cyPm.c **** 
1189:.\Generated_Source\PSoC5/cyPm.c **** 
1190:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore last moment IMO frequency change */
1191:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
1192:.\Generated_Source\PSoC5/cyPm.c ****     {
1193:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
1194:.\Generated_Source\PSoC5/cyPm.c ****                                     cyPmBackup.imoActFreq;
1195:.\Generated_Source\PSoC5/cyPm.c ****     }
1196:.\Generated_Source\PSoC5/cyPm.c **** 
1197:.\Generated_Source\PSoC5/cyPm.c **** 
1198:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore device for proper Hibernate mode exit*/
1199:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibRestore();
1200:.\Generated_Source\PSoC5/cyPm.c **** 
1201:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore current wake up configuration */
1202:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
1203:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
1204:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
1205:.\Generated_Source\PSoC5/cyPm.c **** 
1206:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore global interrupt enable state */
1207:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
1208:.\Generated_Source\PSoC5/cyPm.c **** }
1209:.\Generated_Source\PSoC5/cyPm.c **** 
1210:.\Generated_Source\PSoC5/cyPm.c **** 
1211:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1212:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmReadStatus
1213:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1214:.\Generated_Source\PSoC5/cyPm.c **** *
1215:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1216:.\Generated_Source\PSoC5/cyPm.c **** *  Manages the Power Manager Interrupt Status Register.  This register has the
1217:.\Generated_Source\PSoC5/cyPm.c **** *  interrupt status for the one pulse per second, central timewheel and fast
1218:.\Generated_Source\PSoC5/cyPm.c **** *  timewheel timers.  This hardware register clears on read.  To allow for only
1219:.\Generated_Source\PSoC5/cyPm.c **** *  clearing the bits of interest and preserving the other bits, this function
1220:.\Generated_Source\PSoC5/cyPm.c **** *  uses a shadow register that retains the state.  This function reads the
1221:.\Generated_Source\PSoC5/cyPm.c **** *  status register and ORs that value with the shadow register.  That is the
1222:.\Generated_Source\PSoC5/cyPm.c **** *  value that is returned.  Then the bits in the mask that are set are cleared
1223:.\Generated_Source\PSoC5/cyPm.c **** *  from this value and written back to the shadow register.
1224:.\Generated_Source\PSoC5/cyPm.c **** *
1225:.\Generated_Source\PSoC5/cyPm.c **** *  Note You must call this function within 1 ms (1 clock cycle of the ILO)
1226:.\Generated_Source\PSoC5/cyPm.c **** *  after a CTW event has occurred.
1227:.\Generated_Source\PSoC5/cyPm.c **** *
1228:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1229:.\Generated_Source\PSoC5/cyPm.c **** *  mask: Bits in the shadow register to clear.
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 23


1230:.\Generated_Source\PSoC5/cyPm.c **** *
1231:.\Generated_Source\PSoC5/cyPm.c **** *       Define                      Source
1232:.\Generated_Source\PSoC5/cyPm.c **** *  CY_PM_FTW_INT                Fast Timewheel
1233:.\Generated_Source\PSoC5/cyPm.c **** *  CY_PM_CTW_INT                Central Timewheel
1234:.\Generated_Source\PSoC5/cyPm.c **** *  CY_PM_ONEPPS_INT             One Pulse Per Second
1235:.\Generated_Source\PSoC5/cyPm.c **** *
1236:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1237:.\Generated_Source\PSoC5/cyPm.c **** *  Status.  Same bits values as the mask parameter.
1238:.\Generated_Source\PSoC5/cyPm.c **** *
1239:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1240:.\Generated_Source\PSoC5/cyPm.c **** uint8 CyPmReadStatus(uint8 mask) 
1241:.\Generated_Source\PSoC5/cyPm.c **** {
1242:.\Generated_Source\PSoC5/cyPm.c ****     static uint8 interruptStatus;
1243:.\Generated_Source\PSoC5/cyPm.c ****     uint8 interruptState;
1244:.\Generated_Source\PSoC5/cyPm.c ****     uint8 tmpStatus;
1245:.\Generated_Source\PSoC5/cyPm.c **** 
1246:.\Generated_Source\PSoC5/cyPm.c ****     /* Enter critical section */
1247:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
1248:.\Generated_Source\PSoC5/cyPm.c **** 
1249:.\Generated_Source\PSoC5/cyPm.c ****     /* Save value of register, copy it and clear desired bit */
1250:.\Generated_Source\PSoC5/cyPm.c ****     interruptStatus |= CY_PM_INT_SR_REG;
1251:.\Generated_Source\PSoC5/cyPm.c ****     tmpStatus = interruptStatus;
1252:.\Generated_Source\PSoC5/cyPm.c ****     interruptStatus &= ((uint8)(~mask));
1253:.\Generated_Source\PSoC5/cyPm.c **** 
1254:.\Generated_Source\PSoC5/cyPm.c ****     /* Exit critical section */
1255:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
1256:.\Generated_Source\PSoC5/cyPm.c **** 
1257:.\Generated_Source\PSoC5/cyPm.c ****     return(tmpStatus);
1258:.\Generated_Source\PSoC5/cyPm.c **** }
1259:.\Generated_Source\PSoC5/cyPm.c **** 
1260:.\Generated_Source\PSoC5/cyPm.c **** 
1261:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibSaveSet
1263:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1264:.\Generated_Source\PSoC5/cyPm.c **** *
1265:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1266:.\Generated_Source\PSoC5/cyPm.c **** *  Prepare device for proper Hibernate low power mode entry:
1267:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables I2C backup regulator
1268:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves ILO power down mode state and enable it
1269:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves state of 1 kHz and 100 kHz ILO and disable them
1270:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables sleep regulator and shorts vccd to vpwrsleep
1271:.\Generated_Source\PSoC5/cyPm.c **** *  - Save LVI/HVI configuration and disable them - CyPmHviLviSaveDisable()
1272:.\Generated_Source\PSoC5/cyPm.c **** *  - CyPmHibSlpSaveSet() function is called
1273:.\Generated_Source\PSoC5/cyPm.c **** *
1274:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1275:.\Generated_Source\PSoC5/cyPm.c **** *  None
1276:.\Generated_Source\PSoC5/cyPm.c **** *
1277:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1278:.\Generated_Source\PSoC5/cyPm.c **** *  None
1279:.\Generated_Source\PSoC5/cyPm.c **** *
1280:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1281:.\Generated_Source\PSoC5/cyPm.c **** *  No
1282:.\Generated_Source\PSoC5/cyPm.c **** *
1283:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSaveSet(void) 
1285:.\Generated_Source\PSoC5/cyPm.c **** {
1286:.\Generated_Source\PSoC5/cyPm.c ****     /* I2C backup reg must be off when the sleep regulator is unavailable */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 24


1287:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_PWRSYS_CR1_REG & CY_PM_PWRSYS_CR1_I2CREG_BACKUP))
1288:.\Generated_Source\PSoC5/cyPm.c ****     {
1289:.\Generated_Source\PSoC5/cyPm.c ****         /***********************************************************************
1290:.\Generated_Source\PSoC5/cyPm.c ****         * If the I2C backup regulator is enabled, all the fixed-function registers
1291:.\Generated_Source\PSoC5/cyPm.c ****         * store their values while the device is in the low power mode, otherwise their
1292:.\Generated_Source\PSoC5/cyPm.c ****         * configuration is lost. The I2C API makes a decision to restore or not
1293:.\Generated_Source\PSoC5/cyPm.c ****         * to restore I2C registers based on this. If this regulator will be
1294:.\Generated_Source\PSoC5/cyPm.c ****         * disabled and then enabled, I2C API will suppose that the I2C block
1295:.\Generated_Source\PSoC5/cyPm.c ****         * registers preserved their values, while this is not true. So, the
1296:.\Generated_Source\PSoC5/cyPm.c ****         * backup regulator is disabled. The I2C sleep APIs is responsible for
1297:.\Generated_Source\PSoC5/cyPm.c ****         * restoration.
1298:.\Generated_Source\PSoC5/cyPm.c ****         ***********************************************************************/
1299:.\Generated_Source\PSoC5/cyPm.c **** 
1300:.\Generated_Source\PSoC5/cyPm.c ****         /* Disable I2C backup register */
1301:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_CR1_REG &= ((uint8)(~CY_PM_PWRSYS_CR1_I2CREG_BACKUP));
1302:.\Generated_Source\PSoC5/cyPm.c ****     }
1303:.\Generated_Source\PSoC5/cyPm.c **** 
1304:.\Generated_Source\PSoC5/cyPm.c **** 
1305:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current ILO power mode and ensure low power mode */
1306:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.iloPowerMode = CyILO_SetPowerMode(CY_PM_POWERDOWN_MODE);
1307:.\Generated_Source\PSoC5/cyPm.c **** 
1308:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current 1kHz ILO enable state. Disabled automatically. */
1309:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
1310:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_DISABLED : CY_PM_ENABLED;
1311:.\Generated_Source\PSoC5/cyPm.c **** 
1312:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current 100kHz ILO enable state. Disabled automatically. */
1313:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo100kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_100K)) ?
1314:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_DISABLED : CY_PM_ENABLED;
1315:.\Generated_Source\PSoC5/cyPm.c **** 
1316:.\Generated_Source\PSoC5/cyPm.c **** 
1317:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable the sleep regulator and shorts vccd to vpwrsleep */
1318:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_PWRSYS_SLP_TR_REG & CY_PM_PWRSYS_SLP_TR_BYPASS))
1319:.\Generated_Source\PSoC5/cyPm.c ****     {
1320:.\Generated_Source\PSoC5/cyPm.c ****         /* Save current bypass state */
1321:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.slpTrBypass = CY_PM_DISABLED;
1322:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG |= CY_PM_PWRSYS_SLP_TR_BYPASS;
1323:.\Generated_Source\PSoC5/cyPm.c ****     }
1324:.\Generated_Source\PSoC5/cyPm.c ****     else
1325:.\Generated_Source\PSoC5/cyPm.c ****     {
1326:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.slpTrBypass = CY_PM_ENABLED;
1327:.\Generated_Source\PSoC5/cyPm.c ****     }
1328:.\Generated_Source\PSoC5/cyPm.c **** 
1329:.\Generated_Source\PSoC5/cyPm.c ****     /* LPCOMPs are always enabled (even when BOTH ext_vccd=1 and ext_vcca=1)*/
1330:.\Generated_Source\PSoC5/cyPm.c **** 
1331:.\Generated_Source\PSoC5/cyPm.c **** 
1332:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
1333:.\Generated_Source\PSoC5/cyPm.c ****     * LVI/HVI must be disabled in Hibernate
1334:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
1335:.\Generated_Source\PSoC5/cyPm.c **** 
1336:.\Generated_Source\PSoC5/cyPm.c ****     /* Save LVI/HVI configuration and disable them */
1337:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHviLviSaveDisable();
1338:.\Generated_Source\PSoC5/cyPm.c **** 
1339:.\Generated_Source\PSoC5/cyPm.c **** 
1340:.\Generated_Source\PSoC5/cyPm.c ****     /* Make the same preparations for Hibernate and Sleep modes */
1341:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpSaveSet();
1342:.\Generated_Source\PSoC5/cyPm.c **** 
1343:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 25


1344:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
1345:.\Generated_Source\PSoC5/cyPm.c ****     * Save and set the power mode wakeup trim registers
1346:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
1347:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim0 = CY_PM_PWRSYS_WAKE_TR0_REG;
1348:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim1 = CY_PM_PWRSYS_WAKE_TR1_REG;
1349:.\Generated_Source\PSoC5/cyPm.c **** 
1350:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = CY_PM_PWRSYS_WAKE_TR0;
1351:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR1_REG = CY_PM_PWRSYS_WAKE_TR1;
1352:.\Generated_Source\PSoC5/cyPm.c **** }
1353:.\Generated_Source\PSoC5/cyPm.c **** 
1354:.\Generated_Source\PSoC5/cyPm.c **** 
1355:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1356:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibRestore
1357:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1358:.\Generated_Source\PSoC5/cyPm.c **** *
1359:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1360:.\Generated_Source\PSoC5/cyPm.c **** *  Restores the device for the proper Hibernate mode exit:
1361:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores LVI/HVI configuration - calsl CyPmHviLviRestore()
1362:.\Generated_Source\PSoC5/cyPm.c **** *  - CyPmHibSlpSaveRestore() function is called
1363:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores ILO power down mode state and enables it
1364:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the state of 1 kHz and 100 kHz ILO and disables them
1365:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the sleep regulator settings
1366:.\Generated_Source\PSoC5/cyPm.c **** *
1367:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1368:.\Generated_Source\PSoC5/cyPm.c **** *  None
1369:.\Generated_Source\PSoC5/cyPm.c **** *
1370:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1371:.\Generated_Source\PSoC5/cyPm.c **** *  None
1372:.\Generated_Source\PSoC5/cyPm.c **** *
1373:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1374:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibRestore(void) 
1375:.\Generated_Source\PSoC5/cyPm.c **** {
1376:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore LVI/HVI configuration */
1377:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHviLviRestore();
1378:.\Generated_Source\PSoC5/cyPm.c **** 
1379:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore the same configuration for Hibernate and Sleep modes */
1380:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpRestore();
1381:.\Generated_Source\PSoC5/cyPm.c **** 
1382:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore 1kHz ILO enable state */
1383:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo1kEnable)
1384:.\Generated_Source\PSoC5/cyPm.c ****     {
1385:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable 1kHz ILO */
1386:.\Generated_Source\PSoC5/cyPm.c ****         CyILO_Start1K();
1387:.\Generated_Source\PSoC5/cyPm.c ****     }
1388:.\Generated_Source\PSoC5/cyPm.c **** 
1389:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore 100kHz ILO enable state */
1390:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo100kEnable)
1391:.\Generated_Source\PSoC5/cyPm.c ****     {
1392:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable 100kHz ILO */
1393:.\Generated_Source\PSoC5/cyPm.c ****         CyILO_Start100K();
1394:.\Generated_Source\PSoC5/cyPm.c ****     }
1395:.\Generated_Source\PSoC5/cyPm.c **** 
1396:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore ILO power mode */
1397:.\Generated_Source\PSoC5/cyPm.c ****     (void) CyILO_SetPowerMode(cyPmBackup.iloPowerMode);
1398:.\Generated_Source\PSoC5/cyPm.c **** 
1399:.\Generated_Source\PSoC5/cyPm.c **** 
1400:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_DISABLED == cyPmBackup.slpTrBypass)
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 26


1401:.\Generated_Source\PSoC5/cyPm.c ****     {
1402:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable the sleep regulator */
1403:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= ((uint8)(~CY_PM_PWRSYS_SLP_TR_BYPASS));
1404:.\Generated_Source\PSoC5/cyPm.c ****     }
1405:.\Generated_Source\PSoC5/cyPm.c **** 
1406:.\Generated_Source\PSoC5/cyPm.c **** 
1407:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
1408:.\Generated_Source\PSoC5/cyPm.c ****     * Restore the power mode wakeup trim registers
1409:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
1410:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = cyPmBackup.wakeupTrim0;
1411:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR1_REG = cyPmBackup.wakeupTrim1;
1412:.\Generated_Source\PSoC5/cyPm.c **** }
1413:.\Generated_Source\PSoC5/cyPm.c **** 
1414:.\Generated_Source\PSoC5/cyPm.c **** 
1415:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1416:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmCtwSetInterval
1417:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1418:.\Generated_Source\PSoC5/cyPm.c **** *
1419:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1420:.\Generated_Source\PSoC5/cyPm.c **** *  Performs the CTW configuration:
1421:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables the CTW interrupt
1422:.\Generated_Source\PSoC5/cyPm.c **** *  - Enables 1 kHz ILO
1423:.\Generated_Source\PSoC5/cyPm.c **** *  - Sets a new CTW interval
1424:.\Generated_Source\PSoC5/cyPm.c **** *
1425:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1426:.\Generated_Source\PSoC5/cyPm.c **** *  ctwInterval: the CTW interval to be set.
1427:.\Generated_Source\PSoC5/cyPm.c **** *
1428:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1429:.\Generated_Source\PSoC5/cyPm.c **** *  None
1430:.\Generated_Source\PSoC5/cyPm.c **** *
1431:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
1432:.\Generated_Source\PSoC5/cyPm.c **** *  Enables ILO 1 KHz clock and leaves it enabled.
1433:.\Generated_Source\PSoC5/cyPm.c **** *
1434:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1435:.\Generated_Source\PSoC5/cyPm.c **** void CyPmCtwSetInterval(uint8 ctwInterval) 
1436:.\Generated_Source\PSoC5/cyPm.c **** {
1437:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable CTW interrupt enable */
1438:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_IE));
1439:.\Generated_Source\PSoC5/cyPm.c **** 
1440:.\Generated_Source\PSoC5/cyPm.c ****     /* Enable 1kHz ILO (required for CTW operation) */
1441:.\Generated_Source\PSoC5/cyPm.c ****     CyILO_Start1K();
1442:.\Generated_Source\PSoC5/cyPm.c **** 
1443:.\Generated_Source\PSoC5/cyPm.c ****     /* Interval could be set only while CTW is disabled */
1444:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_TW_CFG2_REG & CY_PM_CTW_EN))
1445:.\Generated_Source\PSoC5/cyPm.c ****     {
1446:.\Generated_Source\PSoC5/cyPm.c ****         /* Set CTW interval if needed */
1447:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG1_REG != ctwInterval)
1448:.\Generated_Source\PSoC5/cyPm.c ****         {
1449:.\Generated_Source\PSoC5/cyPm.c ****             /* Disable the CTW, set new CTW interval and enable it again */
1450:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_EN));
1451:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG1_REG = ctwInterval;
1452:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
1453:.\Generated_Source\PSoC5/cyPm.c ****         }   /* Required interval is already set */
1454:.\Generated_Source\PSoC5/cyPm.c ****     }
1455:.\Generated_Source\PSoC5/cyPm.c ****     else
1456:.\Generated_Source\PSoC5/cyPm.c ****     {
1457:.\Generated_Source\PSoC5/cyPm.c ****         /* Set CTW interval if needed */
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 27


1458:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG1_REG != ctwInterval)
1459:.\Generated_Source\PSoC5/cyPm.c ****         {
1460:.\Generated_Source\PSoC5/cyPm.c ****             /* Set new CTW interval. Could be changed if CTW is disabled */
1461:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG1_REG = ctwInterval;
1462:.\Generated_Source\PSoC5/cyPm.c ****         }   /* Required interval is already set */
1463:.\Generated_Source\PSoC5/cyPm.c **** 
1464:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable CTW */
1465:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
1466:.\Generated_Source\PSoC5/cyPm.c ****     }
1467:.\Generated_Source\PSoC5/cyPm.c **** }
1468:.\Generated_Source\PSoC5/cyPm.c **** 
1469:.\Generated_Source\PSoC5/cyPm.c **** 
1470:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1471:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmOppsSet
1472:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1473:.\Generated_Source\PSoC5/cyPm.c **** *
1474:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1475:.\Generated_Source\PSoC5/cyPm.c **** *  Performs 1PPS configuration:
1476:.\Generated_Source\PSoC5/cyPm.c **** *  - Starts 32 KHz XTAL
1477:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables 1PPS interrupts
1478:.\Generated_Source\PSoC5/cyPm.c **** *  - Enables 1PPS
1479:.\Generated_Source\PSoC5/cyPm.c **** *
1480:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1481:.\Generated_Source\PSoC5/cyPm.c **** *  None
1482:.\Generated_Source\PSoC5/cyPm.c **** *
1483:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1484:.\Generated_Source\PSoC5/cyPm.c **** *  None
1485:.\Generated_Source\PSoC5/cyPm.c **** *
1486:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1487:.\Generated_Source\PSoC5/cyPm.c **** void CyPmOppsSet(void) 
1488:.\Generated_Source\PSoC5/cyPm.c **** {
1489:.\Generated_Source\PSoC5/cyPm.c ****     /* Enable 32kHz XTAL if needed */
1490:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_SLOWCLK_X32_CR_REG & CY_PM_X32_CR_X32EN))
1491:.\Generated_Source\PSoC5/cyPm.c ****     {
1492:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable 32kHz XTAL */
1493:.\Generated_Source\PSoC5/cyPm.c ****         CyXTAL_32KHZ_Start();
1494:.\Generated_Source\PSoC5/cyPm.c ****     }
1495:.\Generated_Source\PSoC5/cyPm.c **** 
1496:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable 1PPS interrupt enable */
1497:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_1PPS_IE));
1498:.\Generated_Source\PSoC5/cyPm.c **** 
1499:.\Generated_Source\PSoC5/cyPm.c ****     /* Enable 1PPS operation */
1500:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG |= CY_PM_1PPS_EN;
1501:.\Generated_Source\PSoC5/cyPm.c **** }
1502:.\Generated_Source\PSoC5/cyPm.c **** 
1503:.\Generated_Source\PSoC5/cyPm.c **** 
1504:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1505:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmFtwSetInterval
1506:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1507:.\Generated_Source\PSoC5/cyPm.c **** *
1508:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1509:.\Generated_Source\PSoC5/cyPm.c **** *  Performs the FTW configuration:
1510:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables the FTW interrupt
1511:.\Generated_Source\PSoC5/cyPm.c **** *  - Enables 100 kHz ILO
1512:.\Generated_Source\PSoC5/cyPm.c **** *  - Sets a new FTW interval.
1513:.\Generated_Source\PSoC5/cyPm.c **** *
1514:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 28


1515:.\Generated_Source\PSoC5/cyPm.c **** *  ftwInterval - FTW counter interval.
1516:.\Generated_Source\PSoC5/cyPm.c **** *
1517:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1518:.\Generated_Source\PSoC5/cyPm.c **** *  None
1519:.\Generated_Source\PSoC5/cyPm.c **** *
1520:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
1521:.\Generated_Source\PSoC5/cyPm.c **** *  Enables the ILO 100 KHz clock and leaves it enabled.
1522:.\Generated_Source\PSoC5/cyPm.c **** *
1523:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1524:.\Generated_Source\PSoC5/cyPm.c **** void CyPmFtwSetInterval(uint8 ftwInterval) 
1525:.\Generated_Source\PSoC5/cyPm.c **** {
1526:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable FTW interrupt enable */
1527:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_IE));
1528:.\Generated_Source\PSoC5/cyPm.c **** 
1529:.\Generated_Source\PSoC5/cyPm.c ****     /* Enable 100kHz ILO */
1530:.\Generated_Source\PSoC5/cyPm.c ****     CyILO_Start100K();
1531:.\Generated_Source\PSoC5/cyPm.c **** 
1532:.\Generated_Source\PSoC5/cyPm.c ****     /* Interval could be set only while FTW is disabled */
1533:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_TW_CFG2_REG & CY_PM_FTW_EN))
1534:.\Generated_Source\PSoC5/cyPm.c ****     {
1535:.\Generated_Source\PSoC5/cyPm.c ****         /* Disable FTW, set new FTW interval if needed and enable it again */
1536:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG0_REG != ftwInterval)
1537:.\Generated_Source\PSoC5/cyPm.c ****         {
1538:.\Generated_Source\PSoC5/cyPm.c ****             /* Disable CTW, set new CTW interval and enable it again */
1539:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_EN));
1540:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG0_REG = ftwInterval;
1541:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
1542:.\Generated_Source\PSoC5/cyPm.c ****         }   /* Required interval is already set */
1543:.\Generated_Source\PSoC5/cyPm.c ****     }
1544:.\Generated_Source\PSoC5/cyPm.c ****     else
1545:.\Generated_Source\PSoC5/cyPm.c ****     {
1546:.\Generated_Source\PSoC5/cyPm.c ****         /* Set new FTW counter interval if needed. FTW is disabled. */
1547:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG0_REG != ftwInterval)
1548:.\Generated_Source\PSoC5/cyPm.c ****         {
1549:.\Generated_Source\PSoC5/cyPm.c ****             /* Set new CTW interval. Could be changed if CTW is disabled */
1550:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG0_REG = ftwInterval;
1551:.\Generated_Source\PSoC5/cyPm.c ****         }   /* Required interval is already set */
1552:.\Generated_Source\PSoC5/cyPm.c **** 
1553:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable FTW */
1554:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
1555:.\Generated_Source\PSoC5/cyPm.c ****     }
1556:.\Generated_Source\PSoC5/cyPm.c **** }
1557:.\Generated_Source\PSoC5/cyPm.c **** 
1558:.\Generated_Source\PSoC5/cyPm.c **** 
1559:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1560:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibSlpSaveSet
1561:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1562:.\Generated_Source\PSoC5/cyPm.c **** *
1563:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1564:.\Generated_Source\PSoC5/cyPm.c **** *  This API is used for preparing the device for the Sleep and Hibernate low power
1565:.\Generated_Source\PSoC5/cyPm.c **** *  modes entry:
1566:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves the COMP, VIDAC, DSM, and SAR routing connections (PSoC 5)
1567:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves the SC/CT routing connections (PSoC 3/5/5LP)
1568:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables the Serial Wire Viewer (SWV) (PSoC 3)
1569:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves the boost reference selection and sets it to internal
1570:.\Generated_Source\PSoC5/cyPm.c **** *
1571:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 29


1572:.\Generated_Source\PSoC5/cyPm.c **** *  None
1573:.\Generated_Source\PSoC5/cyPm.c **** *
1574:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1575:.\Generated_Source\PSoC5/cyPm.c **** *  None
1576:.\Generated_Source\PSoC5/cyPm.c **** *
1577:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1578:.\Generated_Source\PSoC5/cyPm.c **** *  No
1579:.\Generated_Source\PSoC5/cyPm.c **** *
1580:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1581:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSlpSaveSet(void) 
1582:.\Generated_Source\PSoC5/cyPm.c **** {
  26              		.loc 1 1582 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 36
  33              		.cfi_offset 4, -36
  34              		.cfi_offset 5, -32
  35              		.cfi_offset 6, -28
  36              		.cfi_offset 7, -24
  37              		.cfi_offset 8, -20
  38              		.cfi_offset 9, -16
  39              		.cfi_offset 10, -12
  40              		.cfi_offset 11, -8
  41              		.cfi_offset 14, -4
1583:.\Generated_Source\PSoC5/cyPm.c ****     /* Save SC/CT routing registers */
1584:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[0u]   = CY_GET_REG8(CYREG_SC0_SW0 );
  42              		.loc 1 1584 0
  43 0004 DFF848B1 		ldr	fp, .L5+32
  44 0008 494B     		ldr	r3, .L5
  45 000a 9BF80020 		ldrb	r2, [fp, #0]	@ zero_extendqisi2
1585:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[1u]   = CY_GET_REG8(CYREG_SC0_SW2 );
  46              		.loc 1 1585 0
  47 000e 4949     		ldr	r1, .L5+4
1584:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[0u]   = CY_GET_REG8(CYREG_SC0_SW0 );
  48              		.loc 1 1584 0
  49 0010 5A72     		strb	r2, [r3, #9]
  50              		.loc 1 1585 0
  51 0012 0878     		ldrb	r0, [r1, #0]	@ zero_extendqisi2
1586:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[2u]   = CY_GET_REG8(CYREG_SC0_SW3 );
  52              		.loc 1 1586 0
  53 0014 484F     		ldr	r7, .L5+8
1585:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[1u]   = CY_GET_REG8(CYREG_SC0_SW2 );
  54              		.loc 1 1585 0
  55 0016 9872     		strb	r0, [r3, #10]
  56              		.loc 1 1586 0
  57 0018 3C78     		ldrb	r4, [r7, #0]	@ zero_extendqisi2
1587:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[3u]   = CY_GET_REG8(CYREG_SC0_SW4 );
1588:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[4u]   = CY_GET_REG8(CYREG_SC0_SW6 );
1589:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[5u]   = CY_GET_REG8(CYREG_SC0_SW8 );
1590:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[6u]   = CY_GET_REG8(CYREG_SC0_SW10);
1591:.\Generated_Source\PSoC5/cyPm.c **** 
1592:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[7u]   = CY_GET_REG8(CYREG_SC1_SW0 );
1593:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[8u]   = CY_GET_REG8(CYREG_SC1_SW2 );
1594:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[9u]   = CY_GET_REG8(CYREG_SC1_SW3 );
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 30


1595:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[10u]  = CY_GET_REG8(CYREG_SC1_SW4 );
1596:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[11u]  = CY_GET_REG8(CYREG_SC1_SW6 );
1597:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[12u]  = CY_GET_REG8(CYREG_SC1_SW8 );
1598:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[13u]  = CY_GET_REG8(CYREG_SC1_SW10);
1599:.\Generated_Source\PSoC5/cyPm.c **** 
1600:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[14u]  = CY_GET_REG8(CYREG_SC2_SW0 );
1601:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[15u]  = CY_GET_REG8(CYREG_SC2_SW2 );
1602:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[16u]  = CY_GET_REG8(CYREG_SC2_SW3 );
1603:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[17u]  = CY_GET_REG8(CYREG_SC2_SW4 );
1604:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[18u]  = CY_GET_REG8(CYREG_SC2_SW6 );
  58              		.loc 1 1604 0
  59 001a DFF838A1 		ldr	sl, .L5+36
1586:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[2u]   = CY_GET_REG8(CYREG_SC0_SW3 );
  60              		.loc 1 1586 0
  61 001e DC72     		strb	r4, [r3, #11]
1587:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[3u]   = CY_GET_REG8(CYREG_SC0_SW4 );
  62              		.loc 1 1587 0
  63 0020 8D78     		ldrb	r5, [r1, #2]	@ zero_extendqisi2
1605:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[19u]  = CY_GET_REG8(CYREG_SC2_SW8 );
  64              		.loc 1 1605 0
  65 0022 DFF83491 		ldr	r9, .L5+40
1587:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[3u]   = CY_GET_REG8(CYREG_SC0_SW4 );
  66              		.loc 1 1587 0
  67 0026 1D73     		strb	r5, [r3, #12]
1588:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[4u]   = CY_GET_REG8(CYREG_SC0_SW6 );
  68              		.loc 1 1588 0
  69 0028 FE78     		ldrb	r6, [r7, #3]	@ zero_extendqisi2
1606:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[20u]  = CY_GET_REG8(CYREG_SC2_SW10);
  70              		.loc 1 1606 0
  71 002a DFF83081 		ldr	r8, .L5+44
1588:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[4u]   = CY_GET_REG8(CYREG_SC0_SW6 );
  72              		.loc 1 1588 0
  73 002e 5E73     		strb	r6, [r3, #13]
1589:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[5u]   = CY_GET_REG8(CYREG_SC0_SW8 );
  74              		.loc 1 1589 0
  75 0030 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
1607:.\Generated_Source\PSoC5/cyPm.c **** 
1608:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[21u]  = CY_GET_REG8(CYREG_SC3_SW0 );
  76              		.loc 1 1608 0
  77 0032 DFF82CC1 		ldr	ip, .L5+48
1589:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[5u]   = CY_GET_REG8(CYREG_SC0_SW8 );
  78              		.loc 1 1589 0
  79 0036 9A73     		strb	r2, [r3, #14]
1590:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[6u]   = CY_GET_REG8(CYREG_SC0_SW10);
  80              		.loc 1 1590 0
  81 0038 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
  82 003a D873     		strb	r0, [r3, #15]
1592:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[7u]   = CY_GET_REG8(CYREG_SC1_SW0 );
  83              		.loc 1 1592 0
  84 003c 8C7B     		ldrb	r4, [r1, #14]	@ zero_extendqisi2
  85 003e 1C74     		strb	r4, [r3, #16]
1593:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[8u]   = CY_GET_REG8(CYREG_SC1_SW2 );
  86              		.loc 1 1593 0
  87 0040 FD7B     		ldrb	r5, [r7, #15]	@ zero_extendqisi2
  88 0042 5D74     		strb	r5, [r3, #17]
1594:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[9u]   = CY_GET_REG8(CYREG_SC1_SW3 );
  89              		.loc 1 1594 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 31


  90 0044 4E7C     		ldrb	r6, [r1, #17]	@ zero_extendqisi2
  91 0046 9E74     		strb	r6, [r3, #18]
1595:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[10u]  = CY_GET_REG8(CYREG_SC1_SW4 );
  92              		.loc 1 1595 0
  93 0048 7A7C     		ldrb	r2, [r7, #17]	@ zero_extendqisi2
  94 004a DA74     		strb	r2, [r3, #19]
1596:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[11u]  = CY_GET_REG8(CYREG_SC1_SW6 );
  95              		.loc 1 1596 0
  96 004c 087D     		ldrb	r0, [r1, #20]	@ zero_extendqisi2
  97 004e 1875     		strb	r0, [r3, #20]
1597:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[12u]  = CY_GET_REG8(CYREG_SC1_SW8 );
  98              		.loc 1 1597 0
  99 0050 7C7D     		ldrb	r4, [r7, #21]	@ zero_extendqisi2
 100 0052 5C75     		strb	r4, [r3, #21]
1598:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[13u]  = CY_GET_REG8(CYREG_SC1_SW10);
 101              		.loc 1 1598 0
 102 0054 0D7E     		ldrb	r5, [r1, #24]	@ zero_extendqisi2
 103 0056 9D75     		strb	r5, [r3, #22]
1600:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[14u]  = CY_GET_REG8(CYREG_SC2_SW0 );
 104              		.loc 1 1600 0
 105 0058 7E7F     		ldrb	r6, [r7, #29]	@ zero_extendqisi2
 106 005a DE75     		strb	r6, [r3, #23]
1601:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[15u]  = CY_GET_REG8(CYREG_SC2_SW2 );
 107              		.loc 1 1601 0
 108 005c 91F82020 		ldrb	r2, [r1, #32]	@ zero_extendqisi2
 109 0060 1A76     		strb	r2, [r3, #24]
1602:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[16u]  = CY_GET_REG8(CYREG_SC2_SW3 );
 110              		.loc 1 1602 0
 111 0062 97F82000 		ldrb	r0, [r7, #32]	@ zero_extendqisi2
 112 0066 5876     		strb	r0, [r3, #25]
1603:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[17u]  = CY_GET_REG8(CYREG_SC2_SW4 );
 113              		.loc 1 1603 0
 114 0068 91F82240 		ldrb	r4, [r1, #34]	@ zero_extendqisi2
 115 006c 9C76     		strb	r4, [r3, #26]
1604:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[18u]  = CY_GET_REG8(CYREG_SC2_SW6 );
 116              		.loc 1 1604 0
 117 006e 9AF80050 		ldrb	r5, [sl, #0]	@ zero_extendqisi2
 118 0072 DD76     		strb	r5, [r3, #27]
1605:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[19u]  = CY_GET_REG8(CYREG_SC2_SW8 );
 119              		.loc 1 1605 0
 120 0074 99F80060 		ldrb	r6, [r9, #0]	@ zero_extendqisi2
 121 0078 1E77     		strb	r6, [r3, #28]
1606:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[20u]  = CY_GET_REG8(CYREG_SC2_SW10);
 122              		.loc 1 1606 0
 123 007a 98F80020 		ldrb	r2, [r8, #0]	@ zero_extendqisi2
1609:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[22u]  = CY_GET_REG8(CYREG_SC3_SW2 );
1610:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[23u]  = CY_GET_REG8(CYREG_SC3_SW3 );
 124              		.loc 1 1610 0
 125 007e 2F4E     		ldr	r6, .L5+12
1606:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[20u]  = CY_GET_REG8(CYREG_SC2_SW10);
 126              		.loc 1 1606 0
 127 0080 5A77     		strb	r2, [r3, #29]
1608:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[21u]  = CY_GET_REG8(CYREG_SC3_SW0 );
 128              		.loc 1 1608 0
 129 0082 9CF80000 		ldrb	r0, [ip, #0]	@ zero_extendqisi2
 130 0086 9877     		strb	r0, [r3, #30]
1609:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[22u]  = CY_GET_REG8(CYREG_SC3_SW2 );
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 32


 131              		.loc 1 1609 0
 132 0088 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 133 008c DC77     		strb	r4, [r3, #31]
 134              		.loc 1 1610 0
 135 008e 3578     		ldrb	r5, [r6, #0]	@ zero_extendqisi2
1611:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[24u]  = CY_GET_REG8(CYREG_SC3_SW4 );
1612:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[25u]  = CY_GET_REG8(CYREG_SC3_SW6 );
 136              		.loc 1 1612 0
 137 0090 2B4C     		ldr	r4, .L5+16
1610:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[23u]  = CY_GET_REG8(CYREG_SC3_SW3 );
 138              		.loc 1 1610 0
 139 0092 83F82050 		strb	r5, [r3, #32]
1611:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[24u]  = CY_GET_REG8(CYREG_SC3_SW4 );
 140              		.loc 1 1611 0
 141 0096 2B4D     		ldr	r5, .L5+20
 142 0098 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 143 009a 83F82120 		strb	r2, [r3, #33]
 144              		.loc 1 1612 0
 145 009e 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 146 00a0 83F82200 		strb	r0, [r3, #34]
1613:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[26u]  = CY_GET_REG8(CYREG_SC3_SW8 );
 147              		.loc 1 1613 0
 148 00a4 2848     		ldr	r0, .L5+24
 149 00a6 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 150 00a8 83F82320 		strb	r2, [r3, #35]
1614:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[27u]  = CY_GET_REG8(CYREG_SC3_SW10);
 151              		.loc 1 1614 0
 152 00ac 91F83820 		ldrb	r2, [r1, #56]	@ zero_extendqisi2
 153 00b0 83F82420 		strb	r2, [r3, #36]
1615:.\Generated_Source\PSoC5/cyPm.c **** 
1616:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW0 , 0u);
 154              		.loc 1 1616 0
 155 00b4 0022     		movs	r2, #0
 156 00b6 8BF80020 		strb	r2, [fp, #0]
1617:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW2 , 0u);
 157              		.loc 1 1617 0
 158 00ba 07F8012C 		strb	r2, [r7, #-1]
1588:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[4u]   = CY_GET_REG8(CYREG_SC0_SW6 );
 159              		.loc 1 1588 0
 160 00be 0337     		adds	r7, r7, #3
1618:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW3 , 0u);
 161              		.loc 1 1618 0
 162 00c0 07F8032C 		strb	r2, [r7, #-3]
1617:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW2 , 0u);
 163              		.loc 1 1617 0
 164 00c4 043F     		subs	r7, r7, #4
1619:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW4 , 0u);
 165              		.loc 1 1619 0
 166 00c6 0237     		adds	r7, r7, #2
 167 00c8 3A70     		strb	r2, [r7, #0]
1620:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW6 , 0u);
 168              		.loc 1 1620 0
 169 00ca BA70     		strb	r2, [r7, #2]
1621:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW8 , 0u);
 170              		.loc 1 1621 0
 171 00cc 3A71     		strb	r2, [r7, #4]
1622:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW10, 0u);
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 33


 172              		.loc 1 1622 0
 173 00ce BA71     		strb	r2, [r7, #6]
1623:.\Generated_Source\PSoC5/cyPm.c **** 
1624:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW0 , 0u);
 174              		.loc 1 1624 0
 175 00d0 3A73     		strb	r2, [r7, #12]
1625:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW2 , 0u);
 176              		.loc 1 1625 0
 177 00d2 BA73     		strb	r2, [r7, #14]
1626:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW3 , 0u);
 178              		.loc 1 1626 0
 179 00d4 FA73     		strb	r2, [r7, #15]
1627:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW4 , 0u);
 180              		.loc 1 1627 0
 181 00d6 3A74     		strb	r2, [r7, #16]
1628:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW6 , 0u);
 182              		.loc 1 1628 0
 183 00d8 BA74     		strb	r2, [r7, #18]
1629:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW8 , 0u);
 184              		.loc 1 1629 0
 185 00da 3A75     		strb	r2, [r7, #20]
1630:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW10, 0u);
 186              		.loc 1 1630 0
 187 00dc BA75     		strb	r2, [r7, #22]
1631:.\Generated_Source\PSoC5/cyPm.c **** 
1632:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW0 , 0u);
 188              		.loc 1 1632 0
 189 00de 3A77     		strb	r2, [r7, #28]
1633:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW2 , 0u);
 190              		.loc 1 1633 0
 191 00e0 BA77     		strb	r2, [r7, #30]
1634:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW3 , 0u);
 192              		.loc 1 1634 0
 193 00e2 FA77     		strb	r2, [r7, #31]
1635:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW4 , 0u);
 194              		.loc 1 1635 0
 195 00e4 87F82020 		strb	r2, [r7, #32]
1636:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW6 , 0u);
 196              		.loc 1 1636 0
 197 00e8 8AF80020 		strb	r2, [sl, #0]
1637:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW8 , 0u);
 198              		.loc 1 1637 0
 199 00ec 89F80020 		strb	r2, [r9, #0]
1638:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW10, 0u);
 200              		.loc 1 1638 0
 201 00f0 88F80020 		strb	r2, [r8, #0]
1639:.\Generated_Source\PSoC5/cyPm.c **** 
1640:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW0 , 0u);
 202              		.loc 1 1640 0
 203 00f4 8CF80020 		strb	r2, [ip, #0]
1641:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW2 , 0u);
 204              		.loc 1 1641 0
 205 00f8 87F82E20 		strb	r2, [r7, #46]
1642:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW3 , 0u);
 206              		.loc 1 1642 0
 207 00fc 3270     		strb	r2, [r6, #0]
1643:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW4 , 0u);
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 34


 208              		.loc 1 1643 0
 209 00fe 2A70     		strb	r2, [r5, #0]
1644:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW6 , 0u);
 210              		.loc 1 1644 0
 211 0100 2270     		strb	r2, [r4, #0]
1645:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW8 , 0u);
 212              		.loc 1 1645 0
 213 0102 0270     		strb	r2, [r0, #0]
1646:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW10, 0u);
1647:.\Generated_Source\PSoC5/cyPm.c **** 
1648:.\Generated_Source\PSoC5/cyPm.c **** 
1649:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
1650:.\Generated_Source\PSoC5/cyPm.c **** 
1651:.\Generated_Source\PSoC5/cyPm.c ****         /* Serial Wire Viewer (SWV) workaround */
1652:.\Generated_Source\PSoC5/cyPm.c **** 
1653:.\Generated_Source\PSoC5/cyPm.c ****         /* Disable SWV before entering low power mode */
1654:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (CY_PM_MLOGIC_DBG_REG & CY_PM_MLOGIC_DBG_SWV_CLK_EN))
1655:.\Generated_Source\PSoC5/cyPm.c ****         {
1656:.\Generated_Source\PSoC5/cyPm.c ****             /* Save SWV clock enabled state */
1657:.\Generated_Source\PSoC5/cyPm.c ****             cyPmBackup.swvClkEnabled = CY_PM_ENABLED;
1658:.\Generated_Source\PSoC5/cyPm.c **** 
1659:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current ports drive mode settings */
1660:.\Generated_Source\PSoC5/cyPm.c ****             cyPmBackup.prt1Dm = CY_PM_PRT1_PC3_REG & ((uint8)(~CY_PM_PRT1_PC3_DM_MASK));
1661:.\Generated_Source\PSoC5/cyPm.c **** 
1662:.\Generated_Source\PSoC5/cyPm.c ****             /* Set drive mode to strong output */
1663:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PRT1_PC3_REG = (CY_PM_PRT1_PC3_REG & CY_PM_PRT1_PC3_DM_MASK) |
1664:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_PRT1_PC3_DM_STRONG;
1665:.\Generated_Source\PSoC5/cyPm.c **** 
1666:.\Generated_Source\PSoC5/cyPm.c ****             /* Disable SWV clocks */
1667:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_MLOGIC_DBG_REG &= ((uint8)(~CY_PM_MLOGIC_DBG_SWV_CLK_EN));
1668:.\Generated_Source\PSoC5/cyPm.c ****         }
1669:.\Generated_Source\PSoC5/cyPm.c ****         else
1670:.\Generated_Source\PSoC5/cyPm.c ****         {
1671:.\Generated_Source\PSoC5/cyPm.c ****             /* Save SWV clock disabled state */
1672:.\Generated_Source\PSoC5/cyPm.c ****             cyPmBackup.swvClkEnabled = CY_PM_DISABLED;
1673:.\Generated_Source\PSoC5/cyPm.c ****         }
1674:.\Generated_Source\PSoC5/cyPm.c **** 
1675:.\Generated_Source\PSoC5/cyPm.c ****     #endif  /* (CY_PSOC3) */
1676:.\Generated_Source\PSoC5/cyPm.c **** 
1677:.\Generated_Source\PSoC5/cyPm.c **** 
1678:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
1679:.\Generated_Source\PSoC5/cyPm.c ****     * Save boost reference and set it to boost's internal by clearing the bit.
1680:.\Generated_Source\PSoC5/cyPm.c ****     * External (chip bandgap) reference is not available in Sleep and Hibernate.
1681:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
1682:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_BOOST_CR2_REG & CY_PM_BOOST_CR2_EREFSEL_EXT))
 214              		.loc 1 1682 0
 215 0104 1148     		ldr	r0, .L5+28
1646:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW10, 0u);
 216              		.loc 1 1646 0
 217 0106 81F83820 		strb	r2, [r1, #56]
 218              		.loc 1 1682 0
 219 010a 0178     		ldrb	r1, [r0, #0]	@ zero_extendqisi2
1641:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW2 , 0u);
 220              		.loc 1 1641 0
 221 010c 2E37     		adds	r7, r7, #46
 222              		.loc 1 1682 0
 223 010e 11F00802 		ands	r2, r1, #8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 35


 224 0112 08D0     		beq	.L2
1683:.\Generated_Source\PSoC5/cyPm.c ****     {
1684:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.boostRefExt = CY_PM_ENABLED;
 225              		.loc 1 1684 0
 226 0114 0121     		movs	r1, #1
 227 0116 83F82E10 		strb	r1, [r3, #46]
1685:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_BOOST_CR2_REG &= ((uint8)(~CY_PM_BOOST_CR2_EREFSEL_EXT));
 228              		.loc 1 1685 0
 229 011a 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 230 011c 03F0F702 		and	r2, r3, #247
 231 0120 0270     		strb	r2, [r0, #0]
 232 0122 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 233              	.L2:
1686:.\Generated_Source\PSoC5/cyPm.c ****     }
1687:.\Generated_Source\PSoC5/cyPm.c ****     else
1688:.\Generated_Source\PSoC5/cyPm.c ****     {
1689:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.boostRefExt = CY_PM_DISABLED;
 234              		.loc 1 1689 0
 235 0126 83F82E20 		strb	r2, [r3, #46]
 236 012a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 237              	.L6:
 238 012e 00BF     		.align	2
 239              	.L5:
 240 0130 00000000 		.word	.LANCHOR0
 241 0134 025A0040 		.word	1073764866
 242 0138 035A0040 		.word	1073764867
 243 013c 335A0040 		.word	1073764915
 244 0140 365A0040 		.word	1073764918
 245 0144 345A0040 		.word	1073764916
 246 0148 385A0040 		.word	1073764920
 247 014c 22430040 		.word	1073759010
 248 0150 005A0040 		.word	1073764864
 249 0154 265A0040 		.word	1073764902
 250 0158 285A0040 		.word	1073764904
 251 015c 2A5A0040 		.word	1073764906
 252 0160 305A0040 		.word	1073764912
 253              		.cfi_endproc
 254              	.LFE11:
 255              		.size	CyPmHibSlpSaveSet, .-CyPmHibSlpSaveSet
 256              		.section	.text.CyPmHibSlpRestore,"ax",%progbits
 257              		.align	1
 258              		.thumb
 259              		.thumb_func
 260              		.type	CyPmHibSlpRestore, %function
 261              	CyPmHibSlpRestore:
 262              	.LFB12:
1690:.\Generated_Source\PSoC5/cyPm.c ****     }
1691:.\Generated_Source\PSoC5/cyPm.c **** }
1692:.\Generated_Source\PSoC5/cyPm.c **** 
1693:.\Generated_Source\PSoC5/cyPm.c **** 
1694:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1695:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibSlpRestore
1696:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1697:.\Generated_Source\PSoC5/cyPm.c **** *
1698:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1699:.\Generated_Source\PSoC5/cyPm.c **** *  This API is used for restoring the device configurations after wakeup from the Sleep
1700:.\Generated_Source\PSoC5/cyPm.c **** *  and Hibernate low power modes:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 36


1701:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the SC/CT routing connections
1702:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the enable state of the Serial Wire Viewer (SWV) (PSoC 3)
1703:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the  boost reference selection
1704:.\Generated_Source\PSoC5/cyPm.c **** *
1705:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1706:.\Generated_Source\PSoC5/cyPm.c **** *  None
1707:.\Generated_Source\PSoC5/cyPm.c **** *
1708:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1709:.\Generated_Source\PSoC5/cyPm.c **** *  None
1710:.\Generated_Source\PSoC5/cyPm.c **** *
1711:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1712:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSlpRestore(void) 
1713:.\Generated_Source\PSoC5/cyPm.c **** {
 263              		.loc 1 1713 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
1714:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore SC/CT routing registers */
1715:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW0 , cyPmBackup.scctData[0u] );
 268              		.loc 1 1715 0
 269 0000 254B     		ldr	r3, .L9
 270 0002 264A     		ldr	r2, .L9+4
 271 0004 597A     		ldrb	r1, [r3, #9]	@ zero_extendqisi2
 272 0006 1170     		strb	r1, [r2, #0]
1716:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW2 , cyPmBackup.scctData[1u] );
 273              		.loc 1 1716 0
 274 0008 987A     		ldrb	r0, [r3, #10]	@ zero_extendqisi2
 275 000a 9070     		strb	r0, [r2, #2]
1717:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW3 , cyPmBackup.scctData[2u] );
 276              		.loc 1 1717 0
 277 000c D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 278 000e D170     		strb	r1, [r2, #3]
1718:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW4 , cyPmBackup.scctData[3u] );
 279              		.loc 1 1718 0
 280 0010 187B     		ldrb	r0, [r3, #12]	@ zero_extendqisi2
 281 0012 1071     		strb	r0, [r2, #4]
1719:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW6 , cyPmBackup.scctData[4u] );
 282              		.loc 1 1719 0
 283 0014 597B     		ldrb	r1, [r3, #13]	@ zero_extendqisi2
 284 0016 9171     		strb	r1, [r2, #6]
1720:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW8 , cyPmBackup.scctData[5u] );
 285              		.loc 1 1720 0
 286 0018 987B     		ldrb	r0, [r3, #14]	@ zero_extendqisi2
 287 001a 1072     		strb	r0, [r2, #8]
1721:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW10, cyPmBackup.scctData[6u] );
 288              		.loc 1 1721 0
 289 001c D97B     		ldrb	r1, [r3, #15]	@ zero_extendqisi2
 290 001e 9172     		strb	r1, [r2, #10]
1722:.\Generated_Source\PSoC5/cyPm.c **** 
1723:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW0 , cyPmBackup.scctData[7u] );
 291              		.loc 1 1723 0
 292 0020 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 293 0022 1074     		strb	r0, [r2, #16]
1724:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW2 , cyPmBackup.scctData[8u] );
 294              		.loc 1 1724 0
 295 0024 597C     		ldrb	r1, [r3, #17]	@ zero_extendqisi2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 37


 296 0026 9174     		strb	r1, [r2, #18]
1725:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW3 , cyPmBackup.scctData[9u] );
 297              		.loc 1 1725 0
 298 0028 987C     		ldrb	r0, [r3, #18]	@ zero_extendqisi2
 299 002a D074     		strb	r0, [r2, #19]
1726:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW4 , cyPmBackup.scctData[10u]);
 300              		.loc 1 1726 0
 301 002c D97C     		ldrb	r1, [r3, #19]	@ zero_extendqisi2
 302 002e 1175     		strb	r1, [r2, #20]
1727:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW6 , cyPmBackup.scctData[11u]);
 303              		.loc 1 1727 0
 304 0030 187D     		ldrb	r0, [r3, #20]	@ zero_extendqisi2
 305 0032 9075     		strb	r0, [r2, #22]
1728:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW8 , cyPmBackup.scctData[12u]);
 306              		.loc 1 1728 0
 307 0034 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
 308 0036 1832     		adds	r2, r2, #24
 309 0038 1170     		strb	r1, [r2, #0]
1729:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW10, cyPmBackup.scctData[13u]);
 310              		.loc 1 1729 0
 311 003a 987D     		ldrb	r0, [r3, #22]	@ zero_extendqisi2
 312 003c 9070     		strb	r0, [r2, #2]
1730:.\Generated_Source\PSoC5/cyPm.c **** 
1731:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW0 , cyPmBackup.scctData[14u]);
 313              		.loc 1 1731 0
 314 003e D97D     		ldrb	r1, [r3, #23]	@ zero_extendqisi2
 315 0040 1172     		strb	r1, [r2, #8]
1732:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW2 , cyPmBackup.scctData[15u]);
 316              		.loc 1 1732 0
 317 0042 187E     		ldrb	r0, [r3, #24]	@ zero_extendqisi2
 318 0044 9072     		strb	r0, [r2, #10]
1733:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW3 , cyPmBackup.scctData[16u]);
 319              		.loc 1 1733 0
 320 0046 597E     		ldrb	r1, [r3, #25]	@ zero_extendqisi2
 321 0048 D172     		strb	r1, [r2, #11]
1734:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW4 , cyPmBackup.scctData[17u]);
 322              		.loc 1 1734 0
 323 004a 987E     		ldrb	r0, [r3, #26]	@ zero_extendqisi2
 324 004c 1073     		strb	r0, [r2, #12]
1735:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW6 , cyPmBackup.scctData[18u]);
 325              		.loc 1 1735 0
 326 004e D97E     		ldrb	r1, [r3, #27]	@ zero_extendqisi2
 327 0050 9173     		strb	r1, [r2, #14]
1736:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW8 , cyPmBackup.scctData[19u]);
 328              		.loc 1 1736 0
 329 0052 187F     		ldrb	r0, [r3, #28]	@ zero_extendqisi2
 330 0054 1074     		strb	r0, [r2, #16]
1737:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW10, cyPmBackup.scctData[20u]);
 331              		.loc 1 1737 0
 332 0056 597F     		ldrb	r1, [r3, #29]	@ zero_extendqisi2
 333 0058 9174     		strb	r1, [r2, #18]
1738:.\Generated_Source\PSoC5/cyPm.c **** 
1739:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW0 , cyPmBackup.scctData[21u]);
 334              		.loc 1 1739 0
 335 005a 987F     		ldrb	r0, [r3, #30]	@ zero_extendqisi2
 336 005c 1076     		strb	r0, [r2, #24]
1740:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW2 , cyPmBackup.scctData[22u]);
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 38


 337              		.loc 1 1740 0
 338 005e D97F     		ldrb	r1, [r3, #31]	@ zero_extendqisi2
 339 0060 9176     		strb	r1, [r2, #26]
1741:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW3 , cyPmBackup.scctData[23u]);
 340              		.loc 1 1741 0
 341 0062 93F82000 		ldrb	r0, [r3, #32]	@ zero_extendqisi2
 342 0066 D076     		strb	r0, [r2, #27]
1742:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW4 , cyPmBackup.scctData[24u]);
 343              		.loc 1 1742 0
 344 0068 93F82110 		ldrb	r1, [r3, #33]	@ zero_extendqisi2
 345 006c 1177     		strb	r1, [r2, #28]
1743:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW6 , cyPmBackup.scctData[25u]);
 346              		.loc 1 1743 0
 347 006e 93F82200 		ldrb	r0, [r3, #34]	@ zero_extendqisi2
 348 0072 9077     		strb	r0, [r2, #30]
1744:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW8 , cyPmBackup.scctData[26u]);
 349              		.loc 1 1744 0
 350 0074 93F82310 		ldrb	r1, [r3, #35]	@ zero_extendqisi2
 351 0078 82F82010 		strb	r1, [r2, #32]
1745:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW10, cyPmBackup.scctData[27u]);
 352              		.loc 1 1745 0
 353 007c 93F82400 		ldrb	r0, [r3, #36]	@ zero_extendqisi2
 354 0080 82F82200 		strb	r0, [r2, #34]
1746:.\Generated_Source\PSoC5/cyPm.c **** 
1747:.\Generated_Source\PSoC5/cyPm.c **** 
1748:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
1749:.\Generated_Source\PSoC5/cyPm.c **** 
1750:.\Generated_Source\PSoC5/cyPm.c ****         /* Serial Wire Viewer (SWV) workaround */
1751:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_ENABLED == cyPmBackup.swvClkEnabled)
1752:.\Generated_Source\PSoC5/cyPm.c ****         {
1753:.\Generated_Source\PSoC5/cyPm.c ****             /* Restore ports drive mode */
1754:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PRT1_PC3_REG = (CY_PM_PRT1_PC3_REG & CY_PM_PRT1_PC3_DM_MASK) |
1755:.\Generated_Source\PSoC5/cyPm.c ****                                     cyPmBackup.prt1Dm;
1756:.\Generated_Source\PSoC5/cyPm.c **** 
1757:.\Generated_Source\PSoC5/cyPm.c ****             /* Enable SWV clocks */
1758:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_MLOGIC_DBG_REG |= CY_PM_MLOGIC_DBG_SWV_CLK_EN;
1759:.\Generated_Source\PSoC5/cyPm.c ****         }
1760:.\Generated_Source\PSoC5/cyPm.c **** 
1761:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
1762:.\Generated_Source\PSoC5/cyPm.c **** 
1763:.\Generated_Source\PSoC5/cyPm.c **** 
1764:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore boost reference */
1765:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.boostRefExt)
 355              		.loc 1 1765 0
 356 0084 93F82E30 		ldrb	r3, [r3, #46]	@ zero_extendqisi2
 357 0088 012B     		cmp	r3, #1
 358 008a 04D1     		bne	.L7
1766:.\Generated_Source\PSoC5/cyPm.c ****     {
1767:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_BOOST_CR2_REG |= CY_PM_BOOST_CR2_EREFSEL_EXT;
 359              		.loc 1 1767 0
 360 008c 0449     		ldr	r1, .L9+8
 361 008e 0A78     		ldrb	r2, [r1, #0]	@ zero_extendqisi2
 362 0090 42F00800 		orr	r0, r2, #8
 363 0094 0870     		strb	r0, [r1, #0]
 364              	.L7:
 365 0096 7047     		bx	lr
 366              	.L10:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 39


 367              		.align	2
 368              	.L9:
 369 0098 00000000 		.word	.LANCHOR0
 370 009c 005A0040 		.word	1073764864
 371 00a0 22430040 		.word	1073759010
 372              		.cfi_endproc
 373              	.LFE12:
 374              		.size	CyPmHibSlpRestore, .-CyPmHibSlpRestore
 375              		.section	.text.CyPmSaveClocks,"ax",%progbits
 376              		.align	1
 377              		.global	CyPmSaveClocks
 378              		.thumb
 379              		.thumb_func
 380              		.type	CyPmSaveClocks, %function
 381              	CyPmSaveClocks:
 382              	.LFB0:
  81:.\Generated_Source\PSoC5/cyPm.c **** {
 383              		.loc 1 81 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387 0000 10B5     		push	{r4, lr}
 388              	.LCFI1:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 4, -8
 391              		.cfi_offset 14, -4
  83:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkA = CY_PM_ACT_CFG1_REG & CY_PM_ACT_EN_CLK_A_MASK;
 392              		.loc 1 83 0
 393 0002 6A4A     		ldr	r2, .L51
 394 0004 6A4C     		ldr	r4, .L51+4
 395 0006 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 396 0008 03F00F00 		and	r0, r3, #15
  84:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkD = CY_PM_ACT_CFG2_REG;
 397              		.loc 1 84 0
 398 000c 694B     		ldr	r3, .L51+8
  83:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkA = CY_PM_ACT_CFG1_REG & CY_PM_ACT_EN_CLK_A_MASK;
 399              		.loc 1 83 0
 400 000e 84F83000 		strb	r0, [r4, #48]
  84:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkD = CY_PM_ACT_CFG2_REG;
 401              		.loc 1 84 0
 402 0012 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 403 0014 84F83110 		strb	r1, [r4, #49]
  85:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_A_MASK));
 404              		.loc 1 85 0
 405 0018 1078     		ldrb	r0, [r2, #0]	@ zero_extendqisi2
 406 001a 00F0F001 		and	r1, r0, #240
 407 001e 1170     		strb	r1, [r2, #0]
  86:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG2_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_D_MASK));
 408              		.loc 1 86 0
 409 0020 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 410 0022 0022     		movs	r2, #0
 411 0024 1A70     		strb	r2, [r3, #0]
  89:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.flashWaitCycles = CY_PM_CACHE_CR_CYCLES_MASK & CY_PM_CACHE_CR_REG;
 412              		.loc 1 89 0
 413 0026 644B     		ldr	r3, .L51+12
 414 0028 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 415 002a 00F0C001 		and	r1, r0, #192
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 40


  90:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 416              		.loc 1 90 0
 417 002e 3720     		movs	r0, #55
  89:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.flashWaitCycles = CY_PM_CACHE_CR_CYCLES_MASK & CY_PM_CACHE_CR_REG;
 418              		.loc 1 89 0
 419 0030 84F83510 		strb	r1, [r4, #53]
  90:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 420              		.loc 1 90 0
 421 0034 FFF7FEFF 		bl	CyFlash_SetWaitCycles
 422              	.LVL0:
  93:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.imoFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 423              		.loc 1 93 0
 424 0038 604B     		ldr	r3, .L51+16
 425 003a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 426 003c 02F00700 		and	r0, r2, #7
 427 0040 84F83300 		strb	r0, [r4, #51]
  94:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.imoUsbClk = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_USB;
 428              		.loc 1 94 0
 429 0044 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 430 0046 01F04002 		and	r2, r1, #64
 431 004a 84F83420 		strb	r2, [r4, #52]
  97:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 432              		.loc 1 97 0
 433 004e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 109:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.masterClkSrc = CY_PM_CLKDIST_MSTR1_REG & CY_PM_MASTER_CLK_SRC_MASK;
 434              		.loc 1 109 0
 435 0050 574A     		ldr	r2, .L51+4
  97:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 436              		.loc 1 97 0
 437 0052 13F01000 		ands	r0, r3, #16
 100:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imo2x = CY_PM_ENABLED;
 438              		.loc 1 100 0
 439 0056 18BF     		it	ne
 440 0058 0120     		movne	r0, #1
 105:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imo2x = CY_PM_DISABLED;
 441              		.loc 1 105 0
 442 005a 84F83900 		strb	r0, [r4, #57]
 109:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.masterClkSrc = CY_PM_CLKDIST_MSTR1_REG & CY_PM_MASTER_CLK_SRC_MASK;
 443              		.loc 1 109 0
 444 005e 584C     		ldr	r4, .L51+20
 445 0060 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 446 0062 01F00303 		and	r3, r1, #3
 112:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_PLL == cyPmClockBackup.masterClkSrc)
 447              		.loc 1 112 0
 448 0066 012B     		cmp	r3, #1
 109:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.masterClkSrc = CY_PM_CLKDIST_MSTR1_REG & CY_PM_MASTER_CLK_SRC_MASK;
 449              		.loc 1 109 0
 450 0068 82F83230 		strb	r3, [r2, #50]
 112:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_PLL == cyPmClockBackup.masterClkSrc)
 451              		.loc 1 112 0
 452 006c 10D1     		bne	.L14
 114:.\Generated_Source\PSoC5/cyPm.c ****         switch (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_PLL_SRC_MASK)
 453              		.loc 1 114 0
 454 006e 4FF04020 		mov	r0, #1073758208
 455 0072 0478     		ldrb	r4, [r0, #0]	@ zero_extendqisi2
 456 0074 04F00301 		and	r1, r4, #3
 457 0078 0129     		cmp	r1, #1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 41


 458 007a 06D0     		beq	.L16
 459 007c 03D3     		bcc	.L15
 460 007e 0229     		cmp	r1, #2
 461 0080 06D1     		bne	.L14
 125:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_DSI);
 462              		.loc 1 125 0
 463 0082 0320     		movs	r0, #3
 464 0084 02E0     		b	.L50
 465              	.L15:
 117:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 466              		.loc 1 117 0
 467 0086 0020     		movs	r0, #0
 468 0088 00E0     		b	.L50
 469              	.L16:
 121:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_XTAL);
 470              		.loc 1 121 0
 471 008a 0220     		movs	r0, #2
 472              	.L50:
 125:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_DSI);
 473              		.loc 1 125 0
 474 008c FFF7FEFF 		bl	CyMasterClk_SetSource
 475              	.LVL1:
 476              	.L14:
 135:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_PLL_CFG0_REG & CY_PM_PLL_CFG0_ENABLE))
 477              		.loc 1 135 0
 478 0090 4C4B     		ldr	r3, .L51+24
 479 0092 474C     		ldr	r4, .L51+4
 480 0094 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 481 0096 12F00100 		ands	r0, r2, #1
 482 009a 05D0     		beq	.L18
 138:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.pllEnableState = CY_PM_ENABLED;
 483              		.loc 1 138 0
 484 009c 0121     		movs	r1, #1
 485 009e 84F83E10 		strb	r1, [r4, #62]
 139:.\Generated_Source\PSoC5/cyPm.c ****         CyPLL_OUT_Stop();
 486              		.loc 1 139 0
 487 00a2 FFF7FEFF 		bl	CyPLL_OUT_Stop
 488              	.LVL2:
 489 00a6 01E0     		b	.L19
 490              	.L18:
 144:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.pllEnableState = CY_PM_DISABLED;
 491              		.loc 1 144 0
 492 00a8 84F83E00 		strb	r0, [r4, #62]
 493              	.L19:
 148:.\Generated_Source\PSoC5/cyPm.c ****     CyIMO_SetFreq(CY_PM_IMO_FREQ_LPM);
 494              		.loc 1 148 0
 495 00ac 0420     		movs	r0, #4
 496 00ae FFF7FEFF 		bl	CyIMO_SetFreq
 497              	.LVL3:
 151:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG))
 498              		.loc 1 151 0
 499 00b2 454B     		ldr	r3, .L51+28
 500 00b4 3E49     		ldr	r1, .L51+4
 501 00b6 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 502 00b8 02F01004 		and	r4, r2, #16
 503 00bc 2046     		mov	r0, r4
 504 00be 1CB1     		cbz	r4, .L20
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 42


 154:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoEnable = CY_PM_ENABLED;
 505              		.loc 1 154 0
 506 00c0 0120     		movs	r0, #1
 507 00c2 81F83600 		strb	r0, [r1, #54]
 508 00c6 06E0     		b	.L21
 509              	.L20:
 159:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoEnable = CY_PM_DISABLED;
 510              		.loc 1 159 0
 511 00c8 81F83640 		strb	r4, [r1, #54]
 162:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 512              		.loc 1 162 0
 513 00cc FFF7FEFF 		bl	CyIMO_Start
 514              	.LVL4:
 165:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayUs(6u);
 515              		.loc 1 165 0
 516 00d0 0620     		movs	r0, #6
 517 00d2 FFF7FEFF 		bl	CyDelayUs
 518              	.LVL5:
 519              	.L21:
 169:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_XCLKEN))
 520              		.loc 1 169 0
 521 00d6 394B     		ldr	r3, .L51+16
 522 00d8 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 523 00da 12F02004 		ands	r4, r2, #32
 524 00de 10D0     		beq	.L22
 173:.\Generated_Source\PSoC5/cyPm.c ****             (0u == (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO2X_SRC)) ? CY_IMO_SOURCE_DSI : CY_IMO_S
 525              		.loc 1 173 0
 526 00e0 4FF04020 		mov	r0, #1073758208
 527 00e4 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 172:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc =
 528              		.loc 1 172 0
 529 00e6 3248     		ldr	r0, .L51+4
 530 00e8 03F04002 		and	r2, r3, #64
 531 00ec D4B2     		uxtb	r4, r2
 532 00ee 002C     		cmp	r4, #0
 533 00f0 14BF     		ite	ne
 534 00f2 0121     		movne	r1, #1
 535 00f4 0221     		moveq	r1, #2
 536 00f6 80F83710 		strb	r1, [r0, #55]
 176:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetSource(CY_IMO_SOURCE_IMO);
 537              		.loc 1 176 0
 538 00fa 0020     		movs	r0, #0
 539 00fc FFF7FEFF 		bl	CyIMO_SetSource
 540              	.LVL6:
 541 0100 02E0     		b	.L24
 542              	.L22:
 181:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc = CY_IMO_SOURCE_IMO;
 543              		.loc 1 181 0
 544 0102 2B49     		ldr	r1, .L51+4
 545 0104 81F83740 		strb	r4, [r1, #55]
 546              	.L24:
 185:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkImoSrc = CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK;
 547              		.loc 1 185 0
 548 0108 4FF04023 		mov	r3, #1073758208
 549 010c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 550 010e 2849     		ldr	r1, .L51+4
 551 0110 02F03004 		and	r4, r2, #48
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 43


 552 0114 81F83840 		strb	r4, [r1, #56]
 188:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_CLKDIST_IMO_OUT_IMO != cyPmClockBackup.clkImoSrc)
 553              		.loc 1 188 0
 554 0118 1CB1     		cbz	r4, .L25
 191:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 555              		.loc 1 191 0
 556 011a 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 557 011c 00F0CF02 		and	r2, r0, #207
 558 0120 1A70     		strb	r2, [r3, #0]
 559              	.L25:
 196:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 560              		.loc 1 196 0
 561 0122 264B     		ldr	r3, .L51+16
 562 0124 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 563 0126 04F01001 		and	r1, r4, #16
 564 012a C8B2     		uxtb	r0, r1
 565 012c 08B1     		cbz	r0, .L26
 198:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_DisableDoubler();
 566              		.loc 1 198 0
 567 012e FFF7FEFF 		bl	CyIMO_DisableDoubler
 568              	.LVL7:
 569              	.L26:
 202:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkSyncDiv = CY_PM_CLKDIST_MSTR0_REG;
 570              		.loc 1 202 0
 571 0132 264A     		ldr	r2, .L51+32
 572 0134 1E4C     		ldr	r4, .L51+4
 573 0136 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 574 0138 84F83A30 		strb	r3, [r4, #58]
 203:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_DIV_BY_ONE != cyPmClockBackup.clkSyncDiv)
 575              		.loc 1 203 0
 576 013c 13B1     		cbz	r3, .L27
 205:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetDivider(CY_PM_DIV_BY_ONE);
 577              		.loc 1 205 0
 578 013e 0020     		movs	r0, #0
 579 0140 FFF7FEFF 		bl	CyMasterClk_SetDivider
 580              	.LVL8:
 581              	.L27:
 209:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_IMO != cyPmClockBackup.masterClkSrc)
 582              		.loc 1 209 0
 583 0144 94F83210 		ldrb	r1, [r4, #50]	@ zero_extendqisi2
 584 0148 11B1     		cbz	r1, .L28
 211:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 585              		.loc 1 211 0
 586 014a 0020     		movs	r0, #0
 587 014c FFF7FEFF 		bl	CyMasterClk_SetSource
 588              	.LVL9:
 589              	.L28:
 215:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv = (uint16) ((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 590              		.loc 1 215 0
 591 0150 1F48     		ldr	r0, .L51+36
 216:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv |= CY_PM_CLK_BUS_LSB_DIV_REG;
 592              		.loc 1 216 0
 593 0152 2049     		ldr	r1, .L51+40
 215:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv = (uint16) ((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 594              		.loc 1 215 0
 595 0154 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 596 0156 1648     		ldr	r0, .L51+4
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 44


 597 0158 1302     		lsls	r3, r2, #8
 598 015a 8387     		strh	r3, [r0, #60]	@ movhi
 216:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv |= CY_PM_CLK_BUS_LSB_DIV_REG;
 599              		.loc 1 216 0
 600 015c 0A78     		ldrb	r2, [r1, #0]	@ zero_extendqisi2
 601 015e 1343     		orrs	r3, r3, r2
 602 0160 8387     		strh	r3, [r0, #60]	@ movhi
 217:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_BUS_CLK_DIV_BY_ONE != cyPmClockBackup.clkBusDiv)
 603              		.loc 1 217 0
 604 0162 13B1     		cbz	r3, .L29
 219:.\Generated_Source\PSoC5/cyPm.c ****         CyBusClk_SetDivider(CY_PM_BUS_CLK_DIV_BY_ONE);
 605              		.loc 1 219 0
 606 0164 0020     		movs	r0, #0
 607 0166 FFF7FEFF 		bl	CyBusClk_SetDivider
 608              	.LVL10:
 609              	.L29:
 223:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles((uint8)CY_PM_GET_CPU_FREQ_MHZ);
 610              		.loc 1 223 0
 611 016a 144B     		ldr	r3, .L51+16
 612 016c 1A4A     		ldr	r2, .L51+44
 613 016e 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 614 0170 00F00701 		and	r1, r0, #7
 615 0174 505C     		ldrb	r0, [r2, r1]	@ zero_extendqisi2
 616 0176 FFF7FEFF 		bl	CyFlash_SetWaitCycles
 617              	.LVL11:
 226:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_ENABLE))
 618              		.loc 1 226 0
 619 017a 184B     		ldr	r3, .L51+48
 620 017c 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 621 017e 0C4B     		ldr	r3, .L51+4
 622 0180 10F00101 		ands	r1, r0, #1
 623 0184 05D0     		beq	.L30
 229:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.xmhzEnableState = CY_PM_ENABLED;
 624              		.loc 1 229 0
 625 0186 0122     		movs	r2, #1
 626 0188 83F83F20 		strb	r2, [r3, #63]
 230:.\Generated_Source\PSoC5/cyPm.c ****         CyXTAL_Stop();
 627              		.loc 1 230 0
 628 018c FFF7FEFF 		bl	CyXTAL_Stop
 629              	.LVL12:
 630 0190 01E0     		b	.L31
 631              	.L30:
 235:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.xmhzEnableState = CY_PM_DISABLED;
 632              		.loc 1 235 0
 633 0192 83F83F10 		strb	r1, [r3, #63]
 634              	.L31:
 244:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_CLKDIST_DELAY_REG & CY_PM_CLKDIST_DELAY_EN))
 635              		.loc 1 244 0
 636 0196 1248     		ldr	r0, .L51+52
 637 0198 054B     		ldr	r3, .L51+4
 638 019a 0178     		ldrb	r1, [r0, #0]	@ zero_extendqisi2
 639 019c 11F00402 		ands	r2, r1, #4
 246:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.clkDistDelay = CY_PM_ENABLED;
 640              		.loc 1 246 0
 641 01a0 18BF     		it	ne
 642 01a2 0122     		movne	r2, #1
 250:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.clkDistDelay = CY_PM_DISABLED;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 45


 643              		.loc 1 250 0
 644 01a4 83F84020 		strb	r2, [r3, #64]
 645 01a8 10BD     		pop	{r4, pc}
 646              	.L52:
 647 01aa 00BF     		.align	2
 648              	.L51:
 649 01ac A1430040 		.word	1073759137
 650 01b0 00000000 		.word	.LANCHOR0
 651 01b4 A2430040 		.word	1073759138
 652 01b8 00480040 		.word	1073760256
 653 01bc 00420040 		.word	1073758720
 654 01c0 05400040 		.word	1073758213
 655 01c4 20420040 		.word	1073758752
 656 01c8 A0430040 		.word	1073759136
 657 01cc 04400040 		.word	1073758212
 658 01d0 07400040 		.word	1073758215
 659 01d4 06400040 		.word	1073758214
 660 01d8 00000000 		.word	.LANCHOR1
 661 01dc 10420040 		.word	1073758736
 662 01e0 0B400040 		.word	1073758219
 663              		.cfi_endproc
 664              	.LFE0:
 665              		.size	CyPmSaveClocks, .-CyPmSaveClocks
 666              		.section	.text.CyPmRestoreClocks,"ax",%progbits
 667              		.align	1
 668              		.global	CyPmRestoreClocks
 669              		.thumb
 670              		.thumb_func
 671              		.type	CyPmRestoreClocks, %function
 672              	CyPmRestoreClocks:
 673              	.LFB1:
 283:.\Generated_Source\PSoC5/cyPm.c **** {
 674              		.loc 1 283 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 8
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              	.LVL13:
 290:.\Generated_Source\PSoC5/cyPm.c ****     const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 679              		.loc 1 290 0
 680 0000 7D4A     		ldr	r2, .L90
 283:.\Generated_Source\PSoC5/cyPm.c **** {
 681              		.loc 1 283 0
 682 0002 13B5     		push	{r0, r1, r4, lr}
 683              	.LCFI2:
 684              		.cfi_def_cfa_offset 16
 685              		.cfi_offset 0, -16
 686              		.cfi_offset 1, -12
 687              		.cfi_offset 4, -8
 688              		.cfi_offset 14, -4
 290:.\Generated_Source\PSoC5/cyPm.c ****     const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 689              		.loc 1 290 0
 690 0004 1346     		mov	r3, r2
 691 0006 53F8070F 		ldr	r0, [r3, #7]!	@ unaligned
 692 000a 9988     		ldrh	r1, [r3, #4]	@ unaligned
 693 000c 9C79     		ldrb	r4, [r3, #6]	@ zero_extendqisi2
 295:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.clkDistDelay)
 694              		.loc 1 295 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 46


 695 000e 7B4B     		ldr	r3, .L90+4
 290:.\Generated_Source\PSoC5/cyPm.c ****     const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 696              		.loc 1 290 0
 697 0010 0090     		str	r0, [sp, #0]	@ unaligned
 295:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.clkDistDelay)
 698              		.loc 1 295 0
 699 0012 93F84000 		ldrb	r0, [r3, #64]	@ zero_extendqisi2
 290:.\Generated_Source\PSoC5/cyPm.c ****     const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 700              		.loc 1 290 0
 701 0016 ADF80410 		strh	r1, [sp, #4]	@ unaligned
 295:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.clkDistDelay)
 702              		.loc 1 295 0
 703 001a 0128     		cmp	r0, #1
 290:.\Generated_Source\PSoC5/cyPm.c ****     const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 704              		.loc 1 290 0
 705 001c 8DF80640 		strb	r4, [sp, #6]
 295:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.clkDistDelay)
 706              		.loc 1 295 0
 707 0020 0DD1     		bne	.L54
 299:.\Generated_Source\PSoC5/cyPm.c ****                         CY_PM_GET_CPU_FREQ_MHZ);
 708              		.loc 1 299 0
 709 0022 7749     		ldr	r1, .L90+8
 298:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayCycles((uint32)(CY_PM_CLK_DELAY_BANDGAP_SETTLE_US + CY_PM_CLK_DELAY_BIAS_SETTLE_US) 
 710              		.loc 1 298 0
 711 0024 4B20     		movs	r0, #75
 299:.\Generated_Source\PSoC5/cyPm.c ****                         CY_PM_GET_CPU_FREQ_MHZ);
 712              		.loc 1 299 0
 713 0026 0C78     		ldrb	r4, [r1, #0]	@ zero_extendqisi2
 714 0028 04F00703 		and	r3, r4, #7
 298:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayCycles((uint32)(CY_PM_CLK_DELAY_BANDGAP_SETTLE_US + CY_PM_CLK_DELAY_BIAS_SETTLE_US) 
 715              		.loc 1 298 0
 716 002c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 717 002e 5043     		muls	r0, r2, r0
 718 0030 FFF7FEFF 		bl	CyDelayCycles
 719              	.LVL14:
 301:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_DELAY_REG |= CY_PM_CLKDIST_DELAY_EN;
 720              		.loc 1 301 0
 721 0034 7348     		ldr	r0, .L90+12
 722 0036 0178     		ldrb	r1, [r0, #0]	@ zero_extendqisi2
 723 0038 41F00404 		orr	r4, r1, #4
 724 003c 0470     		strb	r4, [r0, #0]
 725              	.L54:
 305:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState)
 726              		.loc 1 305 0
 727 003e 6F4B     		ldr	r3, .L90+4
 728 0040 93F83F20 		ldrb	r2, [r3, #63]	@ zero_extendqisi2
 729 0044 012A     		cmp	r2, #1
 730 0046 09D0     		beq	.L55
 731              	.L58:
 351:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_XTAL == cyPmClockBackup.masterClkSrc) ||
 732              		.loc 1 351 0
 733 0048 6C4C     		ldr	r4, .L90+4
 348:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 734              		.loc 1 348 0
 735 004a 3720     		movs	r0, #55
 736 004c FFF7FEFF 		bl	CyFlash_SetWaitCycles
 737              	.LVL15:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 47


 351:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_XTAL == cyPmClockBackup.masterClkSrc) ||
 738              		.loc 1 351 0
 739 0050 94F83220 		ldrb	r2, [r4, #50]	@ zero_extendqisi2
 740 0054 911E     		subs	r1, r2, #2
 741 0056 0129     		cmp	r1, #1
 742 0058 25D8     		bhi	.L57
 743 005a 18E0     		b	.L88
 744              	.L55:
 315:.\Generated_Source\PSoC5/cyPm.c ****         (void) CyXTAL_Start(CY_PM_XTAL_MHZ_NO_WAIT);
 745              		.loc 1 315 0
 746 005c 0020     		movs	r0, #0
 747 005e FFF7FEFF 		bl	CyXTAL_Start
 748              	.LVL16:
 318:.\Generated_Source\PSoC5/cyPm.c ****         (void) CY_PM_FASTCLK_XMHZ_CSR_REG;
 749              		.loc 1 318 0
 750 0062 6948     		ldr	r0, .L90+16
 751 0064 0524     		movs	r4, #5
 752 0066 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 753              	.LVL17:
 754              	.L59:
 324:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayCycles((uint32)CY_PM_WAIT_200_US * CY_PM_GET_CPU_FREQ_MHZ);
 755              		.loc 1 324 0
 756 0068 6549     		ldr	r1, .L90+8
 757 006a 634A     		ldr	r2, .L90
 758 006c 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 759 006e 03F00700 		and	r0, r3, #7
 760 0072 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 761 0074 C820     		movs	r0, #200
 762 0076 4843     		muls	r0, r1, r0
 763 0078 FFF7FEFF 		bl	CyDelayCycles
 764              	.LVL18:
 327:.\Generated_Source\PSoC5/cyPm.c ****             if(0u == (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_XERR))
 765              		.loc 1 327 0
 766 007c 624B     		ldr	r3, .L90+16
 767 007e 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 768 0080 0106     		lsls	r1, r0, #24
 769 0082 E1D5     		bpl	.L58
 770 0084 013C     		subs	r4, r4, #1
 771 0086 A4B2     		uxth	r4, r4
 321:.\Generated_Source\PSoC5/cyPm.c ****         for(i = CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US; i > 0u; i--)
 772              		.loc 1 321 0
 773 0088 002C     		cmp	r4, #0
 774 008a EDD1     		bne	.L59
 775 008c DCE7     		b	.L58
 776              	.L88:
 355:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 777              		.loc 1 355 0
 778 008e 5F4B     		ldr	r3, .L90+20
 779 0090 94F83A00 		ldrb	r0, [r4, #58]	@ zero_extendqisi2
 780 0094 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 781 0096 8242     		cmp	r2, r0
 782 0098 01D0     		beq	.L60
 358:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 783              		.loc 1 358 0
 784 009a FFF7FEFF 		bl	CyMasterClk_SetDivider
 785              	.LVL19:
 786              	.L60:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 48


 362:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 787              		.loc 1 362 0
 788 009e 94F83200 		ldrb	r0, [r4, #50]	@ zero_extendqisi2
 789 00a2 FFF7FEFF 		bl	CyMasterClk_SetSource
 790              	.LVL20:
 791              	.L57:
 366:.\Generated_Source\PSoC5/cyPm.c ****     if((0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB)) &&
 792              		.loc 1 366 0
 793 00a6 5548     		ldr	r0, .L90+4
 794 00a8 90F83440 		ldrb	r4, [r0, #52]	@ zero_extendqisi2
 795 00ac 04F04001 		and	r1, r4, #64
 796 00b0 CBB2     		uxtb	r3, r1
 797 00b2 0446     		mov	r4, r0
 798 00b4 5BB1     		cbz	r3, .L61
 367:.\Generated_Source\PSoC5/cyPm.c ****         (CY_IMO_FREQ_24MHZ == cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]))
 799              		.loc 1 367 0 discriminator 1
 800 00b6 90F83300 		ldrb	r0, [r0, #51]	@ zero_extendqisi2
 801 00ba 02AA     		add	r2, sp, #8
 802 00bc 1118     		adds	r1, r2, r0
 366:.\Generated_Source\PSoC5/cyPm.c ****     if((0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB)) &&
 803              		.loc 1 366 0 discriminator 1
 804 00be 11F8083C 		ldrb	r3, [r1, #-8]	@ zero_extendqisi2
 805 00c2 032B     		cmp	r3, #3
 806 00c4 03D1     		bne	.L61
 370:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetFreq(CY_IMO_FREQ_USB);
 807              		.loc 1 370 0
 808 00c6 0820     		movs	r0, #8
 809 00c8 FFF7FEFF 		bl	CyIMO_SetFreq
 810              	.LVL21:
 811 00cc 16E0     		b	.L62
 812              	.L61:
 375:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetFreq(cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]);
 813              		.loc 1 375 0
 814 00ce 94F83300 		ldrb	r0, [r4, #51]	@ zero_extendqisi2
 815 00d2 02AA     		add	r2, sp, #8
 816 00d4 1118     		adds	r1, r2, r0
 817 00d6 11F8080C 		ldrb	r0, [r1, #-8]	@ zero_extendqisi2
 818 00da FFF7FEFF 		bl	CyIMO_SetFreq
 819              	.LVL22:
 377:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB))
 820              		.loc 1 377 0
 821 00de 94F83440 		ldrb	r4, [r4, #52]	@ zero_extendqisi2
 822 00e2 4749     		ldr	r1, .L90+8
 823 00e4 04F04003 		and	r3, r4, #64
 824 00e8 D8B2     		uxtb	r0, r3
 825 00ea 18B1     		cbz	r0, .L63
 379:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_FASTCLK_IMO_CR_REG |= CY_PM_FASTCLK_IMO_CR_USB;
 826              		.loc 1 379 0
 827 00ec 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 828 00ee 43F04004 		orr	r4, r3, #64
 829 00f2 02E0     		b	.L87
 830              	.L63:
 383:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_FASTCLK_IMO_CR_REG &= ((uint8)(~CY_PM_FASTCLK_IMO_CR_USB));
 831              		.loc 1 383 0
 832 00f4 0A78     		ldrb	r2, [r1, #0]	@ zero_extendqisi2
 833 00f6 02F0BF04 		and	r4, r2, #191
 834              	.L87:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 49


 835 00fa 0C70     		strb	r4, [r1, #0]
 836              	.L62:
 388:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_ENABLED == cyPmClockBackup.imoEnable) &&
 837              		.loc 1 388 0
 838 00fc 3F48     		ldr	r0, .L90+4
 839 00fe 90F83610 		ldrb	r1, [r0, #54]	@ zero_extendqisi2
 840 0102 0129     		cmp	r1, #1
 841 0104 07D1     		bne	.L64
 389:.\Generated_Source\PSoC5/cyPm.c ****        (0u == (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 842              		.loc 1 389 0 discriminator 1
 843 0106 424A     		ldr	r2, .L90+24
 844 0108 1478     		ldrb	r4, [r2, #0]	@ zero_extendqisi2
 388:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_ENABLED == cyPmClockBackup.imoEnable) &&
 845              		.loc 1 388 0 discriminator 1
 846 010a 04F01003 		and	r3, r4, #16
 847 010e D8B2     		uxtb	r0, r3
 848 0110 08B9     		cbnz	r0, .L64
 392:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 849              		.loc 1 392 0
 850 0112 FFF7FEFF 		bl	CyIMO_Start
 851              	.LVL23:
 852              	.L64:
 396:.\Generated_Source\PSoC5/cyPm.c ****     CyIMO_SetSource(cyPmClockBackup.imoClkSrc);
 853              		.loc 1 396 0
 854 0116 394C     		ldr	r4, .L90+4
 855 0118 94F83700 		ldrb	r0, [r4, #55]	@ zero_extendqisi2
 856 011c FFF7FEFF 		bl	CyIMO_SetSource
 857              	.LVL24:
 399:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.imo2x)
 858              		.loc 1 399 0
 859 0120 94F83900 		ldrb	r0, [r4, #57]	@ zero_extendqisi2
 860 0124 0128     		cmp	r0, #1
 861 0126 01D1     		bne	.L65
 401:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_EnableDoubler();
 862              		.loc 1 401 0
 863 0128 FFF7FEFF 		bl	CyIMO_EnableDoubler
 864              	.LVL25:
 865              	.L65:
 405:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkImoSrc != (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK))
 866              		.loc 1 405 0
 867 012c 4FF04023 		mov	r3, #1073758208
 868 0130 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 869 0132 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 870 0136 01F03004 		and	r4, r1, #48
 871 013a A242     		cmp	r2, r4
 872 013c 04D0     		beq	.L66
 407:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 873              		.loc 1 407 0
 874 013e 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 875 0140 20F03001 		bic	r1, r0, #48
 876 0144 0A43     		orrs	r2, r2, r1
 877 0146 1A70     		strb	r2, [r3, #0]
 878              	.L66:
 413:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.pllEnableState)
 879              		.loc 1 413 0
 880 0148 2C4B     		ldr	r3, .L90+4
 881 014a 93F83E40 		ldrb	r4, [r3, #62]	@ zero_extendqisi2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 50


 882 014e 012C     		cmp	r4, #1
 883 0150 05D0     		beq	.L67
 884              	.L71:
 457:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_IMO == cyPmClockBackup.masterClkSrc) ||
 885              		.loc 1 457 0
 886 0152 2A4C     		ldr	r4, .L90+4
 887 0154 94F83200 		ldrb	r0, [r4, #50]	@ zero_extendqisi2
 888 0158 0128     		cmp	r0, #1
 889 015a 24D8     		bhi	.L69
 890 015c 17E0     		b	.L89
 891              	.L67:
 424:.\Generated_Source\PSoC5/cyPm.c ****         (void) CyPLL_OUT_Start(CY_PM_PLL_OUT_NO_WAIT);
 892              		.loc 1 424 0
 893 015e 0020     		movs	r0, #0
 894 0160 FFF7FEFF 		bl	CyPLL_OUT_Start
 895              	.LVL26:
 427:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayUs((uint32)80u);
 896              		.loc 1 427 0
 897 0164 5020     		movs	r0, #80
 898 0166 FFF7FEFF 		bl	CyDelayUs
 899              	.LVL27:
 428:.\Generated_Source\PSoC5/cyPm.c ****         (void) CY_PM_FASTCLK_PLL_SR_REG;
 900              		.loc 1 428 0
 901 016a 2A48     		ldr	r0, .L90+28
 902 016c AB24     		movs	r4, #171
 903 016e 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 904              	.LVL28:
 905              	.L72:
 433:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayUs((uint32)1u);
 906              		.loc 1 433 0
 907 0170 0120     		movs	r0, #1
 908 0172 FFF7FEFF 		bl	CyDelayUs
 909              	.LVL29:
 436:.\Generated_Source\PSoC5/cyPm.c ****             if((0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)) &&
 910              		.loc 1 436 0
 911 0176 2749     		ldr	r1, .L90+28
 912 0178 0A78     		ldrb	r2, [r1, #0]	@ zero_extendqisi2
 913 017a D207     		lsls	r2, r2, #31
 914 017c 02D5     		bpl	.L70
 437:.\Generated_Source\PSoC5/cyPm.c ****                (0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)))
 915              		.loc 1 437 0 discriminator 1
 916 017e 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 436:.\Generated_Source\PSoC5/cyPm.c ****             if((0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)) &&
 917              		.loc 1 436 0 discriminator 1
 918 0180 DB07     		lsls	r3, r3, #31
 919 0182 E6D4     		bmi	.L71
 920              	.L70:
 921 0184 013C     		subs	r4, r4, #1
 922 0186 A4B2     		uxth	r4, r4
 431:.\Generated_Source\PSoC5/cyPm.c ****         for(i = 171u; i > 0u; i--)
 923              		.loc 1 431 0
 924 0188 002C     		cmp	r4, #0
 925 018a F1D1     		bne	.L72
 926 018c E1E7     		b	.L71
 927              	.L89:
 461:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 928              		.loc 1 461 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 51


 929 018e 1F49     		ldr	r1, .L90+20
 930 0190 94F83A00 		ldrb	r0, [r4, #58]	@ zero_extendqisi2
 931 0194 0A78     		ldrb	r2, [r1, #0]	@ zero_extendqisi2
 932 0196 8242     		cmp	r2, r0
 933 0198 01D0     		beq	.L73
 463:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 934              		.loc 1 463 0
 935 019a FFF7FEFF 		bl	CyMasterClk_SetDivider
 936              	.LVL30:
 937              	.L73:
 467:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 938              		.loc 1 467 0
 939 019e 94F83200 		ldrb	r0, [r4, #50]	@ zero_extendqisi2
 940 01a2 FFF7FEFF 		bl	CyMasterClk_SetSource
 941              	.LVL31:
 942              	.L69:
 471:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_DISABLED == cyPmClockBackup.imoEnable) &&
 943              		.loc 1 471 0
 944 01a6 154B     		ldr	r3, .L90+4
 945 01a8 93F83640 		ldrb	r4, [r3, #54]	@ zero_extendqisi2
 946 01ac 3CB9     		cbnz	r4, .L74
 472:.\Generated_Source\PSoC5/cyPm.c ****        (0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 947              		.loc 1 472 0 discriminator 1
 948 01ae 1848     		ldr	r0, .L90+24
 949 01b0 0178     		ldrb	r1, [r0, #0]	@ zero_extendqisi2
 471:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_DISABLED == cyPmClockBackup.imoEnable) &&
 950              		.loc 1 471 0 discriminator 1
 951 01b2 01F01002 		and	r2, r1, #16
 952 01b6 D3B2     		uxtb	r3, r2
 953 01b8 0BB1     		cbz	r3, .L74
 474:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Stop();
 954              		.loc 1 474 0
 955 01ba FFF7FEFF 		bl	CyIMO_Stop
 956              	.LVL32:
 957              	.L74:
 478:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp = (uint16) ((uint16)CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 958              		.loc 1 478 0
 959 01be 164C     		ldr	r4, .L90+32
 479:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp |= CY_PM_CLK_BUS_LSB_DIV_REG;
 960              		.loc 1 479 0
 961 01c0 601E     		subs	r0, r4, #1
 478:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp = (uint16) ((uint16)CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 962              		.loc 1 478 0
 963 01c2 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 964              	.LVL33:
 480:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkBusDiv != clkBusDivTmp)
 965              		.loc 1 480 0
 966 01c4 0D4C     		ldr	r4, .L90+4
 479:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp |= CY_PM_CLK_BUS_LSB_DIV_REG;
 967              		.loc 1 479 0
 968 01c6 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 969              	.LVL34:
 480:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkBusDiv != clkBusDivTmp)
 970              		.loc 1 480 0
 971 01c8 A08F     		ldrh	r0, [r4, #60]
 972 01ca 42EA0123 		orr	r3, r2, r1, lsl #8
 973 01ce 9842     		cmp	r0, r3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 52


 974 01d0 01D0     		beq	.L75
 482:.\Generated_Source\PSoC5/cyPm.c ****         CyBusClk_SetDivider(cyPmClockBackup.clkBusDiv);
 975              		.loc 1 482 0
 976 01d2 FFF7FEFF 		bl	CyBusClk_SetDivider
 977              	.LVL35:
 978              	.L75:
 486:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_CACHE_CR_REG = ((CY_PM_CACHE_CR_REG & ((uint8)(~CY_PM_CACHE_CR_CYCLES_MASK))) |
 979              		.loc 1 486 0
 980 01d6 1148     		ldr	r0, .L90+36
 981 01d8 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 982 01dc 0178     		ldrb	r1, [r0, #0]	@ zero_extendqisi2
 983 01de 01F03F02 		and	r2, r1, #63
 984 01e2 1A43     		orrs	r2, r2, r3
 985 01e4 0270     		strb	r2, [r0, #0]
 490:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG = cyPmClockBackup.enClkA;
 986              		.loc 1 490 0
 987 01e6 94F83000 		ldrb	r0, [r4, #48]	@ zero_extendqisi2
 988 01ea 0D49     		ldr	r1, .L90+40
 989 01ec 0870     		strb	r0, [r1, #0]
 491:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG2_REG = cyPmClockBackup.enClkD;
 990              		.loc 1 491 0
 991 01ee 94F83120 		ldrb	r2, [r4, #49]	@ zero_extendqisi2
 992 01f2 4A70     		strb	r2, [r1, #1]
 492:.\Generated_Source\PSoC5/cyPm.c **** }
 993              		.loc 1 492 0
 994 01f4 1CBD     		pop	{r2, r3, r4, pc}
 995              	.L91:
 996 01f6 00BF     		.align	2
 997              	.L90:
 998 01f8 00000000 		.word	.LANCHOR1
 999 01fc 00000000 		.word	.LANCHOR0
 1000 0200 00420040 		.word	1073758720
 1001 0204 0B400040 		.word	1073758219
 1002 0208 10420040 		.word	1073758736
 1003 020c 04400040 		.word	1073758212
 1004 0210 A0430040 		.word	1073759136
 1005 0214 25420040 		.word	1073758757
 1006 0218 07400040 		.word	1073758215
 1007 021c 00480040 		.word	1073760256
 1008 0220 A1430040 		.word	1073759137
 1009              		.cfi_endproc
 1010              	.LFE1:
 1011              		.size	CyPmRestoreClocks, .-CyPmRestoreClocks
 1012              		.section	.text.CyPmAltAct,"ax",%progbits
 1013              		.align	1
 1014              		.global	CyPmAltAct
 1015              		.thumb
 1016              		.thumb_func
 1017              		.type	CyPmAltAct, %function
 1018              	CyPmAltAct:
 1019              	.LFB2:
 637:.\Generated_Source\PSoC5/cyPm.c **** {
 1020              		.loc 1 637 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 1024              	.LVL36:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 53


 1025 0000 30B5     		push	{r4, r5, lr}
 1026              	.LCFI3:
 1027              		.cfi_def_cfa_offset 12
 1028              		.cfi_offset 4, -12
 1029              		.cfi_offset 5, -8
 1030              		.cfi_offset 14, -4
 688:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1031              		.loc 1 688 0
 1032 0002 124C     		ldr	r4, .L93
 1033 0004 124B     		ldr	r3, .L93+4
 1034 0006 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 689:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 1035              		.loc 1 689 0
 1036 0008 0809     		lsrs	r0, r1, #4
 1037              	.LVL37:
 688:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1038              		.loc 1 688 0
 1039 000a 1A71     		strb	r2, [r3, #4]
 689:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 1040              		.loc 1 689 0
 1041 000c 2070     		strb	r0, [r4, #0]
 692:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1042              		.loc 1 692 0
 1043 000e 1148     		ldr	r0, .L93+8
 693:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 1044              		.loc 1 693 0
 1045 0010 01F00F02 		and	r2, r1, #15
 692:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1046              		.loc 1 692 0
 1047 0014 0578     		ldrb	r5, [r0, #0]	@ zero_extendqisi2
 697:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 1048              		.loc 1 697 0
 1049 0016 C1F30031 		ubfx	r1, r1, #12, #1
 1050              	.LVL38:
 692:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1051              		.loc 1 692 0
 1052 001a 5D71     		strb	r5, [r3, #5]
 693:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 1053              		.loc 1 693 0
 1054 001c 0270     		strb	r2, [r0, #0]
 696:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1055              		.loc 1 696 0
 1056 001e 0E4A     		ldr	r2, .L93+12
 1057 0020 1578     		ldrb	r5, [r2, #0]	@ zero_extendqisi2
 1058 0022 9D71     		strb	r5, [r3, #6]
 697:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 1059              		.loc 1 697 0
 1060 0024 1170     		strb	r1, [r2, #0]
 701:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_A
 1061              		.loc 1 701 0
 1062 0026 0D49     		ldr	r1, .L93+16
 1063 0028 0D78     		ldrb	r5, [r1, #0]	@ zero_extendqisi2
 1064 002a 05F0F805 		and	r5, r5, #248
 1065 002e 45F00105 		orr	r5, r5, #1
 1066 0032 0D70     		strb	r5, [r1, #0]
 704:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
 1067              		.loc 1 704 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 54


 1068 0034 0978     		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 707:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1069              		.loc 1 707 0
 1070              	@ 707 ".\Generated_Source\PSoC5\cyPm.c" 1
 1071 0036 00BF     		NOP
 1072              	
 1073              	@ 0 "" 2
 708:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1074              		.loc 1 708 0
 1075              	@ 708 ".\Generated_Source\PSoC5\cyPm.c" 1
 1076 0038 00BF     		NOP
 1077              	
 1078              	@ 0 "" 2
 711:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
 1079              		.loc 1 711 0
 1080              	@ 711 ".\Generated_Source\PSoC5\cyPm.c" 1
 1081 003a 30BF     		WFI 
 1082              	
 1083              	@ 0 "" 2
 716:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 1084              		.loc 1 716 0
 1085              		.thumb
 1086 003c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1087 003e 2170     		strb	r1, [r4, #0]
 717:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 1088              		.loc 1 717 0
 1089 0040 5979     		ldrb	r1, [r3, #5]	@ zero_extendqisi2
 1090 0042 0170     		strb	r1, [r0, #0]
 718:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 1091              		.loc 1 718 0
 1092 0044 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1093 0046 1370     		strb	r3, [r2, #0]
 1094 0048 30BD     		pop	{r4, r5, pc}
 1095              	.L94:
 1096 004a 00BF     		.align	2
 1097              	.L93:
 1098 004c 98430040 		.word	1073759128
 1099 0050 00000000 		.word	.LANCHOR0
 1100 0054 99430040 		.word	1073759129
 1101 0058 9A430040 		.word	1073759130
 1102 005c 93430040 		.word	1073759123
 1103              		.cfi_endproc
 1104              	.LFE2:
 1105              		.size	CyPmAltAct, .-CyPmAltAct
 1106              		.section	.text.CyPmSleep,"ax",%progbits
 1107              		.align	1
 1108              		.global	CyPmSleep
 1109              		.thumb
 1110              		.thumb_func
 1111              		.type	CyPmSleep, %function
 1112              	CyPmSleep:
 1113              	.LFB3:
 841:.\Generated_Source\PSoC5/cyPm.c **** {
 1114              		.loc 1 841 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 55


 1118              	.LVL39:
 1119 0000 70B5     		push	{r4, r5, r6, lr}
 1120              	.LCFI4:
 1121              		.cfi_def_cfa_offset 16
 1122              		.cfi_offset 4, -16
 1123              		.cfi_offset 5, -12
 1124              		.cfi_offset 6, -8
 1125              		.cfi_offset 14, -4
 841:.\Generated_Source\PSoC5/cyPm.c **** {
 1126              		.loc 1 841 0
 1127 0002 0C46     		mov	r4, r1
 845:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1128              		.loc 1 845 0
 1129 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1130              	.LVL40:
 854:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 1131              		.loc 1 854 0
 1132 0008 2D4B     		ldr	r3, .L107
 845:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1133              		.loc 1 845 0
 1134 000a 0546     		mov	r5, r0
 1135              	.LVL41:
 854:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 1136              		.loc 1 854 0
 1137 000c 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1138 000e 11F00806 		ands	r6, r1, #8
 1139 0012 50D1     		bne	.L105
 857:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 1140              		.loc 1 857 0
 1141 0014 2B4A     		ldr	r2, .L107+4
 1142 0016 1078     		ldrb	r0, [r2, #0]	@ zero_extendqisi2
 1143              	.LVL42:
 1144 0018 00F01F03 		and	r3, r0, #31
 1145 001c 1370     		strb	r3, [r2, #0]
 935:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpSaveSet();
 1146              		.loc 1 935 0
 1147 001e FFF7FEFF 		bl	CyPmHibSlpSaveSet
 1148              	.LVL43:
 966:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1149              		.loc 1 966 0
 1150 0022 294A     		ldr	r2, .L107+8
 1151 0024 294B     		ldr	r3, .L107+12
 1152 0026 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 967:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 1153              		.loc 1 967 0
 1154 0028 2009     		lsrs	r0, r4, #4
 966:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1155              		.loc 1 966 0
 1156 002a 1971     		strb	r1, [r3, #4]
 967:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 1157              		.loc 1 967 0
 1158 002c 1070     		strb	r0, [r2, #0]
 970:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1159              		.loc 1 970 0
 1160 002e 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 971:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 1161              		.loc 1 971 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 56


 1162 0030 04F00F00 		and	r0, r4, #15
 970:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1163              		.loc 1 970 0
 1164 0034 5971     		strb	r1, [r3, #5]
 971:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 1165              		.loc 1 971 0
 1166 0036 5070     		strb	r0, [r2, #1]
 974:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1167              		.loc 1 974 0
 1168 0038 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 975:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 1169              		.loc 1 975 0
 1170 003a C4F30034 		ubfx	r4, r4, #12, #1
 974:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1171              		.loc 1 974 0
 1172 003e 9971     		strb	r1, [r3, #6]
 975:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 1173              		.loc 1 975 0
 1174 0040 9470     		strb	r4, [r2, #2]
 974:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1175              		.loc 1 974 0
 1176 0042 0232     		adds	r2, r2, #2
 988:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
 1177              		.loc 1 988 0
 1178 0044 A2F5CD72 		sub	r2, r2, #410
 1179 0048 1078     		ldrb	r0, [r2, #0]	@ zero_extendqisi2
 1180 004a 4007     		lsls	r0, r0, #29
 1181 004c 03D1     		bne	.L106
 1182              	.L97:
 991:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
 1183              		.loc 1 991 0
 1184 004e 0122     		movs	r2, #1
 1185 0050 83F82D20 		strb	r2, [r3, #45]
 1186 0054 0AE0     		b	.L99
 1187              	.L106:
 996:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
 1188              		.loc 1 996 0
 1189 0056 83F82D60 		strb	r6, [r3, #45]
 999:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 1190              		.loc 1 999 0
 1191 005a 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 1192 005c 01F00700 		and	r0, r1, #7
 1193 0060 83F82C00 		strb	r0, [r3, #44]
1002:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
 1194              		.loc 1 1002 0
 1195 0064 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 1196 0066 03F0F801 		and	r1, r3, #248
 1197 006a 1170     		strb	r1, [r2, #0]
 1198              	.L99:
1006:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_S
 1199              		.loc 1 1006 0
 1200 006c 1448     		ldr	r0, .L107
 1201 006e 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 1202 0070 03F0F801 		and	r1, r3, #248
 1203 0074 41F00302 		orr	r2, r1, #3
 1204 0078 0270     		strb	r2, [r0, #0]
1009:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 57


 1205              		.loc 1 1009 0
 1206 007a 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
1012:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1207              		.loc 1 1012 0
 1208              	@ 1012 ".\Generated_Source\PSoC5\cyPm.c" 1
 1209 007c 00BF     		NOP
 1210              	
 1211              	@ 0 "" 2
1013:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1212              		.loc 1 1013 0
 1213              	@ 1013 ".\Generated_Source\PSoC5\cyPm.c" 1
 1214 007e 00BF     		NOP
 1215              	
 1216              	@ 0 "" 2
1016:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
 1217              		.loc 1 1016 0
 1218              	@ 1016 ".\Generated_Source\PSoC5\cyPm.c" 1
 1219 0080 30BF     		WFI 
 1220              	
 1221              	@ 0 "" 2
1021:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
 1222              		.loc 1 1021 0
 1223              		.thumb
 1224 0082 1249     		ldr	r1, .L107+12
 1225 0084 91F82D00 		ldrb	r0, [r1, #45]	@ zero_extendqisi2
 1226 0088 0128     		cmp	r0, #1
 1227 008a 08D0     		beq	.L100
1023:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
 1228              		.loc 1 1023 0
 1229 008c 104B     		ldr	r3, .L107+16
 1230 008e 91F82C10 		ldrb	r1, [r1, #44]	@ zero_extendqisi2
 1231 0092 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1232 0094 22F00700 		bic	r0, r2, #7
 1233 0098 40EA0102 		orr	r2, r0, r1
 1234 009c 1A70     		strb	r2, [r3, #0]
 1235              	.L100:
1038:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpRestore();
 1236              		.loc 1 1038 0
 1237 009e FFF7FEFF 		bl	CyPmHibSlpRestore
 1238              	.LVL44:
1060:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 1239              		.loc 1 1060 0
 1240 00a2 0A4B     		ldr	r3, .L107+12
 1241 00a4 084A     		ldr	r2, .L107+8
 1242 00a6 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 1243 00a8 1070     		strb	r0, [r2, #0]
1061:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 1244              		.loc 1 1061 0
 1245 00aa 5979     		ldrb	r1, [r3, #5]	@ zero_extendqisi2
 1246 00ac 5170     		strb	r1, [r2, #1]
1062:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 1247              		.loc 1 1062 0
 1248 00ae 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 1249 00b0 084B     		ldr	r3, .L107+20
 1250 00b2 1870     		strb	r0, [r3, #0]
1065:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1251              		.loc 1 1065 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 58


 1252 00b4 2846     		mov	r0, r5
 1253              	.LVL45:
 1254              	.L105:
1066:.\Generated_Source\PSoC5/cyPm.c **** }
 1255              		.loc 1 1066 0
 1256 00b6 BDE87040 		pop	{r4, r5, r6, lr}
1065:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1257              		.loc 1 1065 0
 1258 00ba FFF7FEBF 		b	CyExitCriticalSection
 1259              	.LVL46:
 1260              	.L108:
 1261 00be 00BF     		.align	2
 1262              	.L107:
 1263 00c0 93430040 		.word	1073759123
 1264 00c4 83460040 		.word	1073759875
 1265 00c8 98430040 		.word	1073759128
 1266 00cc 00000000 		.word	.LANCHOR0
 1267 00d0 00420040 		.word	1073758720
 1268 00d4 9A430040 		.word	1073759130
 1269              		.cfi_endproc
 1270              	.LFE3:
 1271              		.size	CyPmSleep, .-CyPmSleep
 1272              		.section	.text.CyPmHibernate,"ax",%progbits
 1273              		.align	1
 1274              		.global	CyPmHibernate
 1275              		.thumb
 1276              		.thumb_func
 1277              		.type	CyPmHibernate, %function
 1278              	CyPmHibernate:
 1279              	.LFB4:
1113:.\Generated_Source\PSoC5/cyPm.c **** {
 1280              		.loc 1 1113 0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 0
 1283              		@ frame_needed = 0, uses_anonymous_args = 0
 1284 0000 38B5     		push	{r3, r4, r5, lr}
 1285              	.LCFI5:
 1286              		.cfi_def_cfa_offset 16
 1287              		.cfi_offset 3, -16
 1288              		.cfi_offset 4, -12
 1289              		.cfi_offset 5, -8
 1290              		.cfi_offset 14, -4
1117:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1291              		.loc 1 1117 0
 1292 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1293              	.LVL47:
1125:.\Generated_Source\PSoC5/cyPm.c ****         if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 1294              		.loc 1 1125 0
 1295 0006 7F4B     		ldr	r3, .L139
1117:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1296              		.loc 1 1117 0
 1297 0008 0546     		mov	r5, r0
 1298              	.LVL48:
1125:.\Generated_Source\PSoC5/cyPm.c ****         if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 1299              		.loc 1 1125 0
 1300 000a 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1301 000c 01F00802 		and	r2, r1, #8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 59


 1302 0010 D3B2     		uxtb	r3, r2
 1303 0012 002B     		cmp	r3, #0
 1304 0014 40F0F280 		bne	.L137
1128:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 1305              		.loc 1 1128 0
 1306 0018 7B48     		ldr	r0, .L139+4
 1307              	.LVL49:
 1308              	.LBB10:
 1309              	.LBB11:
1287:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_PWRSYS_CR1_REG & CY_PM_PWRSYS_CR1_I2CREG_BACKUP))
 1310              		.loc 1 1287 0
 1311 001a 7C4B     		ldr	r3, .L139+8
 1312              	.LBE11:
 1313              	.LBE10:
1128:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 1314              		.loc 1 1128 0
 1315 001c 0478     		ldrb	r4, [r0, #0]	@ zero_extendqisi2
 1316 001e 04F01F01 		and	r1, r4, #31
 1317 0022 0170     		strb	r1, [r0, #0]
 1318              	.LBB15:
 1319              	.LBB14:
1287:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_PWRSYS_CR1_REG & CY_PM_PWRSYS_CR1_I2CREG_BACKUP))
 1320              		.loc 1 1287 0
 1321 0024 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1322 0026 02F00400 		and	r0, r2, #4
 1323 002a C4B2     		uxtb	r4, r0
 1324 002c 1CB1     		cbz	r4, .L111
1301:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_CR1_REG &= ((uint8)(~CY_PM_PWRSYS_CR1_I2CREG_BACKUP));
 1325              		.loc 1 1301 0
 1326 002e 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1327 0030 01F0FB02 		and	r2, r1, #251
 1328 0034 1A70     		strb	r2, [r3, #0]
 1329              	.L111:
1306:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.iloPowerMode = CyILO_SetPowerMode(CY_PM_POWERDOWN_MODE);
 1330              		.loc 1 1306 0
 1331 0036 0120     		movs	r0, #1
 1332 0038 FFF7FEFF 		bl	CyILO_SetPowerMode
 1333              	.LVL50:
 1334 003c 744B     		ldr	r3, .L139+12
 1335 003e 1870     		strb	r0, [r3, #0]
1309:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
 1336              		.loc 1 1309 0
 1337 0040 7448     		ldr	r0, .L139+16
 1338 0042 0478     		ldrb	r4, [r0, #0]	@ zero_extendqisi2
1310:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_DISABLED : CY_PM_ENABLED;
 1339              		.loc 1 1310 0
 1340 0044 C4F34001 		ubfx	r1, r4, #1, #1
1309:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
 1341              		.loc 1 1309 0
 1342 0048 5970     		strb	r1, [r3, #1]
1313:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo100kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_100K)) ?
 1343              		.loc 1 1313 0
 1344 004a 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
1318:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_PWRSYS_SLP_TR_REG & CY_PM_PWRSYS_SLP_TR_BYPASS))
 1345              		.loc 1 1318 0
 1346 004c 6E4C     		ldr	r4, .L139+4
1314:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_DISABLED : CY_PM_ENABLED;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 60


 1347              		.loc 1 1314 0
 1348 004e C2F38000 		ubfx	r0, r2, #2, #1
1313:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo100kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_100K)) ?
 1349              		.loc 1 1313 0
 1350 0052 9870     		strb	r0, [r3, #2]
1318:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_PWRSYS_SLP_TR_REG & CY_PM_PWRSYS_SLP_TR_BYPASS))
 1351              		.loc 1 1318 0
 1352 0054 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 1353 0056 11F01002 		ands	r2, r1, #16
 1354 005a 05D1     		bne	.L112
1321:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.slpTrBypass = CY_PM_DISABLED;
 1355              		.loc 1 1321 0
 1356 005c DA70     		strb	r2, [r3, #3]
1322:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG |= CY_PM_PWRSYS_SLP_TR_BYPASS;
 1357              		.loc 1 1322 0
 1358 005e 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1359 0060 43F01001 		orr	r1, r3, #16
 1360 0064 2170     		strb	r1, [r4, #0]
 1361 0066 01E0     		b	.L113
 1362              	.L112:
1326:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.slpTrBypass = CY_PM_ENABLED;
 1363              		.loc 1 1326 0
 1364 0068 0120     		movs	r0, #1
 1365 006a D870     		strb	r0, [r3, #3]
 1366              	.L113:
 1367              	.LBB12:
 1368              	.LBB13:
1768:.\Generated_Source\PSoC5/cyPm.c ****     }
1769:.\Generated_Source\PSoC5/cyPm.c **** }
1770:.\Generated_Source\PSoC5/cyPm.c **** 
1771:.\Generated_Source\PSoC5/cyPm.c **** 
1772:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1773:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHviLviSaveDisable
1774:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1775:.\Generated_Source\PSoC5/cyPm.c **** *
1776:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1777:.\Generated_Source\PSoC5/cyPm.c **** *  Saves analog and digital LVI and HVI configuration and disables them.
1778:.\Generated_Source\PSoC5/cyPm.c **** *
1779:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1780:.\Generated_Source\PSoC5/cyPm.c **** *  None
1781:.\Generated_Source\PSoC5/cyPm.c **** *
1782:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1783:.\Generated_Source\PSoC5/cyPm.c **** *  None
1784:.\Generated_Source\PSoC5/cyPm.c **** *
1785:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1786:.\Generated_Source\PSoC5/cyPm.c **** *  No
1787:.\Generated_Source\PSoC5/cyPm.c **** *
1788:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1789:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHviLviSaveDisable(void) 
1790:.\Generated_Source\PSoC5/cyPm.c **** {
1791:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_LVID_EN))
 1369              		.loc 1 1791 0
 1370 006c 6A4C     		ldr	r4, .L139+20
 1371 006e 684B     		ldr	r3, .L139+12
 1372 0070 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1373 0072 12F00100 		ands	r0, r2, #1
 1374 0076 11D0     		beq	.L114
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 61


1792:.\Generated_Source\PSoC5/cyPm.c ****     {
1793:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidEn = CY_PM_ENABLED;
 1375              		.loc 1 1793 0
 1376 0078 0121     		movs	r1, #1
1794:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidTrip = CY_VD_LVI_TRIP_REG & CY_VD_LVI_TRIP_LVID_MASK;
 1377              		.loc 1 1794 0
 1378 007a 684C     		ldr	r4, .L139+24
1793:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidEn = CY_PM_ENABLED;
 1379              		.loc 1 1793 0
 1380 007c 83F82510 		strb	r1, [r3, #37]
 1381              		.loc 1 1794 0
 1382 0080 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
1795:.\Generated_Source\PSoC5/cyPm.c **** 
1796:.\Generated_Source\PSoC5/cyPm.c ****         /* Save state of reset device at specified Vddd threshold */
1797:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESD_EN)) ? \
 1383              		.loc 1 1797 0
 1384 0082 6749     		ldr	r1, .L139+28
1794:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidTrip = CY_VD_LVI_TRIP_REG & CY_VD_LVI_TRIP_LVID_MASK;
 1385              		.loc 1 1794 0
 1386 0084 02F00F00 		and	r0, r2, #15
 1387 0088 83F82600 		strb	r0, [r3, #38]
 1388              		.loc 1 1797 0
 1389 008c 0C78     		ldrb	r4, [r1, #0]	@ zero_extendqisi2
1798:.\Generated_Source\PSoC5/cyPm.c ****                              CY_PM_DISABLED : CY_PM_ENABLED;
 1390              		.loc 1 1798 0
 1391 008e C4F38012 		ubfx	r2, r4, #6, #1
1797:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESD_EN)) ? \
 1392              		.loc 1 1797 0
 1393 0092 83F82A20 		strb	r2, [r3, #42]
1799:.\Generated_Source\PSoC5/cyPm.c **** 
1800:.\Generated_Source\PSoC5/cyPm.c ****         CyVdLvDigitDisable();
 1394              		.loc 1 1800 0
 1395 0096 FFF7FEFF 		bl	CyVdLvDigitDisable
 1396              	.LVL51:
 1397 009a 01E0     		b	.L115
 1398              	.L114:
1801:.\Generated_Source\PSoC5/cyPm.c ****     }
1802:.\Generated_Source\PSoC5/cyPm.c ****     else
1803:.\Generated_Source\PSoC5/cyPm.c ****     {
1804:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidEn = CY_PM_DISABLED;
 1399              		.loc 1 1804 0
 1400 009c 83F82500 		strb	r0, [r3, #37]
 1401              	.L115:
1805:.\Generated_Source\PSoC5/cyPm.c ****     }
1806:.\Generated_Source\PSoC5/cyPm.c **** 
1807:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_LVIA_EN))
 1402              		.loc 1 1807 0
 1403 00a0 5D4B     		ldr	r3, .L139+20
 1404 00a2 5B4C     		ldr	r4, .L139+12
 1405 00a4 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1406 00a6 10F00201 		ands	r1, r0, #2
 1407 00aa 0FD0     		beq	.L116
1808:.\Generated_Source\PSoC5/cyPm.c ****     {
1809:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaEn = CY_PM_ENABLED;
 1408              		.loc 1 1809 0
 1409 00ac 0122     		movs	r2, #1
1810:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaTrip = CY_VD_LVI_TRIP_REG >> 4u;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 62


 1410              		.loc 1 1810 0
 1411 00ae 5B4B     		ldr	r3, .L139+24
1809:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaEn = CY_PM_ENABLED;
 1412              		.loc 1 1809 0
 1413 00b0 84F82720 		strb	r2, [r4, #39]
 1414              		.loc 1 1810 0
 1415 00b4 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
1811:.\Generated_Source\PSoC5/cyPm.c **** 
1812:.\Generated_Source\PSoC5/cyPm.c ****         /* Save state of reset device at specified Vdda threshold */
1813:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESA_EN)) ? \
 1416              		.loc 1 1813 0
 1417 00b6 5A4A     		ldr	r2, .L139+28
1810:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaTrip = CY_VD_LVI_TRIP_REG >> 4u;
 1418              		.loc 1 1810 0
 1419 00b8 0109     		lsrs	r1, r0, #4
 1420 00ba 84F82810 		strb	r1, [r4, #40]
 1421              		.loc 1 1813 0
 1422 00be 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
1814:.\Generated_Source\PSoC5/cyPm.c ****                              CY_PM_DISABLED : CY_PM_ENABLED;
 1423              		.loc 1 1814 0
 1424 00c0 D809     		lsrs	r0, r3, #7
1813:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESA_EN)) ? \
 1425              		.loc 1 1813 0
 1426 00c2 84F82B00 		strb	r0, [r4, #43]
1815:.\Generated_Source\PSoC5/cyPm.c **** 
1816:.\Generated_Source\PSoC5/cyPm.c ****         CyVdLvAnalogDisable();
 1427              		.loc 1 1816 0
 1428 00c6 FFF7FEFF 		bl	CyVdLvAnalogDisable
 1429              	.LVL52:
 1430 00ca 01E0     		b	.L117
 1431              	.L116:
1817:.\Generated_Source\PSoC5/cyPm.c ****     }
1818:.\Generated_Source\PSoC5/cyPm.c ****     else
1819:.\Generated_Source\PSoC5/cyPm.c ****     {
1820:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaEn = CY_PM_DISABLED;
 1432              		.loc 1 1820 0
 1433 00cc 84F82710 		strb	r1, [r4, #39]
 1434              	.L117:
1821:.\Generated_Source\PSoC5/cyPm.c ****     }
1822:.\Generated_Source\PSoC5/cyPm.c **** 
1823:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_HVIA_EN))
 1435              		.loc 1 1823 0
 1436 00d0 514C     		ldr	r4, .L139+20
 1437 00d2 4F4B     		ldr	r3, .L139+12
 1438 00d4 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 1439 00d6 11F00402 		ands	r2, r1, #4
 1440 00da 05D0     		beq	.L118
1824:.\Generated_Source\PSoC5/cyPm.c ****     {
1825:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.hviaEn = CY_PM_ENABLED;
 1441              		.loc 1 1825 0
 1442 00dc 0120     		movs	r0, #1
 1443 00de 83F82900 		strb	r0, [r3, #41]
1826:.\Generated_Source\PSoC5/cyPm.c ****         CyVdHvAnalogDisable();
 1444              		.loc 1 1826 0
 1445 00e2 FFF7FEFF 		bl	CyVdHvAnalogDisable
 1446              	.LVL53:
 1447 00e6 01E0     		b	.L119
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 63


 1448              	.L118:
1827:.\Generated_Source\PSoC5/cyPm.c ****     }
1828:.\Generated_Source\PSoC5/cyPm.c ****     else
1829:.\Generated_Source\PSoC5/cyPm.c ****     {
1830:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.hviaEn = CY_PM_DISABLED;
 1449              		.loc 1 1830 0
 1450 00e8 83F82920 		strb	r2, [r3, #41]
 1451              	.L119:
 1452              	.LBE13:
 1453              	.LBE12:
1347:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim0 = CY_PM_PWRSYS_WAKE_TR0_REG;
 1454              		.loc 1 1347 0
 1455 00ec 4D4C     		ldr	r4, .L139+32
1341:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpSaveSet();
 1456              		.loc 1 1341 0
 1457 00ee FFF7FEFF 		bl	CyPmHibSlpSaveSet
 1458              	.LVL54:
1347:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim0 = CY_PM_PWRSYS_WAKE_TR0_REG;
 1459              		.loc 1 1347 0
 1460 00f2 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 1461 00f4 464B     		ldr	r3, .L139+12
1348:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim1 = CY_PM_PWRSYS_WAKE_TR1_REG;
 1462              		.loc 1 1348 0
 1463 00f6 4C4A     		ldr	r2, .L139+36
1347:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim0 = CY_PM_PWRSYS_WAKE_TR0_REG;
 1464              		.loc 1 1347 0
 1465 00f8 D971     		strb	r1, [r3, #7]
1348:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim1 = CY_PM_PWRSYS_WAKE_TR1_REG;
 1466              		.loc 1 1348 0
 1467 00fa 1078     		ldrb	r0, [r2, #0]	@ zero_extendqisi2
1350:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = CY_PM_PWRSYS_WAKE_TR0;
 1468              		.loc 1 1350 0
 1469 00fc FF21     		movs	r1, #255
1348:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim1 = CY_PM_PWRSYS_WAKE_TR1_REG;
 1470              		.loc 1 1348 0
 1471 00fe 1872     		strb	r0, [r3, #8]
1350:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = CY_PM_PWRSYS_WAKE_TR0;
 1472              		.loc 1 1350 0
 1473 0100 2170     		strb	r1, [r4, #0]
1351:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR1_REG = CY_PM_PWRSYS_WAKE_TR1;
 1474              		.loc 1 1351 0
 1475 0102 B024     		movs	r4, #176
 1476 0104 1470     		strb	r4, [r2, #0]
 1477              	.LBE14:
 1478              	.LBE15:
1144:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1479              		.loc 1 1144 0
 1480 0106 494A     		ldr	r2, .L139+40
1145:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = CY_PM_WAKEUP_PICU;
 1481              		.loc 1 1145 0
 1482 0108 0421     		movs	r1, #4
1144:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1483              		.loc 1 1144 0
 1484 010a 1078     		ldrb	r0, [r2, #0]	@ zero_extendqisi2
 1485 010c 1871     		strb	r0, [r3, #4]
1145:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = CY_PM_WAKEUP_PICU;
 1486              		.loc 1 1145 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 64


 1487 010e 1170     		strb	r1, [r2, #0]
1147:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1488              		.loc 1 1147 0
 1489 0110 5478     		ldrb	r4, [r2, #1]	@ zero_extendqisi2
1148:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = 0x00u;
 1490              		.loc 1 1148 0
 1491 0112 0021     		movs	r1, #0
1147:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1492              		.loc 1 1147 0
 1493 0114 5C71     		strb	r4, [r3, #5]
1148:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = 0x00u;
 1494              		.loc 1 1148 0
 1495 0116 5170     		strb	r1, [r2, #1]
1150:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1496              		.loc 1 1150 0
 1497 0118 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 1498 011a 9871     		strb	r0, [r3, #6]
1151:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = 0x00u;
 1499              		.loc 1 1151 0
 1500 011c 9170     		strb	r1, [r2, #2]
1150:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1501              		.loc 1 1150 0
 1502 011e 0232     		adds	r2, r2, #2
1155:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
 1503              		.loc 1 1155 0
 1504 0120 A2F5CD72 		sub	r2, r2, #410
 1505 0124 1478     		ldrb	r4, [r2, #0]	@ zero_extendqisi2
 1506 0126 6407     		lsls	r4, r4, #29
 1507 0128 03D1     		bne	.L138
 1508              	.L120:
1158:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
 1509              		.loc 1 1158 0
 1510 012a 0122     		movs	r2, #1
 1511 012c 83F82D20 		strb	r2, [r3, #45]
 1512 0130 0AE0     		b	.L122
 1513              	.L138:
1163:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
 1514              		.loc 1 1163 0
 1515 0132 83F82D10 		strb	r1, [r3, #45]
1166:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 1516              		.loc 1 1166 0
 1517 0136 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 1518 0138 01F00700 		and	r0, r1, #7
 1519 013c 83F82C00 		strb	r0, [r3, #44]
1169:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
 1520              		.loc 1 1169 0
 1521 0140 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 1522 0142 03F0F804 		and	r4, r3, #248
 1523 0146 1470     		strb	r4, [r2, #0]
 1524              	.L122:
1174:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = (CY_PM_MODE_CSR_REG & ((uint8) (~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_H
 1525              		.loc 1 1174 0
 1526 0148 2E49     		ldr	r1, .L139
 1527 014a 0878     		ldrb	r0, [r1, #0]	@ zero_extendqisi2
 1528 014c 00F0F803 		and	r3, r0, #248
 1529 0150 43F00404 		orr	r4, r3, #4
 1530 0154 0C70     		strb	r4, [r1, #0]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 65


1177:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
 1531              		.loc 1 1177 0
 1532 0156 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
1180:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1533              		.loc 1 1180 0
 1534              	@ 1180 ".\Generated_Source\PSoC5\cyPm.c" 1
 1535 0158 00BF     		NOP
 1536              	
 1537              	@ 0 "" 2
1181:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1538              		.loc 1 1181 0
 1539              	@ 1181 ".\Generated_Source\PSoC5\cyPm.c" 1
 1540 015a 00BF     		NOP
 1541              	
 1542              	@ 0 "" 2
1184:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
 1543              		.loc 1 1184 0
 1544              	@ 1184 ".\Generated_Source\PSoC5\cyPm.c" 1
 1545 015c 30BF     		WFI 
 1546              	
 1547              	@ 0 "" 2
1191:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
 1548              		.loc 1 1191 0
 1549              		.thumb
 1550 015e 2C4A     		ldr	r2, .L139+12
 1551 0160 92F82D10 		ldrb	r1, [r2, #45]	@ zero_extendqisi2
 1552 0164 0129     		cmp	r1, #1
 1553 0166 07D0     		beq	.L123
1193:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
 1554              		.loc 1 1193 0
 1555 0168 314B     		ldr	r3, .L139+44
 1556 016a 92F82C10 		ldrb	r1, [r2, #44]	@ zero_extendqisi2
 1557 016e 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1558 0170 20F00704 		bic	r4, r0, #7
 1559 0174 0C43     		orrs	r4, r4, r1
 1560 0176 1C70     		strb	r4, [r3, #0]
 1561              	.L123:
 1562              	.LBB16:
 1563              	.LBB17:
 1564              	.LBB18:
 1565              	.LBB19:
1831:.\Generated_Source\PSoC5/cyPm.c ****     }
1832:.\Generated_Source\PSoC5/cyPm.c **** }
1833:.\Generated_Source\PSoC5/cyPm.c **** 
1834:.\Generated_Source\PSoC5/cyPm.c **** 
1835:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1836:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHviLviRestore
1837:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1838:.\Generated_Source\PSoC5/cyPm.c **** *
1839:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1840:.\Generated_Source\PSoC5/cyPm.c **** *  Restores the analog and digital LVI and HVI configuration.
1841:.\Generated_Source\PSoC5/cyPm.c **** *
1842:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1843:.\Generated_Source\PSoC5/cyPm.c **** *  None
1844:.\Generated_Source\PSoC5/cyPm.c **** *
1845:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1846:.\Generated_Source\PSoC5/cyPm.c **** *  None
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 66


1847:.\Generated_Source\PSoC5/cyPm.c **** *
1848:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1849:.\Generated_Source\PSoC5/cyPm.c **** *  No
1850:.\Generated_Source\PSoC5/cyPm.c **** *
1851:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1852:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHviLviRestore(void) 
1853:.\Generated_Source\PSoC5/cyPm.c **** {
1854:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore LVI/HVI configuration */
1855:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.lvidEn)
 1566              		.loc 1 1855 0
 1567 0178 92F82520 		ldrb	r2, [r2, #37]	@ zero_extendqisi2
 1568 017c 244B     		ldr	r3, .L139+12
 1569 017e 012A     		cmp	r2, #1
 1570 0180 05D1     		bne	.L124
1856:.\Generated_Source\PSoC5/cyPm.c ****     {
1857:.\Generated_Source\PSoC5/cyPm.c ****         CyVdLvDigitEnable(cyPmBackup.lvidRst, cyPmBackup.lvidTrip);
 1571              		.loc 1 1857 0
 1572 0182 93F82A00 		ldrb	r0, [r3, #42]	@ zero_extendqisi2
 1573 0186 93F82610 		ldrb	r1, [r3, #38]	@ zero_extendqisi2
 1574 018a FFF7FEFF 		bl	CyVdLvDigitEnable
 1575              	.LVL55:
 1576              	.L124:
1858:.\Generated_Source\PSoC5/cyPm.c ****     }
1859:.\Generated_Source\PSoC5/cyPm.c **** 
1860:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.lviaEn)
 1577              		.loc 1 1860 0
 1578 018e 204C     		ldr	r4, .L139+12
 1579 0190 94F82700 		ldrb	r0, [r4, #39]	@ zero_extendqisi2
 1580 0194 0128     		cmp	r0, #1
 1581 0196 05D1     		bne	.L125
1861:.\Generated_Source\PSoC5/cyPm.c ****     {
1862:.\Generated_Source\PSoC5/cyPm.c ****         CyVdLvAnalogEnable(cyPmBackup.lviaRst, cyPmBackup.lviaTrip);
 1582              		.loc 1 1862 0
 1583 0198 94F82B00 		ldrb	r0, [r4, #43]	@ zero_extendqisi2
 1584 019c 94F82810 		ldrb	r1, [r4, #40]	@ zero_extendqisi2
 1585 01a0 FFF7FEFF 		bl	CyVdLvAnalogEnable
 1586              	.LVL56:
 1587              	.L125:
1863:.\Generated_Source\PSoC5/cyPm.c ****     }
1864:.\Generated_Source\PSoC5/cyPm.c **** 
1865:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.hviaEn)
 1588              		.loc 1 1865 0
 1589 01a4 94F82910 		ldrb	r1, [r4, #41]	@ zero_extendqisi2
 1590 01a8 0129     		cmp	r1, #1
 1591 01aa 01D1     		bne	.L126
1866:.\Generated_Source\PSoC5/cyPm.c ****     {
1867:.\Generated_Source\PSoC5/cyPm.c ****         CyVdHvAnalogEnable();
 1592              		.loc 1 1867 0
 1593 01ac FFF7FEFF 		bl	CyVdHvAnalogEnable
 1594              	.LVL57:
 1595              	.L126:
 1596              	.LBE19:
 1597              	.LBE18:
1383:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo1kEnable)
 1598              		.loc 1 1383 0
 1599 01b0 174C     		ldr	r4, .L139+12
1380:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpRestore();
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 67


 1600              		.loc 1 1380 0
 1601 01b2 FFF7FEFF 		bl	CyPmHibSlpRestore
 1602              	.LVL58:
1383:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo1kEnable)
 1603              		.loc 1 1383 0
 1604 01b6 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1605 01b8 012B     		cmp	r3, #1
 1606 01ba 01D1     		bne	.L127
1386:.\Generated_Source\PSoC5/cyPm.c ****         CyILO_Start1K();
 1607              		.loc 1 1386 0
 1608 01bc FFF7FEFF 		bl	CyILO_Start1K
 1609              	.LVL59:
 1610              	.L127:
1390:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo100kEnable)
 1611              		.loc 1 1390 0
 1612 01c0 A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 1613 01c2 012A     		cmp	r2, #1
 1614 01c4 01D1     		bne	.L128
1393:.\Generated_Source\PSoC5/cyPm.c ****         CyILO_Start100K();
 1615              		.loc 1 1393 0
 1616 01c6 FFF7FEFF 		bl	CyILO_Start100K
 1617              	.LVL60:
 1618              	.L128:
1397:.\Generated_Source\PSoC5/cyPm.c ****     (void) CyILO_SetPowerMode(cyPmBackup.iloPowerMode);
 1619              		.loc 1 1397 0
 1620 01ca 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 1621 01cc FFF7FEFF 		bl	CyILO_SetPowerMode
 1622              	.LVL61:
1400:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_DISABLED == cyPmBackup.slpTrBypass)
 1623              		.loc 1 1400 0
 1624 01d0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1625 01d2 20B9     		cbnz	r0, .L129
1403:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= ((uint8)(~CY_PM_PWRSYS_SLP_TR_BYPASS));
 1626              		.loc 1 1403 0
 1627 01d4 0C49     		ldr	r1, .L139+4
 1628 01d6 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 1629 01d8 03F0EF02 		and	r2, r3, #239
 1630 01dc 0A70     		strb	r2, [r1, #0]
 1631              	.L129:
1410:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = cyPmBackup.wakeupTrim0;
 1632              		.loc 1 1410 0
 1633 01de 0C48     		ldr	r0, .L139+12
 1634 01e0 104B     		ldr	r3, .L139+32
 1635 01e2 C179     		ldrb	r1, [r0, #7]	@ zero_extendqisi2
 1636 01e4 1970     		strb	r1, [r3, #0]
1411:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR1_REG = cyPmBackup.wakeupTrim1;
 1637              		.loc 1 1411 0
 1638 01e6 027A     		ldrb	r2, [r0, #8]	@ zero_extendqisi2
 1639 01e8 5A70     		strb	r2, [r3, #1]
 1640              	.LBE17:
 1641              	.LBE16:
1202:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 1642              		.loc 1 1202 0
 1643 01ea 0179     		ldrb	r1, [r0, #4]	@ zero_extendqisi2
 1644 01ec 0F4B     		ldr	r3, .L139+40
 1645 01ee 1970     		strb	r1, [r3, #0]
1203:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 68


 1646              		.loc 1 1203 0
 1647 01f0 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
1204:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 1648              		.loc 1 1204 0
 1649 01f2 1049     		ldr	r1, .L139+48
1203:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 1650              		.loc 1 1203 0
 1651 01f4 5A70     		strb	r2, [r3, #1]
1204:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 1652              		.loc 1 1204 0
 1653 01f6 8079     		ldrb	r0, [r0, #6]	@ zero_extendqisi2
 1654 01f8 0870     		strb	r0, [r1, #0]
1207:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1655              		.loc 1 1207 0
 1656 01fa 2846     		mov	r0, r5
 1657              	.LVL62:
 1658              	.L137:
1208:.\Generated_Source\PSoC5/cyPm.c **** }
 1659              		.loc 1 1208 0
 1660 01fc BDE83840 		pop	{r3, r4, r5, lr}
1207:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1661              		.loc 1 1207 0
 1662 0200 FFF7FEBF 		b	CyExitCriticalSection
 1663              	.LVL63:
 1664              	.L140:
 1665              		.align	2
 1666              	.L139:
 1667 0204 93430040 		.word	1073759123
 1668 0208 83460040 		.word	1073759875
 1669 020c 31430040 		.word	1073759025
 1670 0210 00000000 		.word	.LANCHOR0
 1671 0214 00430040 		.word	1073758976
 1672 0218 F5460040 		.word	1073759989
 1673 021c F4460040 		.word	1073759988
 1674 0220 F7460040 		.word	1073759991
 1675 0224 85460040 		.word	1073759877
 1676 0228 86460040 		.word	1073759878
 1677 022c 98430040 		.word	1073759128
 1678 0230 00420040 		.word	1073758720
 1679 0234 9A430040 		.word	1073759130
 1680              		.cfi_endproc
 1681              	.LFE4:
 1682              		.size	CyPmHibernate, .-CyPmHibernate
 1683              		.section	.text.CyPmReadStatus,"ax",%progbits
 1684              		.align	1
 1685              		.global	CyPmReadStatus
 1686              		.thumb
 1687              		.thumb_func
 1688              		.type	CyPmReadStatus, %function
 1689              	CyPmReadStatus:
 1690              	.LFB5:
1241:.\Generated_Source\PSoC5/cyPm.c **** {
 1691              		.loc 1 1241 0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695              	.LVL64:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 69


 1696 0000 38B5     		push	{r3, r4, r5, lr}
 1697              	.LCFI6:
 1698              		.cfi_def_cfa_offset 16
 1699              		.cfi_offset 3, -16
 1700              		.cfi_offset 4, -12
 1701              		.cfi_offset 5, -8
 1702              		.cfi_offset 14, -4
1241:.\Generated_Source\PSoC5/cyPm.c **** {
 1703              		.loc 1 1241 0
 1704 0002 0546     		mov	r5, r0
1247:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1705              		.loc 1 1247 0
 1706 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1707              	.LVL65:
1250:.\Generated_Source\PSoC5/cyPm.c ****     interruptStatus |= CY_PM_INT_SR_REG;
 1708              		.loc 1 1250 0
 1709 0008 0649     		ldr	r1, .L142
 1710 000a 074B     		ldr	r3, .L142+4
 1711 000c 91F84220 		ldrb	r2, [r1, #66]	@ zero_extendqisi2
 1712 0010 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 1713 0012 1443     		orrs	r4, r4, r2
 1714              	.LVL66:
1252:.\Generated_Source\PSoC5/cyPm.c ****     interruptStatus &= ((uint8)(~mask));
 1715              		.loc 1 1252 0
 1716 0014 24EA0505 		bic	r5, r4, r5
 1717 0018 81F84250 		strb	r5, [r1, #66]
1255:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1718              		.loc 1 1255 0
 1719 001c FFF7FEFF 		bl	CyExitCriticalSection
 1720              	.LVL67:
1258:.\Generated_Source\PSoC5/cyPm.c **** }
 1721              		.loc 1 1258 0
 1722 0020 2046     		mov	r0, r4
 1723 0022 38BD     		pop	{r3, r4, r5, pc}
 1724              	.L143:
 1725              		.align	2
 1726              	.L142:
 1727 0024 00000000 		.word	.LANCHOR0
 1728 0028 90430040 		.word	1073759120
 1729              		.cfi_endproc
 1730              	.LFE5:
 1731              		.size	CyPmReadStatus, .-CyPmReadStatus
 1732              		.section	.text.CyPmCtwSetInterval,"ax",%progbits
 1733              		.align	1
 1734              		.global	CyPmCtwSetInterval
 1735              		.thumb
 1736              		.thumb_func
 1737              		.type	CyPmCtwSetInterval, %function
 1738              	CyPmCtwSetInterval:
 1739              	.LFB8:
1436:.\Generated_Source\PSoC5/cyPm.c **** {
 1740              		.loc 1 1436 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744              	.LVL68:
 1745 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 70


 1746              	.LCFI7:
 1747              		.cfi_def_cfa_offset 16
 1748              		.cfi_offset 3, -16
 1749              		.cfi_offset 4, -12
 1750              		.cfi_offset 5, -8
 1751              		.cfi_offset 14, -4
1438:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_IE));
 1752              		.loc 1 1438 0
 1753 0002 124C     		ldr	r4, .L148
1436:.\Generated_Source\PSoC5/cyPm.c **** {
 1754              		.loc 1 1436 0
 1755 0004 0546     		mov	r5, r0
1438:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_IE));
 1756              		.loc 1 1438 0
 1757 0006 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1758 0008 03F0F700 		and	r0, r3, #247
 1759              	.LVL69:
 1760 000c 2070     		strb	r0, [r4, #0]
1441:.\Generated_Source\PSoC5/cyPm.c ****     CyILO_Start1K();
 1761              		.loc 1 1441 0
 1762 000e FFF7FEFF 		bl	CyILO_Start1K
 1763              	.LVL70:
1444:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_TW_CFG2_REG & CY_PM_CTW_EN))
 1764              		.loc 1 1444 0
 1765 0012 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 1766 0014 0E4B     		ldr	r3, .L148+4
 1767 0016 01F00402 		and	r2, r1, #4
 1768 001a D0B2     		uxtb	r0, r2
 1769 001c 60B1     		cbz	r0, .L145
1447:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG1_REG != ctwInterval)
 1770              		.loc 1 1447 0
 1771 001e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1772 0020 AA42     		cmp	r2, r5
 1773 0022 11D0     		beq	.L144
1450:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_EN));
 1774              		.loc 1 1450 0
 1775 0024 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 1776 0026 01F0FB00 		and	r0, r1, #251
 1777 002a 2070     		strb	r0, [r4, #0]
1451:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG1_REG = ctwInterval;
 1778              		.loc 1 1451 0
 1779 002c 1D70     		strb	r5, [r3, #0]
1452:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
 1780              		.loc 1 1452 0
 1781 002e 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1782 0030 43F00402 		orr	r2, r3, #4
 1783 0034 2270     		strb	r2, [r4, #0]
 1784 0036 38BD     		pop	{r3, r4, r5, pc}
 1785              	.L145:
1458:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG1_REG != ctwInterval)
 1786              		.loc 1 1458 0
 1787 0038 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1788 003a A942     		cmp	r1, r5
1461:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG1_REG = ctwInterval;
 1789              		.loc 1 1461 0
 1790 003c 18BF     		it	ne
 1791 003e 1D70     		strbne	r5, [r3, #0]
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 71


1465:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
 1792              		.loc 1 1465 0
 1793 0040 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 1794 0042 40F00403 		orr	r3, r0, #4
 1795 0046 2370     		strb	r3, [r4, #0]
 1796              	.L144:
 1797 0048 38BD     		pop	{r3, r4, r5, pc}
 1798              	.L149:
 1799 004a 00BF     		.align	2
 1800              	.L148:
 1801 004c 82430040 		.word	1073759106
 1802 0050 81430040 		.word	1073759105
 1803              		.cfi_endproc
 1804              	.LFE8:
 1805              		.size	CyPmCtwSetInterval, .-CyPmCtwSetInterval
 1806              		.section	.text.CyPmOppsSet,"ax",%progbits
 1807              		.align	1
 1808              		.global	CyPmOppsSet
 1809              		.thumb
 1810              		.thumb_func
 1811              		.type	CyPmOppsSet, %function
 1812              	CyPmOppsSet:
 1813              	.LFB9:
1488:.\Generated_Source\PSoC5/cyPm.c **** {
 1814              		.loc 1 1488 0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 0
 1817              		@ frame_needed = 0, uses_anonymous_args = 0
 1818 0000 08B5     		push	{r3, lr}
 1819              	.LCFI8:
 1820              		.cfi_def_cfa_offset 8
 1821              		.cfi_offset 3, -8
 1822              		.cfi_offset 14, -4
1490:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_SLOWCLK_X32_CR_REG & CY_PM_X32_CR_X32EN))
 1823              		.loc 1 1490 0
 1824 0002 084B     		ldr	r3, .L152
 1825 0004 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1826 0006 C307     		lsls	r3, r0, #31
 1827 0008 01D4     		bmi	.L151
1493:.\Generated_Source\PSoC5/cyPm.c ****         CyXTAL_32KHZ_Start();
 1828              		.loc 1 1493 0
 1829 000a FFF7FEFF 		bl	CyXTAL_32KHZ_Start
 1830              	.LVL71:
 1831              	.L151:
1497:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_1PPS_IE));
 1832              		.loc 1 1497 0
 1833 000e 0649     		ldr	r1, .L152+4
 1834 0010 0A78     		ldrb	r2, [r1, #0]	@ zero_extendqisi2
 1835 0012 02F0DF03 		and	r3, r2, #223
 1836 0016 0B70     		strb	r3, [r1, #0]
1500:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG |= CY_PM_1PPS_EN;
 1837              		.loc 1 1500 0
 1838 0018 0878     		ldrb	r0, [r1, #0]	@ zero_extendqisi2
 1839 001a 40F01002 		orr	r2, r0, #16
 1840 001e 0A70     		strb	r2, [r1, #0]
 1841 0020 08BD     		pop	{r3, pc}
 1842              	.L153:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 72


 1843 0022 00BF     		.align	2
 1844              	.L152:
 1845 0024 08430040 		.word	1073758984
 1846 0028 82430040 		.word	1073759106
 1847              		.cfi_endproc
 1848              	.LFE9:
 1849              		.size	CyPmOppsSet, .-CyPmOppsSet
 1850              		.section	.text.CyPmFtwSetInterval,"ax",%progbits
 1851              		.align	1
 1852              		.global	CyPmFtwSetInterval
 1853              		.thumb
 1854              		.thumb_func
 1855              		.type	CyPmFtwSetInterval, %function
 1856              	CyPmFtwSetInterval:
 1857              	.LFB10:
1525:.\Generated_Source\PSoC5/cyPm.c **** {
 1858              		.loc 1 1525 0
 1859              		.cfi_startproc
 1860              		@ args = 0, pretend = 0, frame = 0
 1861              		@ frame_needed = 0, uses_anonymous_args = 0
 1862              	.LVL72:
 1863 0000 38B5     		push	{r3, r4, r5, lr}
 1864              	.LCFI9:
 1865              		.cfi_def_cfa_offset 16
 1866              		.cfi_offset 3, -16
 1867              		.cfi_offset 4, -12
 1868              		.cfi_offset 5, -8
 1869              		.cfi_offset 14, -4
1527:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_IE));
 1870              		.loc 1 1527 0
 1871 0002 114C     		ldr	r4, .L158
1525:.\Generated_Source\PSoC5/cyPm.c **** {
 1872              		.loc 1 1525 0
 1873 0004 0546     		mov	r5, r0
1527:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_IE));
 1874              		.loc 1 1527 0
 1875 0006 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1876 0008 03F0FD00 		and	r0, r3, #253
 1877              	.LVL73:
 1878 000c 2070     		strb	r0, [r4, #0]
1530:.\Generated_Source\PSoC5/cyPm.c ****     CyILO_Start100K();
 1879              		.loc 1 1530 0
 1880 000e FFF7FEFF 		bl	CyILO_Start100K
 1881              	.LVL74:
1533:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_TW_CFG2_REG & CY_PM_FTW_EN))
 1882              		.loc 1 1533 0
 1883 0012 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 1884 0014 0D4B     		ldr	r3, .L158+4
 1885 0016 11F0010F 		tst	r1, #1
 1886 001a 0CD0     		beq	.L155
1536:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG0_REG != ftwInterval)
 1887              		.loc 1 1536 0
 1888 001c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1889 001e AA42     		cmp	r2, r5
 1890 0020 11D0     		beq	.L154
1539:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_EN));
 1891              		.loc 1 1539 0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 73


 1892 0022 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 1893 0024 00F0FE01 		and	r1, r0, #254
 1894 0028 2170     		strb	r1, [r4, #0]
1540:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG0_REG = ftwInterval;
 1895              		.loc 1 1540 0
 1896 002a 1D70     		strb	r5, [r3, #0]
1541:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
 1897              		.loc 1 1541 0
 1898 002c 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1899 002e 43F00102 		orr	r2, r3, #1
 1900 0032 2270     		strb	r2, [r4, #0]
 1901 0034 38BD     		pop	{r3, r4, r5, pc}
 1902              	.L155:
1547:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG0_REG != ftwInterval)
 1903              		.loc 1 1547 0
 1904 0036 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1905 0038 A842     		cmp	r0, r5
1550:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG0_REG = ftwInterval;
 1906              		.loc 1 1550 0
 1907 003a 18BF     		it	ne
 1908 003c 1D70     		strbne	r5, [r3, #0]
1554:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
 1909              		.loc 1 1554 0
 1910 003e 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 1911 0040 41F00103 		orr	r3, r1, #1
 1912 0044 2370     		strb	r3, [r4, #0]
 1913              	.L154:
 1914 0046 38BD     		pop	{r3, r4, r5, pc}
 1915              	.L159:
 1916              		.align	2
 1917              	.L158:
 1918 0048 82430040 		.word	1073759106
 1919 004c 80430040 		.word	1073759104
 1920              		.cfi_endproc
 1921              	.LFE10:
 1922              		.size	CyPmFtwSetInterval, .-CyPmFtwSetInterval
 1923              		.section	.rodata
 1924              		.set	.LANCHOR1,. + 0
 1925              		.type	cyPmImoFreqReg2Mhz, %object
 1926              		.size	cyPmImoFreqReg2Mhz, 7
 1927              	cyPmImoFreqReg2Mhz:
 1928 0000 0C       		.byte	12
 1929 0001 06       		.byte	6
 1930 0002 18       		.byte	24
 1931 0003 03       		.byte	3
 1932 0004 30       		.byte	48
 1933 0005 3E       		.byte	62
 1934 0006 4A       		.byte	74
 1935              	.LC0:
 1936 0007 02       		.byte	2
 1937 0008 01       		.byte	1
 1938 0009 03       		.byte	3
 1939 000a 00       		.byte	0
 1940 000b 04       		.byte	4
 1941 000c 05       		.byte	5
 1942 000d 06       		.byte	6
 1943              		.bss
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 74


 1944              		.align	1
 1945              		.set	.LANCHOR0,. + 0
 1946              		.type	cyPmBackup, %object
 1947              		.size	cyPmBackup, 47
 1948              	cyPmBackup:
 1949 0000 00000000 		.space	47
 1949      00000000 
 1949      00000000 
 1949      00000000 
 1949      00000000 
 1950 002f 00       		.space	1
 1951              		.type	cyPmClockBackup, %object
 1952              		.size	cyPmClockBackup, 18
 1953              	cyPmClockBackup:
 1954 0030 00000000 		.space	18
 1954      00000000 
 1954      00000000 
 1954      00000000 
 1954      0000
 1955              		.type	interruptStatus.4777, %object
 1956              		.size	interruptStatus.4777, 1
 1957              	interruptStatus.4777:
 1958 0042 00       		.space	1
 1959 0043 00       		.text
 1960              	.Letext0:
 1961              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1962              		.file 3 ".\\Generated_Source\\PSoC5\\cyPm.h"
 1963              		.file 4 ".\\Generated_Source\\PSoC5\\CyFlash.h"
 1964              		.file 5 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1965              		.section	.debug_info,"",%progbits
 1966              	.Ldebug_info0:
 1967 0000 580A0000 		.4byte	0xa58
 1968 0004 0200     		.2byte	0x2
 1969 0006 00000000 		.4byte	.Ldebug_abbrev0
 1970 000a 04       		.byte	0x4
 1971 000b 01       		.uleb128 0x1
 1972 000c 97040000 		.4byte	.LASF112
 1973 0010 01       		.byte	0x1
 1974 0011 AE010000 		.4byte	.LASF113
 1975 0015 38030000 		.4byte	.LASF114
 1976 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1977 001d 00000000 		.4byte	0
 1978 0021 00000000 		.4byte	0
 1979 0025 00000000 		.4byte	.Ldebug_line0
 1980 0029 02       		.uleb128 0x2
 1981 002a 01       		.byte	0x1
 1982 002b 06       		.byte	0x6
 1983 002c 33010000 		.4byte	.LASF0
 1984 0030 02       		.uleb128 0x2
 1985 0031 01       		.byte	0x1
 1986 0032 08       		.byte	0x8
 1987 0033 F1040000 		.4byte	.LASF1
 1988 0037 02       		.uleb128 0x2
 1989 0038 02       		.byte	0x2
 1990 0039 05       		.byte	0x5
 1991 003a 2A050000 		.4byte	.LASF2
 1992 003e 02       		.uleb128 0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 75


 1993 003f 02       		.byte	0x2
 1994 0040 07       		.byte	0x7
 1995 0041 C1020000 		.4byte	.LASF3
 1996 0045 02       		.uleb128 0x2
 1997 0046 04       		.byte	0x4
 1998 0047 05       		.byte	0x5
 1999 0048 6C010000 		.4byte	.LASF4
 2000 004c 02       		.uleb128 0x2
 2001 004d 04       		.byte	0x4
 2002 004e 07       		.byte	0x7
 2003 004f 32020000 		.4byte	.LASF5
 2004 0053 02       		.uleb128 0x2
 2005 0054 08       		.byte	0x8
 2006 0055 05       		.byte	0x5
 2007 0056 25010000 		.4byte	.LASF6
 2008 005a 02       		.uleb128 0x2
 2009 005b 08       		.byte	0x8
 2010 005c 07       		.byte	0x7
 2011 005d A2000000 		.4byte	.LASF7
 2012 0061 03       		.uleb128 0x3
 2013 0062 04       		.byte	0x4
 2014 0063 05       		.byte	0x5
 2015 0064 696E7400 		.ascii	"int\000"
 2016 0068 02       		.uleb128 0x2
 2017 0069 04       		.byte	0x4
 2018 006a 07       		.byte	0x7
 2019 006b 04020000 		.4byte	.LASF8
 2020 006f 04       		.uleb128 0x4
 2021 0070 87010000 		.4byte	.LASF9
 2022 0074 02       		.byte	0x2
 2023 0075 5B       		.byte	0x5b
 2024 0076 30000000 		.4byte	0x30
 2025 007a 04       		.uleb128 0x4
 2026 007b 14000000 		.4byte	.LASF10
 2027 007f 02       		.byte	0x2
 2028 0080 5C       		.byte	0x5c
 2029 0081 3E000000 		.4byte	0x3e
 2030 0085 04       		.uleb128 0x4
 2031 0086 CE010000 		.4byte	.LASF11
 2032 008a 02       		.byte	0x2
 2033 008b 5D       		.byte	0x5d
 2034 008c 4C000000 		.4byte	0x4c
 2035 0090 02       		.uleb128 0x2
 2036 0091 04       		.byte	0x4
 2037 0092 04       		.byte	0x4
 2038 0093 50040000 		.4byte	.LASF12
 2039 0097 02       		.uleb128 0x2
 2040 0098 08       		.byte	0x8
 2041 0099 04       		.byte	0x4
 2042 009a A7010000 		.4byte	.LASF13
 2043 009e 02       		.uleb128 0x2
 2044 009f 01       		.byte	0x1
 2045 00a0 08       		.byte	0x8
 2046 00a1 54050000 		.4byte	.LASF14
 2047 00a5 04       		.uleb128 0x4
 2048 00a6 74060000 		.4byte	.LASF15
 2049 00aa 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 76


 2050 00ab E8       		.byte	0xe8
 2051 00ac 4C000000 		.4byte	0x4c
 2052 00b0 04       		.uleb128 0x4
 2053 00b1 E0040000 		.4byte	.LASF16
 2054 00b5 02       		.byte	0x2
 2055 00b6 F0       		.byte	0xf0
 2056 00b7 BB000000 		.4byte	0xbb
 2057 00bb 05       		.uleb128 0x5
 2058 00bc 6F000000 		.4byte	0x6f
 2059 00c0 02       		.uleb128 0x2
 2060 00c1 04       		.byte	0x4
 2061 00c2 07       		.byte	0x7
 2062 00c3 D9030000 		.4byte	.LASF17
 2063 00c7 06       		.uleb128 0x6
 2064 00c8 4B020000 		.4byte	.LASF34
 2065 00cc 12       		.byte	0x12
 2066 00cd 03       		.byte	0x3
 2067 00ce F1       		.byte	0xf1
 2068 00cf A9010000 		.4byte	0x1a9
 2069 00d3 07       		.uleb128 0x7
 2070 00d4 F5030000 		.4byte	.LASF18
 2071 00d8 03       		.byte	0x3
 2072 00d9 F4       		.byte	0xf4
 2073 00da 6F000000 		.4byte	0x6f
 2074 00de 02       		.byte	0x2
 2075 00df 23       		.byte	0x23
 2076 00e0 00       		.uleb128 0
 2077 00e1 07       		.uleb128 0x7
 2078 00e2 FC030000 		.4byte	.LASF19
 2079 00e6 03       		.byte	0x3
 2080 00e7 F5       		.byte	0xf5
 2081 00e8 6F000000 		.4byte	0x6f
 2082 00ec 02       		.byte	0x2
 2083 00ed 23       		.byte	0x23
 2084 00ee 01       		.uleb128 0x1
 2085 00ef 07       		.uleb128 0x7
 2086 00f0 51000000 		.4byte	.LASF20
 2087 00f4 03       		.byte	0x3
 2088 00f5 F6       		.byte	0xf6
 2089 00f6 6F000000 		.4byte	0x6f
 2090 00fa 02       		.byte	0x2
 2091 00fb 23       		.byte	0x23
 2092 00fc 02       		.uleb128 0x2
 2093 00fd 07       		.uleb128 0x7
 2094 00fe 2A020000 		.4byte	.LASF21
 2095 0102 03       		.byte	0x3
 2096 0103 F7       		.byte	0xf7
 2097 0104 6F000000 		.4byte	0x6f
 2098 0108 02       		.byte	0x2
 2099 0109 23       		.byte	0x23
 2100 010a 03       		.uleb128 0x3
 2101 010b 07       		.uleb128 0x7
 2102 010c E2000000 		.4byte	.LASF22
 2103 0110 03       		.byte	0x3
 2104 0111 F8       		.byte	0xf8
 2105 0112 6F000000 		.4byte	0x6f
 2106 0116 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 77


 2107 0117 23       		.byte	0x23
 2108 0118 04       		.uleb128 0x4
 2109 0119 07       		.uleb128 0x7
 2110 011a 7D060000 		.4byte	.LASF23
 2111 011e 03       		.byte	0x3
 2112 011f F9       		.byte	0xf9
 2113 0120 6F000000 		.4byte	0x6f
 2114 0124 02       		.byte	0x2
 2115 0125 23       		.byte	0x23
 2116 0126 05       		.uleb128 0x5
 2117 0127 07       		.uleb128 0x7
 2118 0128 C8060000 		.4byte	.LASF24
 2119 012c 03       		.byte	0x3
 2120 012d FA       		.byte	0xfa
 2121 012e 6F000000 		.4byte	0x6f
 2122 0132 02       		.byte	0x2
 2123 0133 23       		.byte	0x23
 2124 0134 06       		.uleb128 0x6
 2125 0135 07       		.uleb128 0x7
 2126 0136 46040000 		.4byte	.LASF25
 2127 013a 03       		.byte	0x3
 2128 013b FB       		.byte	0xfb
 2129 013c 6F000000 		.4byte	0x6f
 2130 0140 02       		.byte	0x2
 2131 0141 23       		.byte	0x23
 2132 0142 07       		.uleb128 0x7
 2133 0143 07       		.uleb128 0x7
 2134 0144 A7030000 		.4byte	.LASF26
 2135 0148 03       		.byte	0x3
 2136 0149 FC       		.byte	0xfc
 2137 014a 6F000000 		.4byte	0x6f
 2138 014e 02       		.byte	0x2
 2139 014f 23       		.byte	0x23
 2140 0150 08       		.uleb128 0x8
 2141 0151 07       		.uleb128 0x7
 2142 0152 66010000 		.4byte	.LASF27
 2143 0156 03       		.byte	0x3
 2144 0157 FD       		.byte	0xfd
 2145 0158 6F000000 		.4byte	0x6f
 2146 015c 02       		.byte	0x2
 2147 015d 23       		.byte	0x23
 2148 015e 09       		.uleb128 0x9
 2149 015f 07       		.uleb128 0x7
 2150 0160 85000000 		.4byte	.LASF28
 2151 0164 03       		.byte	0x3
 2152 0165 FE       		.byte	0xfe
 2153 0166 6F000000 		.4byte	0x6f
 2154 016a 02       		.byte	0x2
 2155 016b 23       		.byte	0x23
 2156 016c 0A       		.uleb128 0xa
 2157 016d 07       		.uleb128 0x7
 2158 016e 3F010000 		.4byte	.LASF29
 2159 0172 03       		.byte	0x3
 2160 0173 FF       		.byte	0xff
 2161 0174 7A000000 		.4byte	0x7a
 2162 0178 02       		.byte	0x2
 2163 0179 23       		.byte	0x23
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 78


 2164 017a 0C       		.uleb128 0xc
 2165 017b 08       		.uleb128 0x8
 2166 017c 0F050000 		.4byte	.LASF30
 2167 0180 03       		.byte	0x3
 2168 0181 0001     		.2byte	0x100
 2169 0183 6F000000 		.4byte	0x6f
 2170 0187 02       		.byte	0x2
 2171 0188 23       		.byte	0x23
 2172 0189 0E       		.uleb128 0xe
 2173 018a 08       		.uleb128 0x8
 2174 018b D5010000 		.4byte	.LASF31
 2175 018f 03       		.byte	0x3
 2176 0190 0101     		.2byte	0x101
 2177 0192 6F000000 		.4byte	0x6f
 2178 0196 02       		.byte	0x2
 2179 0197 23       		.byte	0x23
 2180 0198 0F       		.uleb128 0xf
 2181 0199 08       		.uleb128 0x8
 2182 019a F7050000 		.4byte	.LASF32
 2183 019e 03       		.byte	0x3
 2184 019f 0201     		.2byte	0x102
 2185 01a1 6F000000 		.4byte	0x6f
 2186 01a5 02       		.byte	0x2
 2187 01a6 23       		.byte	0x23
 2188 01a7 10       		.uleb128 0x10
 2189 01a8 00       		.byte	0
 2190 01a9 09       		.uleb128 0x9
 2191 01aa A7020000 		.4byte	.LASF33
 2192 01ae 03       		.byte	0x3
 2193 01af 0401     		.2byte	0x104
 2194 01b1 C7000000 		.4byte	0xc7
 2195 01b5 0A       		.uleb128 0xa
 2196 01b6 78020000 		.4byte	.LASF35
 2197 01ba 2F       		.byte	0x2f
 2198 01bb 03       		.byte	0x3
 2199 01bc 0701     		.2byte	0x107
 2200 01be EF020000 		.4byte	0x2ef
 2201 01c2 08       		.uleb128 0x8
 2202 01c3 18010000 		.4byte	.LASF36
 2203 01c7 03       		.byte	0x3
 2204 01c8 0901     		.2byte	0x109
 2205 01ca 6F000000 		.4byte	0x6f
 2206 01ce 02       		.byte	0x2
 2207 01cf 23       		.byte	0x23
 2208 01d0 00       		.uleb128 0
 2209 01d1 08       		.uleb128 0x8
 2210 01d2 1E050000 		.4byte	.LASF37
 2211 01d6 03       		.byte	0x3
 2212 01d7 0A01     		.2byte	0x10a
 2213 01d9 6F000000 		.4byte	0x6f
 2214 01dd 02       		.byte	0x2
 2215 01de 23       		.byte	0x23
 2216 01df 01       		.uleb128 0x1
 2217 01e0 08       		.uleb128 0x8
 2218 01e1 46050000 		.4byte	.LASF38
 2219 01e5 03       		.byte	0x3
 2220 01e6 0B01     		.2byte	0x10b
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 79


 2221 01e8 6F000000 		.4byte	0x6f
 2222 01ec 02       		.byte	0x2
 2223 01ed 23       		.byte	0x23
 2224 01ee 02       		.uleb128 0x2
 2225 01ef 08       		.uleb128 0x8
 2226 01f0 CD030000 		.4byte	.LASF39
 2227 01f4 03       		.byte	0x3
 2228 01f5 0D01     		.2byte	0x10d
 2229 01f7 6F000000 		.4byte	0x6f
 2230 01fb 02       		.byte	0x2
 2231 01fc 23       		.byte	0x23
 2232 01fd 03       		.uleb128 0x3
 2233 01fe 08       		.uleb128 0x8
 2234 01ff 0A030000 		.4byte	.LASF40
 2235 0203 03       		.byte	0x3
 2236 0204 1701     		.2byte	0x117
 2237 0206 6F000000 		.4byte	0x6f
 2238 020a 02       		.byte	0x2
 2239 020b 23       		.byte	0x23
 2240 020c 04       		.uleb128 0x4
 2241 020d 08       		.uleb128 0x8
 2242 020e 15030000 		.4byte	.LASF41
 2243 0212 03       		.byte	0x3
 2244 0213 1801     		.2byte	0x118
 2245 0215 6F000000 		.4byte	0x6f
 2246 0219 02       		.byte	0x2
 2247 021a 23       		.byte	0x23
 2248 021b 05       		.uleb128 0x5
 2249 021c 08       		.uleb128 0x8
 2250 021d 20030000 		.4byte	.LASF42
 2251 0221 03       		.byte	0x3
 2252 0222 1901     		.2byte	0x119
 2253 0224 6F000000 		.4byte	0x6f
 2254 0228 02       		.byte	0x2
 2255 0229 23       		.byte	0x23
 2256 022a 06       		.uleb128 0x6
 2257 022b 08       		.uleb128 0x8
 2258 022c 39000000 		.4byte	.LASF43
 2259 0230 03       		.byte	0x3
 2260 0231 1B01     		.2byte	0x11b
 2261 0233 6F000000 		.4byte	0x6f
 2262 0237 02       		.byte	0x2
 2263 0238 23       		.byte	0x23
 2264 0239 07       		.uleb128 0x7
 2265 023a 08       		.uleb128 0x8
 2266 023b 45000000 		.4byte	.LASF44
 2267 023f 03       		.byte	0x3
 2268 0240 1C01     		.2byte	0x11c
 2269 0242 6F000000 		.4byte	0x6f
 2270 0246 02       		.byte	0x2
 2271 0247 23       		.byte	0x23
 2272 0248 08       		.uleb128 0x8
 2273 0249 08       		.uleb128 0x8
 2274 024a 11020000 		.4byte	.LASF45
 2275 024e 03       		.byte	0x3
 2276 024f 1E01     		.2byte	0x11e
 2277 0251 EF020000 		.4byte	0x2ef
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 80


 2278 0255 02       		.byte	0x2
 2279 0256 23       		.byte	0x23
 2280 0257 09       		.uleb128 0x9
 2281 0258 08       		.uleb128 0x8
 2282 0259 44020000 		.4byte	.LASF46
 2283 025d 03       		.byte	0x3
 2284 025e 2101     		.2byte	0x121
 2285 0260 6F000000 		.4byte	0x6f
 2286 0264 02       		.byte	0x2
 2287 0265 23       		.byte	0x23
 2288 0266 25       		.uleb128 0x25
 2289 0267 08       		.uleb128 0x8
 2290 0268 BF060000 		.4byte	.LASF47
 2291 026c 03       		.byte	0x3
 2292 026d 2201     		.2byte	0x122
 2293 026f 6F000000 		.4byte	0x6f
 2294 0273 02       		.byte	0x2
 2295 0274 23       		.byte	0x23
 2296 0275 26       		.uleb128 0x26
 2297 0276 08       		.uleb128 0x8
 2298 0277 1E060000 		.4byte	.LASF48
 2299 027b 03       		.byte	0x3
 2300 027c 2301     		.2byte	0x123
 2301 027e 6F000000 		.4byte	0x6f
 2302 0282 02       		.byte	0x2
 2303 0283 23       		.byte	0x23
 2304 0284 27       		.uleb128 0x27
 2305 0285 08       		.uleb128 0x8
 2306 0286 D9000000 		.4byte	.LASF49
 2307 028a 03       		.byte	0x3
 2308 028b 2401     		.2byte	0x124
 2309 028d 6F000000 		.4byte	0x6f
 2310 0291 02       		.byte	0x2
 2311 0292 23       		.byte	0x23
 2312 0293 28       		.uleb128 0x28
 2313 0294 08       		.uleb128 0x8
 2314 0295 FF000000 		.4byte	.LASF50
 2315 0299 03       		.byte	0x3
 2316 029a 2501     		.2byte	0x125
 2317 029c 6F000000 		.4byte	0x6f
 2318 02a0 02       		.byte	0x2
 2319 02a1 23       		.byte	0x23
 2320 02a2 29       		.uleb128 0x29
 2321 02a3 08       		.uleb128 0x8
 2322 02a4 76040000 		.4byte	.LASF51
 2323 02a8 03       		.byte	0x3
 2324 02a9 2601     		.2byte	0x126
 2325 02ab 6F000000 		.4byte	0x6f
 2326 02af 02       		.byte	0x2
 2327 02b0 23       		.byte	0x23
 2328 02b1 2A       		.uleb128 0x2a
 2329 02b2 08       		.uleb128 0x8
 2330 02b3 8D060000 		.4byte	.LASF52
 2331 02b7 03       		.byte	0x3
 2332 02b8 2701     		.2byte	0x127
 2333 02ba 6F000000 		.4byte	0x6f
 2334 02be 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 81


 2335 02bf 23       		.byte	0x23
 2336 02c0 2B       		.uleb128 0x2b
 2337 02c1 08       		.uleb128 0x8
 2338 02c2 F9010000 		.4byte	.LASF53
 2339 02c6 03       		.byte	0x3
 2340 02c7 2901     		.2byte	0x129
 2341 02c9 6F000000 		.4byte	0x6f
 2342 02cd 02       		.byte	0x2
 2343 02ce 23       		.byte	0x23
 2344 02cf 2C       		.uleb128 0x2c
 2345 02d0 08       		.uleb128 0x8
 2346 02d1 81050000 		.4byte	.LASF54
 2347 02d5 03       		.byte	0x3
 2348 02d6 2A01     		.2byte	0x12a
 2349 02d8 6F000000 		.4byte	0x6f
 2350 02dc 02       		.byte	0x2
 2351 02dd 23       		.byte	0x23
 2352 02de 2D       		.uleb128 0x2d
 2353 02df 08       		.uleb128 0x8
 2354 02e0 9B030000 		.4byte	.LASF55
 2355 02e4 03       		.byte	0x3
 2356 02e5 2C01     		.2byte	0x12c
 2357 02e7 6F000000 		.4byte	0x6f
 2358 02eb 02       		.byte	0x2
 2359 02ec 23       		.byte	0x23
 2360 02ed 2E       		.uleb128 0x2e
 2361 02ee 00       		.byte	0
 2362 02ef 0B       		.uleb128 0xb
 2363 02f0 6F000000 		.4byte	0x6f
 2364 02f4 FF020000 		.4byte	0x2ff
 2365 02f8 0C       		.uleb128 0xc
 2366 02f9 C0000000 		.4byte	0xc0
 2367 02fd 1B       		.byte	0x1b
 2368 02fe 00       		.byte	0
 2369 02ff 09       		.uleb128 0x9
 2370 0300 5E000000 		.4byte	.LASF56
 2371 0304 03       		.byte	0x3
 2372 0305 2E01     		.2byte	0x12e
 2373 0307 B5010000 		.4byte	0x1b5
 2374 030b 0D       		.uleb128 0xd
 2375 030c 34050000 		.4byte	.LASF57
 2376 0310 01       		.byte	0x1
 2377 0311 2D06     		.2byte	0x62d
 2378 0313 01       		.byte	0x1
 2379 0314 00000000 		.4byte	.LFB11
 2380 0318 64010000 		.4byte	.LFE11
 2381 031c 00000000 		.4byte	.LLST0
 2382 0320 01       		.byte	0x1
 2383 0321 0E       		.uleb128 0xe
 2384 0322 27000000 		.4byte	.LASF58
 2385 0326 01       		.byte	0x1
 2386 0327 B006     		.2byte	0x6b0
 2387 0329 01       		.byte	0x1
 2388 032a 00000000 		.4byte	.LFB12
 2389 032e A4000000 		.4byte	.LFE12
 2390 0332 02       		.byte	0x2
 2391 0333 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 82


 2392 0334 00       		.sleb128 0
 2393 0335 01       		.byte	0x1
 2394 0336 0F       		.uleb128 0xf
 2395 0337 01       		.byte	0x1
 2396 0338 B1030000 		.4byte	.LASF59
 2397 033c 01       		.byte	0x1
 2398 033d 50       		.byte	0x50
 2399 033e 01       		.byte	0x1
 2400 033f 00000000 		.4byte	.LFB0
 2401 0343 E4010000 		.4byte	.LFE0
 2402 0347 20000000 		.4byte	.LLST1
 2403 034b 01       		.byte	0x1
 2404 034c 0D040000 		.4byte	0x40d
 2405 0350 10       		.uleb128 0x10
 2406 0351 38000000 		.4byte	.LVL0
 2407 0355 93080000 		.4byte	0x893
 2408 0359 64030000 		.4byte	0x364
 2409 035d 11       		.uleb128 0x11
 2410 035e 01       		.byte	0x1
 2411 035f 50       		.byte	0x50
 2412 0360 02       		.byte	0x2
 2413 0361 08       		.byte	0x8
 2414 0362 37       		.byte	0x37
 2415 0363 00       		.byte	0
 2416 0364 12       		.uleb128 0x12
 2417 0365 90000000 		.4byte	.LVL1
 2418 0369 A7080000 		.4byte	0x8a7
 2419 036d 12       		.uleb128 0x12
 2420 036e A6000000 		.4byte	.LVL2
 2421 0372 BB080000 		.4byte	0x8bb
 2422 0376 10       		.uleb128 0x10
 2423 0377 B2000000 		.4byte	.LVL3
 2424 037b C5080000 		.4byte	0x8c5
 2425 037f 89030000 		.4byte	0x389
 2426 0383 11       		.uleb128 0x11
 2427 0384 01       		.byte	0x1
 2428 0385 50       		.byte	0x50
 2429 0386 01       		.byte	0x1
 2430 0387 34       		.byte	0x34
 2431 0388 00       		.byte	0
 2432 0389 12       		.uleb128 0x12
 2433 038a D0000000 		.4byte	.LVL4
 2434 038e D9080000 		.4byte	0x8d9
 2435 0392 10       		.uleb128 0x10
 2436 0393 D6000000 		.4byte	.LVL5
 2437 0397 ED080000 		.4byte	0x8ed
 2438 039b A5030000 		.4byte	0x3a5
 2439 039f 11       		.uleb128 0x11
 2440 03a0 01       		.byte	0x1
 2441 03a1 50       		.byte	0x50
 2442 03a2 01       		.byte	0x1
 2443 03a3 36       		.byte	0x36
 2444 03a4 00       		.byte	0
 2445 03a5 10       		.uleb128 0x10
 2446 03a6 00010000 		.4byte	.LVL6
 2447 03aa 01090000 		.4byte	0x901
 2448 03ae B8030000 		.4byte	0x3b8
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 83


 2449 03b2 11       		.uleb128 0x11
 2450 03b3 01       		.byte	0x1
 2451 03b4 50       		.byte	0x50
 2452 03b5 01       		.byte	0x1
 2453 03b6 30       		.byte	0x30
 2454 03b7 00       		.byte	0
 2455 03b8 12       		.uleb128 0x12
 2456 03b9 32010000 		.4byte	.LVL7
 2457 03bd 15090000 		.4byte	0x915
 2458 03c1 10       		.uleb128 0x10
 2459 03c2 44010000 		.4byte	.LVL8
 2460 03c6 1F090000 		.4byte	0x91f
 2461 03ca D4030000 		.4byte	0x3d4
 2462 03ce 11       		.uleb128 0x11
 2463 03cf 01       		.byte	0x1
 2464 03d0 50       		.byte	0x50
 2465 03d1 01       		.byte	0x1
 2466 03d2 30       		.byte	0x30
 2467 03d3 00       		.byte	0
 2468 03d4 10       		.uleb128 0x10
 2469 03d5 50010000 		.4byte	.LVL9
 2470 03d9 A7080000 		.4byte	0x8a7
 2471 03dd E7030000 		.4byte	0x3e7
 2472 03e1 11       		.uleb128 0x11
 2473 03e2 01       		.byte	0x1
 2474 03e3 50       		.byte	0x50
 2475 03e4 01       		.byte	0x1
 2476 03e5 30       		.byte	0x30
 2477 03e6 00       		.byte	0
 2478 03e7 10       		.uleb128 0x10
 2479 03e8 6A010000 		.4byte	.LVL10
 2480 03ec 33090000 		.4byte	0x933
 2481 03f0 FA030000 		.4byte	0x3fa
 2482 03f4 11       		.uleb128 0x11
 2483 03f5 01       		.byte	0x1
 2484 03f6 50       		.byte	0x50
 2485 03f7 01       		.byte	0x1
 2486 03f8 30       		.byte	0x30
 2487 03f9 00       		.byte	0
 2488 03fa 12       		.uleb128 0x12
 2489 03fb 7A010000 		.4byte	.LVL11
 2490 03ff 93080000 		.4byte	0x893
 2491 0403 12       		.uleb128 0x12
 2492 0404 90010000 		.4byte	.LVL12
 2493 0408 47090000 		.4byte	0x947
 2494 040c 00       		.byte	0
 2495 040d 13       		.uleb128 0x13
 2496 040e 01       		.byte	0x1
 2497 040f 90000000 		.4byte	.LASF60
 2498 0413 01       		.byte	0x1
 2499 0414 1A01     		.2byte	0x11a
 2500 0416 01       		.byte	0x1
 2501 0417 00000000 		.4byte	.LFB1
 2502 041b 24020000 		.4byte	.LFE1
 2503 041f 40000000 		.4byte	.LLST2
 2504 0423 01       		.byte	0x1
 2505 0424 67050000 		.4byte	0x567
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 84


 2506 0428 14       		.uleb128 0x14
 2507 0429 17060000 		.4byte	.LASF61
 2508 042d 01       		.byte	0x1
 2509 042e 1C01     		.2byte	0x11c
 2510 0430 A5000000 		.4byte	0xa5
 2511 0434 10       		.byte	0x10
 2512 0435 15       		.uleb128 0x15
 2513 0436 6900     		.ascii	"i\000"
 2514 0438 01       		.byte	0x1
 2515 0439 1D01     		.2byte	0x11d
 2516 043b 7A000000 		.4byte	0x7a
 2517 043f 16       		.uleb128 0x16
 2518 0440 2B030000 		.4byte	.LASF62
 2519 0444 01       		.byte	0x1
 2520 0445 1E01     		.2byte	0x11e
 2521 0447 7A000000 		.4byte	0x7a
 2522 044b 60000000 		.4byte	.LLST3
 2523 044f 17       		.uleb128 0x17
 2524 0450 E2030000 		.4byte	.LASF63
 2525 0454 01       		.byte	0x1
 2526 0455 2201     		.2byte	0x122
 2527 0457 77050000 		.4byte	0x577
 2528 045b 02       		.byte	0x2
 2529 045c 91       		.byte	0x91
 2530 045d 70       		.sleb128 -16
 2531 045e 10       		.uleb128 0x10
 2532 045f 34000000 		.4byte	.LVL14
 2533 0463 51090000 		.4byte	0x951
 2534 0467 82040000 		.4byte	0x482
 2535 046b 11       		.uleb128 0x11
 2536 046c 01       		.byte	0x1
 2537 046d 50       		.byte	0x50
 2538 046e 12       		.byte	0x12
 2539 046f 74       		.byte	0x74
 2540 0470 00       		.sleb128 0
 2541 0471 37       		.byte	0x37
 2542 0472 1A       		.byte	0x1a
 2543 0473 03       		.byte	0x3
 2544 0474 00000000 		.4byte	.LANCHOR1
 2545 0478 22       		.byte	0x22
 2546 0479 94       		.byte	0x94
 2547 047a 01       		.byte	0x1
 2548 047b 08       		.byte	0x8
 2549 047c FF       		.byte	0xff
 2550 047d 1A       		.byte	0x1a
 2551 047e 08       		.byte	0x8
 2552 047f 4B       		.byte	0x4b
 2553 0480 1E       		.byte	0x1e
 2554 0481 00       		.byte	0
 2555 0482 10       		.uleb128 0x10
 2556 0483 50000000 		.4byte	.LVL15
 2557 0487 93080000 		.4byte	0x893
 2558 048b 96040000 		.4byte	0x496
 2559 048f 11       		.uleb128 0x11
 2560 0490 01       		.byte	0x1
 2561 0491 50       		.byte	0x50
 2562 0492 02       		.byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 85


 2563 0493 08       		.byte	0x8
 2564 0494 37       		.byte	0x37
 2565 0495 00       		.byte	0
 2566 0496 10       		.uleb128 0x10
 2567 0497 62000000 		.4byte	.LVL16
 2568 049b 65090000 		.4byte	0x965
 2569 049f A9040000 		.4byte	0x4a9
 2570 04a3 11       		.uleb128 0x11
 2571 04a4 01       		.byte	0x1
 2572 04a5 50       		.byte	0x50
 2573 04a6 01       		.byte	0x1
 2574 04a7 30       		.byte	0x30
 2575 04a8 00       		.byte	0
 2576 04a9 12       		.uleb128 0x12
 2577 04aa 7C000000 		.4byte	.LVL18
 2578 04ae 51090000 		.4byte	0x951
 2579 04b2 12       		.uleb128 0x12
 2580 04b3 9E000000 		.4byte	.LVL19
 2581 04b7 1F090000 		.4byte	0x91f
 2582 04bb 12       		.uleb128 0x12
 2583 04bc A6000000 		.4byte	.LVL20
 2584 04c0 A7080000 		.4byte	0x8a7
 2585 04c4 10       		.uleb128 0x10
 2586 04c5 CC000000 		.4byte	.LVL21
 2587 04c9 C5080000 		.4byte	0x8c5
 2588 04cd D7040000 		.4byte	0x4d7
 2589 04d1 11       		.uleb128 0x11
 2590 04d2 01       		.byte	0x1
 2591 04d3 50       		.byte	0x50
 2592 04d4 01       		.byte	0x1
 2593 04d5 38       		.byte	0x38
 2594 04d6 00       		.byte	0
 2595 04d7 12       		.uleb128 0x12
 2596 04d8 DE000000 		.4byte	.LVL22
 2597 04dc C5080000 		.4byte	0x8c5
 2598 04e0 10       		.uleb128 0x10
 2599 04e1 16010000 		.4byte	.LVL23
 2600 04e5 D9080000 		.4byte	0x8d9
 2601 04e9 F6040000 		.4byte	0x4f6
 2602 04ed 11       		.uleb128 0x11
 2603 04ee 01       		.byte	0x1
 2604 04ef 50       		.byte	0x50
 2605 04f0 04       		.byte	0x4
 2606 04f1 74       		.byte	0x74
 2607 04f2 00       		.sleb128 0
 2608 04f3 40       		.byte	0x40
 2609 04f4 1A       		.byte	0x1a
 2610 04f5 00       		.byte	0
 2611 04f6 12       		.uleb128 0x12
 2612 04f7 20010000 		.4byte	.LVL24
 2613 04fb 01090000 		.4byte	0x901
 2614 04ff 12       		.uleb128 0x12
 2615 0500 2C010000 		.4byte	.LVL25
 2616 0504 7D090000 		.4byte	0x97d
 2617 0508 10       		.uleb128 0x10
 2618 0509 64010000 		.4byte	.LVL26
 2619 050d 87090000 		.4byte	0x987
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 86


 2620 0511 1B050000 		.4byte	0x51b
 2621 0515 11       		.uleb128 0x11
 2622 0516 01       		.byte	0x1
 2623 0517 50       		.byte	0x50
 2624 0518 01       		.byte	0x1
 2625 0519 30       		.byte	0x30
 2626 051a 00       		.byte	0
 2627 051b 10       		.uleb128 0x10
 2628 051c 6A010000 		.4byte	.LVL27
 2629 0520 ED080000 		.4byte	0x8ed
 2630 0524 2F050000 		.4byte	0x52f
 2631 0528 11       		.uleb128 0x11
 2632 0529 01       		.byte	0x1
 2633 052a 50       		.byte	0x50
 2634 052b 02       		.byte	0x2
 2635 052c 08       		.byte	0x8
 2636 052d 50       		.byte	0x50
 2637 052e 00       		.byte	0
 2638 052f 10       		.uleb128 0x10
 2639 0530 76010000 		.4byte	.LVL29
 2640 0534 ED080000 		.4byte	0x8ed
 2641 0538 42050000 		.4byte	0x542
 2642 053c 11       		.uleb128 0x11
 2643 053d 01       		.byte	0x1
 2644 053e 50       		.byte	0x50
 2645 053f 01       		.byte	0x1
 2646 0540 31       		.byte	0x31
 2647 0541 00       		.byte	0
 2648 0542 12       		.uleb128 0x12
 2649 0543 9E010000 		.4byte	.LVL30
 2650 0547 1F090000 		.4byte	0x91f
 2651 054b 12       		.uleb128 0x12
 2652 054c A6010000 		.4byte	.LVL31
 2653 0550 A7080000 		.4byte	0x8a7
 2654 0554 12       		.uleb128 0x12
 2655 0555 BE010000 		.4byte	.LVL32
 2656 0559 9F090000 		.4byte	0x99f
 2657 055d 12       		.uleb128 0x12
 2658 055e D6010000 		.4byte	.LVL35
 2659 0562 33090000 		.4byte	0x933
 2660 0566 00       		.byte	0
 2661 0567 0B       		.uleb128 0xb
 2662 0568 6F000000 		.4byte	0x6f
 2663 056c 77050000 		.4byte	0x577
 2664 0570 0C       		.uleb128 0xc
 2665 0571 C0000000 		.4byte	0xc0
 2666 0575 06       		.byte	0x6
 2667 0576 00       		.byte	0
 2668 0577 18       		.uleb128 0x18
 2669 0578 67050000 		.4byte	0x567
 2670 057c 13       		.uleb128 0x13
 2671 057d 01       		.byte	0x1
 2672 057e 7E040000 		.4byte	.LASF64
 2673 0582 01       		.byte	0x1
 2674 0583 7C02     		.2byte	0x27c
 2675 0585 01       		.byte	0x1
 2676 0586 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 87


 2677 058a 60000000 		.4byte	.LFE2
 2678 058e 8C000000 		.4byte	.LLST4
 2679 0592 01       		.byte	0x1
 2680 0593 B8050000 		.4byte	0x5b8
 2681 0597 19       		.uleb128 0x19
 2682 0598 56060000 		.4byte	.LASF65
 2683 059c 01       		.byte	0x1
 2684 059d 7C02     		.2byte	0x27c
 2685 059f 7A000000 		.4byte	0x7a
 2686 05a3 AC000000 		.4byte	.LLST5
 2687 05a7 19       		.uleb128 0x19
 2688 05a8 13040000 		.4byte	.LASF66
 2689 05ac 01       		.byte	0x1
 2690 05ad 7C02     		.2byte	0x27c
 2691 05af 7A000000 		.4byte	0x7a
 2692 05b3 CD000000 		.4byte	.LLST6
 2693 05b7 00       		.byte	0
 2694 05b8 13       		.uleb128 0x13
 2695 05b9 01       		.byte	0x1
 2696 05ba 6C040000 		.4byte	.LASF67
 2697 05be 01       		.byte	0x1
 2698 05bf 4803     		.2byte	0x348
 2699 05c1 01       		.byte	0x1
 2700 05c2 00000000 		.4byte	.LFB3
 2701 05c6 D8000000 		.4byte	.LFE3
 2702 05ca EE000000 		.4byte	.LLST7
 2703 05ce 01       		.byte	0x1
 2704 05cf 29060000 		.4byte	0x629
 2705 05d3 19       		.uleb128 0x19
 2706 05d4 56060000 		.4byte	.LASF65
 2707 05d8 01       		.byte	0x1
 2708 05d9 4803     		.2byte	0x348
 2709 05db 6F000000 		.4byte	0x6f
 2710 05df 0E010000 		.4byte	.LLST8
 2711 05e3 19       		.uleb128 0x19
 2712 05e4 13040000 		.4byte	.LASF66
 2713 05e8 01       		.byte	0x1
 2714 05e9 4803     		.2byte	0x348
 2715 05eb 7A000000 		.4byte	0x7a
 2716 05ef 2F010000 		.4byte	.LLST9
 2717 05f3 16       		.uleb128 0x16
 2718 05f4 49010000 		.4byte	.LASF68
 2719 05f8 01       		.byte	0x1
 2720 05f9 4A03     		.2byte	0x34a
 2721 05fb 6F000000 		.4byte	0x6f
 2722 05ff 50010000 		.4byte	.LLST10
 2723 0603 12       		.uleb128 0x12
 2724 0604 08000000 		.4byte	.LVL40
 2725 0608 A9090000 		.4byte	0x9a9
 2726 060c 12       		.uleb128 0x12
 2727 060d 22000000 		.4byte	.LVL43
 2728 0611 0B030000 		.4byte	0x30b
 2729 0615 12       		.uleb128 0x12
 2730 0616 A2000000 		.4byte	.LVL44
 2731 061a 21030000 		.4byte	0x321
 2732 061e 1A       		.uleb128 0x1a
 2733 061f BE000000 		.4byte	.LVL46
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 88


 2734 0623 01       		.byte	0x1
 2735 0624 B7090000 		.4byte	0x9b7
 2736 0628 00       		.byte	0
 2737 0629 1B       		.uleb128 0x1b
 2738 062a 47060000 		.4byte	.LASF69
 2739 062e 01       		.byte	0x1
 2740 062f 0405     		.2byte	0x504
 2741 0631 01       		.byte	0x1
 2742 0632 01       		.byte	0x1
 2743 0633 1B       		.uleb128 0x1b
 2744 0634 B9000000 		.4byte	.LASF70
 2745 0638 01       		.byte	0x1
 2746 0639 FD06     		.2byte	0x6fd
 2747 063b 01       		.byte	0x1
 2748 063c 01       		.byte	0x1
 2749 063d 1B       		.uleb128 0x1b
 2750 063e E5010000 		.4byte	.LASF71
 2751 0642 01       		.byte	0x1
 2752 0643 5E05     		.2byte	0x55e
 2753 0645 01       		.byte	0x1
 2754 0646 01       		.byte	0x1
 2755 0647 1B       		.uleb128 0x1b
 2756 0648 75010000 		.4byte	.LASF72
 2757 064c 01       		.byte	0x1
 2758 064d 3C07     		.2byte	0x73c
 2759 064f 01       		.byte	0x1
 2760 0650 01       		.byte	0x1
 2761 0651 13       		.uleb128 0x13
 2762 0652 01       		.byte	0x1
 2763 0653 91050000 		.4byte	.LASF73
 2764 0657 01       		.byte	0x1
 2765 0658 5804     		.2byte	0x458
 2766 065a 01       		.byte	0x1
 2767 065b 00000000 		.4byte	.LFB4
 2768 065f 38020000 		.4byte	.LFE4
 2769 0663 84010000 		.4byte	.LLST11
 2770 0667 01       		.byte	0x1
 2771 0668 5A070000 		.4byte	0x75a
 2772 066c 16       		.uleb128 0x16
 2773 066d 49010000 		.4byte	.LASF68
 2774 0671 01       		.byte	0x1
 2775 0672 5A04     		.2byte	0x45a
 2776 0674 6F000000 		.4byte	0x6f
 2777 0678 A4010000 		.4byte	.LLST12
 2778 067c 1C       		.uleb128 0x1c
 2779 067d 29060000 		.4byte	0x629
 2780 0681 1A000000 		.4byte	.LBB10
 2781 0685 00000000 		.4byte	.Ldebug_ranges0+0
 2782 0689 01       		.byte	0x1
 2783 068a 7404     		.2byte	0x474
 2784 068c DD060000 		.4byte	0x6dd
 2785 0690 1D       		.uleb128 0x1d
 2786 0691 33060000 		.4byte	0x633
 2787 0695 6C000000 		.4byte	.LBB12
 2788 0699 EC000000 		.4byte	.LBE12
 2789 069d 01       		.byte	0x1
 2790 069e 3905     		.2byte	0x539
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 89


 2791 06a0 C0060000 		.4byte	0x6c0
 2792 06a4 12       		.uleb128 0x12
 2793 06a5 9A000000 		.4byte	.LVL51
 2794 06a9 CB090000 		.4byte	0x9cb
 2795 06ad 12       		.uleb128 0x12
 2796 06ae CA000000 		.4byte	.LVL52
 2797 06b2 D5090000 		.4byte	0x9d5
 2798 06b6 12       		.uleb128 0x12
 2799 06b7 E6000000 		.4byte	.LVL53
 2800 06bb DF090000 		.4byte	0x9df
 2801 06bf 00       		.byte	0
 2802 06c0 10       		.uleb128 0x10
 2803 06c1 3C000000 		.4byte	.LVL50
 2804 06c5 E9090000 		.4byte	0x9e9
 2805 06c9 D3060000 		.4byte	0x6d3
 2806 06cd 11       		.uleb128 0x11
 2807 06ce 01       		.byte	0x1
 2808 06cf 50       		.byte	0x50
 2809 06d0 01       		.byte	0x1
 2810 06d1 31       		.byte	0x31
 2811 06d2 00       		.byte	0
 2812 06d3 12       		.uleb128 0x12
 2813 06d4 F2000000 		.4byte	.LVL54
 2814 06d8 0B030000 		.4byte	0x30b
 2815 06dc 00       		.byte	0
 2816 06dd 1D       		.uleb128 0x1d
 2817 06de 3D060000 		.4byte	0x63d
 2818 06e2 78010000 		.4byte	.LBB16
 2819 06e6 EA010000 		.4byte	.LBE16
 2820 06ea 01       		.byte	0x1
 2821 06eb AF04     		.2byte	0x4af
 2822 06ed 46070000 		.4byte	0x746
 2823 06f1 1D       		.uleb128 0x1d
 2824 06f2 47060000 		.4byte	0x647
 2825 06f6 78010000 		.4byte	.LBB18
 2826 06fa B0010000 		.4byte	.LBE18
 2827 06fe 01       		.byte	0x1
 2828 06ff 6105     		.2byte	0x561
 2829 0701 21070000 		.4byte	0x721
 2830 0705 12       		.uleb128 0x12
 2831 0706 8E010000 		.4byte	.LVL55
 2832 070a 010A0000 		.4byte	0xa01
 2833 070e 12       		.uleb128 0x12
 2834 070f A4010000 		.4byte	.LVL56
 2835 0713 1A0A0000 		.4byte	0xa1a
 2836 0717 12       		.uleb128 0x12
 2837 0718 B0010000 		.4byte	.LVL57
 2838 071c 330A0000 		.4byte	0xa33
 2839 0720 00       		.byte	0
 2840 0721 12       		.uleb128 0x12
 2841 0722 B6010000 		.4byte	.LVL58
 2842 0726 21030000 		.4byte	0x321
 2843 072a 12       		.uleb128 0x12
 2844 072b C0010000 		.4byte	.LVL59
 2845 072f 3D0A0000 		.4byte	0xa3d
 2846 0733 12       		.uleb128 0x12
 2847 0734 CA010000 		.4byte	.LVL60
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 90


 2848 0738 470A0000 		.4byte	0xa47
 2849 073c 12       		.uleb128 0x12
 2850 073d D0010000 		.4byte	.LVL61
 2851 0741 E9090000 		.4byte	0x9e9
 2852 0745 00       		.byte	0
 2853 0746 12       		.uleb128 0x12
 2854 0747 06000000 		.4byte	.LVL47
 2855 074b A9090000 		.4byte	0x9a9
 2856 074f 1A       		.uleb128 0x1a
 2857 0750 04020000 		.4byte	.LVL63
 2858 0754 01       		.byte	0x1
 2859 0755 B7090000 		.4byte	0x9b7
 2860 0759 00       		.byte	0
 2861 075a 1E       		.uleb128 0x1e
 2862 075b 01       		.byte	0x1
 2863 075c D4050000 		.4byte	.LASF115
 2864 0760 01       		.byte	0x1
 2865 0761 D804     		.2byte	0x4d8
 2866 0763 01       		.byte	0x1
 2867 0764 6F000000 		.4byte	0x6f
 2868 0768 00000000 		.4byte	.LFB5
 2869 076c 2C000000 		.4byte	.LFE5
 2870 0770 D8010000 		.4byte	.LLST13
 2871 0774 01       		.byte	0x1
 2872 0775 CC070000 		.4byte	0x7cc
 2873 0779 19       		.uleb128 0x19
 2874 077a F4010000 		.4byte	.LASF74
 2875 077e 01       		.byte	0x1
 2876 077f D804     		.2byte	0x4d8
 2877 0781 6F000000 		.4byte	0x6f
 2878 0785 F8010000 		.4byte	.LLST14
 2879 0789 17       		.uleb128 0x17
 2880 078a D2060000 		.4byte	.LASF75
 2881 078e 01       		.byte	0x1
 2882 078f DA04     		.2byte	0x4da
 2883 0791 6F000000 		.4byte	0x6f
 2884 0795 05       		.byte	0x5
 2885 0796 03       		.byte	0x3
 2886 0797 42000000 		.4byte	interruptStatus.4777
 2887 079b 16       		.uleb128 0x16
 2888 079c 49010000 		.4byte	.LASF68
 2889 07a0 01       		.byte	0x1
 2890 07a1 DB04     		.2byte	0x4db
 2891 07a3 6F000000 		.4byte	0x6f
 2892 07a7 19020000 		.4byte	.LLST15
 2893 07ab 17       		.uleb128 0x17
 2894 07ac CF000000 		.4byte	.LASF76
 2895 07b0 01       		.byte	0x1
 2896 07b1 DC04     		.2byte	0x4dc
 2897 07b3 6F000000 		.4byte	0x6f
 2898 07b7 01       		.byte	0x1
 2899 07b8 54       		.byte	0x54
 2900 07b9 12       		.uleb128 0x12
 2901 07ba 08000000 		.4byte	.LVL65
 2902 07be A9090000 		.4byte	0x9a9
 2903 07c2 12       		.uleb128 0x12
 2904 07c3 20000000 		.4byte	.LVL67
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 91


 2905 07c7 B7090000 		.4byte	0x9b7
 2906 07cb 00       		.byte	0
 2907 07cc 13       		.uleb128 0x13
 2908 07cd 01       		.byte	0x1
 2909 07ce 04060000 		.4byte	.LASF77
 2910 07d2 01       		.byte	0x1
 2911 07d3 9B05     		.2byte	0x59b
 2912 07d5 01       		.byte	0x1
 2913 07d6 00000000 		.4byte	.LFB8
 2914 07da 54000000 		.4byte	.LFE8
 2915 07de 2C020000 		.4byte	.LLST16
 2916 07e2 01       		.byte	0x1
 2917 07e3 01080000 		.4byte	0x801
 2918 07e7 19       		.uleb128 0x19
 2919 07e8 D4020000 		.4byte	.LASF78
 2920 07ec 01       		.byte	0x1
 2921 07ed 9B05     		.2byte	0x59b
 2922 07ef 6F000000 		.4byte	0x6f
 2923 07f3 4C020000 		.4byte	.LLST17
 2924 07f7 12       		.uleb128 0x12
 2925 07f8 12000000 		.4byte	.LVL70
 2926 07fc 3D0A0000 		.4byte	0xa3d
 2927 0800 00       		.byte	0
 2928 0801 13       		.uleb128 0x13
 2929 0802 01       		.byte	0x1
 2930 0803 E5040000 		.4byte	.LASF79
 2931 0807 01       		.byte	0x1
 2932 0808 CF05     		.2byte	0x5cf
 2933 080a 01       		.byte	0x1
 2934 080b 00000000 		.4byte	.LFB9
 2935 080f 2C000000 		.4byte	.LFE9
 2936 0813 6D020000 		.4byte	.LLST18
 2937 0817 01       		.byte	0x1
 2938 0818 26080000 		.4byte	0x826
 2939 081c 12       		.uleb128 0x12
 2940 081d 0E000000 		.4byte	.LVL71
 2941 0821 510A0000 		.4byte	0xa51
 2942 0825 00       		.byte	0
 2943 0826 13       		.uleb128 0x13
 2944 0827 01       		.byte	0x1
 2945 0828 EC000000 		.4byte	.LASF80
 2946 082c 01       		.byte	0x1
 2947 082d F405     		.2byte	0x5f4
 2948 082f 01       		.byte	0x1
 2949 0830 00000000 		.4byte	.LFB10
 2950 0834 50000000 		.4byte	.LFE10
 2951 0838 8D020000 		.4byte	.LLST19
 2952 083c 01       		.byte	0x1
 2953 083d 5B080000 		.4byte	0x85b
 2954 0841 19       		.uleb128 0x19
 2955 0842 B5050000 		.4byte	.LASF81
 2956 0846 01       		.byte	0x1
 2957 0847 F405     		.2byte	0x5f4
 2958 0849 6F000000 		.4byte	0x6f
 2959 084d AD020000 		.4byte	.LLST20
 2960 0851 12       		.uleb128 0x12
 2961 0852 12000000 		.4byte	.LVL74
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 92


 2962 0856 470A0000 		.4byte	0xa47
 2963 085a 00       		.byte	0
 2964 085b 1F       		.uleb128 0x1f
 2965 085c B4060000 		.4byte	.LASF82
 2966 0860 01       		.byte	0x1
 2967 0861 1F       		.byte	0x1f
 2968 0862 FF020000 		.4byte	0x2ff
 2969 0866 05       		.byte	0x5
 2970 0867 03       		.byte	0x3
 2971 0868 00000000 		.4byte	cyPmBackup
 2972 086c 1F       		.uleb128 0x1f
 2973 086d FF040000 		.4byte	.LASF83
 2974 0871 01       		.byte	0x1
 2975 0872 20       		.byte	0x20
 2976 0873 A9010000 		.4byte	0x1a9
 2977 0877 05       		.byte	0x5
 2978 0878 03       		.byte	0x3
 2979 0879 30000000 		.4byte	cyPmClockBackup
 2980 087d 1F       		.uleb128 0x1f
 2981 087e C1050000 		.4byte	.LASF84
 2982 0882 01       		.byte	0x1
 2983 0883 23       		.byte	0x23
 2984 0884 8E080000 		.4byte	0x88e
 2985 0888 05       		.byte	0x5
 2986 0889 03       		.byte	0x3
 2987 088a 00000000 		.4byte	cyPmImoFreqReg2Mhz
 2988 088e 18       		.uleb128 0x18
 2989 088f 67050000 		.4byte	0x567
 2990 0893 20       		.uleb128 0x20
 2991 0894 01       		.byte	0x1
 2992 0895 9F050000 		.4byte	.LASF85
 2993 0899 04       		.byte	0x4
 2994 089a 4B       		.byte	0x4b
 2995 089b 01       		.byte	0x1
 2996 089c 01       		.byte	0x1
 2997 089d A7080000 		.4byte	0x8a7
 2998 08a1 21       		.uleb128 0x21
 2999 08a2 6F000000 		.4byte	0x6f
 3000 08a6 00       		.byte	0
 3001 08a7 20       		.uleb128 0x20
 3002 08a8 01       		.byte	0x1
 3003 08a9 F4020000 		.4byte	.LASF86
 3004 08ad 05       		.byte	0x5
 3005 08ae 4E       		.byte	0x4e
 3006 08af 01       		.byte	0x1
 3007 08b0 01       		.byte	0x1
 3008 08b1 BB080000 		.4byte	0x8bb
 3009 08b5 21       		.uleb128 0x21
 3010 08b6 6F000000 		.4byte	0x6f
 3011 08ba 00       		.byte	0
 3012 08bb 22       		.uleb128 0x22
 3013 08bc 01       		.byte	0x1
 3014 08bd 20040000 		.4byte	.LASF91
 3015 08c1 05       		.byte	0x5
 3016 08c2 43       		.byte	0x43
 3017 08c3 01       		.byte	0x1
 3018 08c4 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 93


 3019 08c5 20       		.uleb128 0x20
 3020 08c6 01       		.byte	0x1
 3021 08c7 25060000 		.4byte	.LASF87
 3022 08cb 05       		.byte	0x5
 3023 08cc 49       		.byte	0x49
 3024 08cd 01       		.byte	0x1
 3025 08ce 01       		.byte	0x1
 3026 08cf D9080000 		.4byte	0x8d9
 3027 08d3 21       		.uleb128 0x21
 3028 08d4 6F000000 		.4byte	0x6f
 3029 08d8 00       		.byte	0
 3030 08d9 20       		.uleb128 0x20
 3031 08da 01       		.byte	0x1
 3032 08db 1B000000 		.4byte	.LASF88
 3033 08df 05       		.byte	0x5
 3034 08e0 47       		.byte	0x47
 3035 08e1 01       		.byte	0x1
 3036 08e2 01       		.byte	0x1
 3037 08e3 ED080000 		.4byte	0x8ed
 3038 08e7 21       		.uleb128 0x21
 3039 08e8 6F000000 		.4byte	0x6f
 3040 08ec 00       		.byte	0
 3041 08ed 20       		.uleb128 0x20
 3042 08ee 01       		.byte	0x1
 3043 08ef 9D010000 		.4byte	.LASF89
 3044 08f3 05       		.byte	0x5
 3045 08f4 78       		.byte	0x78
 3046 08f5 01       		.byte	0x1
 3047 08f6 01       		.byte	0x1
 3048 08f7 01090000 		.4byte	0x901
 3049 08fb 21       		.uleb128 0x21
 3050 08fc 7A000000 		.4byte	0x7a
 3051 0900 00       		.byte	0
 3052 0901 20       		.uleb128 0x20
 3053 0902 01       		.byte	0x1
 3054 0903 1A020000 		.4byte	.LASF90
 3055 0907 05       		.byte	0x5
 3056 0908 4A       		.byte	0x4a
 3057 0909 01       		.byte	0x1
 3058 090a 01       		.byte	0x1
 3059 090b 15090000 		.4byte	0x915
 3060 090f 21       		.uleb128 0x21
 3061 0910 6F000000 		.4byte	0x6f
 3062 0914 00       		.byte	0
 3063 0915 22       		.uleb128 0x22
 3064 0916 01       		.byte	0x1
 3065 0917 59050000 		.4byte	.LASF92
 3066 091b 05       		.byte	0x5
 3067 091c 4C       		.byte	0x4c
 3068 091d 01       		.byte	0x1
 3069 091e 01       		.byte	0x1
 3070 091f 20       		.uleb128 0x20
 3071 0920 01       		.byte	0x1
 3072 0921 2F040000 		.4byte	.LASF93
 3073 0925 05       		.byte	0x5
 3074 0926 4F       		.byte	0x4f
 3075 0927 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 94


 3076 0928 01       		.byte	0x1
 3077 0929 33090000 		.4byte	0x933
 3078 092d 21       		.uleb128 0x21
 3079 092e 6F000000 		.4byte	0x6f
 3080 0932 00       		.byte	0
 3081 0933 20       		.uleb128 0x20
 3082 0934 01       		.byte	0x1
 3083 0935 E3050000 		.4byte	.LASF94
 3084 0939 05       		.byte	0x5
 3085 093a 50       		.byte	0x50
 3086 093b 01       		.byte	0x1
 3087 093c 01       		.byte	0x1
 3088 093d 47090000 		.4byte	0x947
 3089 0941 21       		.uleb128 0x21
 3090 0942 7A000000 		.4byte	0x7a
 3091 0946 00       		.byte	0
 3092 0947 22       		.uleb128 0x22
 3093 0948 01       		.byte	0x1
 3094 0949 A8060000 		.4byte	.LASF95
 3095 094d 05       		.byte	0x5
 3096 094e 67       		.byte	0x67
 3097 094f 01       		.byte	0x1
 3098 0950 01       		.byte	0x1
 3099 0951 20       		.uleb128 0x20
 3100 0952 01       		.byte	0x1
 3101 0953 89040000 		.4byte	.LASF96
 3102 0957 05       		.byte	0x5
 3103 0958 7A       		.byte	0x7a
 3104 0959 01       		.byte	0x1
 3105 095a 01       		.byte	0x1
 3106 095b 65090000 		.4byte	0x965
 3107 095f 21       		.uleb128 0x21
 3108 0960 85000000 		.4byte	0x85
 3109 0964 00       		.byte	0
 3110 0965 23       		.uleb128 0x23
 3111 0966 01       		.byte	0x1
 3112 0967 C0030000 		.4byte	.LASF98
 3113 096b 05       		.byte	0x5
 3114 096c 66       		.byte	0x66
 3115 096d 01       		.byte	0x1
 3116 096e A5000000 		.4byte	0xa5
 3117 0972 01       		.byte	0x1
 3118 0973 7D090000 		.4byte	0x97d
 3119 0977 21       		.uleb128 0x21
 3120 0978 6F000000 		.4byte	0x6f
 3121 097c 00       		.byte	0
 3122 097d 22       		.uleb128 0x22
 3123 097e 01       		.byte	0x1
 3124 097f 33060000 		.4byte	.LASF97
 3125 0983 05       		.byte	0x5
 3126 0984 4B       		.byte	0x4b
 3127 0985 01       		.byte	0x1
 3128 0986 01       		.byte	0x1
 3129 0987 23       		.uleb128 0x23
 3130 0988 01       		.byte	0x1
 3131 0989 8D010000 		.4byte	.LASF99
 3132 098d 05       		.byte	0x5
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 95


 3133 098e 42       		.byte	0x42
 3134 098f 01       		.byte	0x1
 3135 0990 A5000000 		.4byte	0xa5
 3136 0994 01       		.byte	0x1
 3137 0995 9F090000 		.4byte	0x99f
 3138 0999 21       		.uleb128 0x21
 3139 099a 6F000000 		.4byte	0x6f
 3140 099e 00       		.byte	0
 3141 099f 22       		.uleb128 0x22
 3142 09a0 01       		.byte	0x1
 3143 09a1 9C020000 		.4byte	.LASF100
 3144 09a5 05       		.byte	0x5
 3145 09a6 48       		.byte	0x48
 3146 09a7 01       		.byte	0x1
 3147 09a8 01       		.byte	0x1
 3148 09a9 24       		.uleb128 0x24
 3149 09aa 01       		.byte	0x1
 3150 09ab 61020000 		.4byte	.LASF116
 3151 09af 05       		.byte	0x5
 3152 09b0 7E       		.byte	0x7e
 3153 09b1 01       		.byte	0x1
 3154 09b2 6F000000 		.4byte	0x6f
 3155 09b6 01       		.byte	0x1
 3156 09b7 20       		.uleb128 0x20
 3157 09b8 01       		.byte	0x1
 3158 09b9 56040000 		.4byte	.LASF101
 3159 09bd 05       		.byte	0x5
 3160 09be 7F       		.byte	0x7f
 3161 09bf 01       		.byte	0x1
 3162 09c0 01       		.byte	0x1
 3163 09c1 CB090000 		.4byte	0x9cb
 3164 09c5 21       		.uleb128 0x21
 3165 09c6 6F000000 		.4byte	0x6f
 3166 09ca 00       		.byte	0
 3167 09cb 22       		.uleb128 0x22
 3168 09cc 01       		.byte	0x1
 3169 09cd 6E050000 		.4byte	.LASF102
 3170 09d1 05       		.byte	0x5
 3171 09d2 9D       		.byte	0x9d
 3172 09d3 01       		.byte	0x1
 3173 09d4 01       		.byte	0x1
 3174 09d5 22       		.uleb128 0x22
 3175 09d6 01       		.byte	0x1
 3176 09d7 00000000 		.4byte	.LASF103
 3177 09db 05       		.byte	0x5
 3178 09dc 9E       		.byte	0x9e
 3179 09dd 01       		.byte	0x1
 3180 09de 01       		.byte	0x1
 3181 09df 22       		.uleb128 0x22
 3182 09e0 01       		.byte	0x1
 3183 09e1 E0020000 		.4byte	.LASF104
 3184 09e5 05       		.byte	0x5
 3185 09e6 A0       		.byte	0xa0
 3186 09e7 01       		.byte	0x1
 3187 09e8 01       		.byte	0x1
 3188 09e9 23       		.uleb128 0x23
 3189 09ea 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 96


 3190 09eb 89020000 		.4byte	.LASF105
 3191 09ef 05       		.byte	0x5
 3192 09f0 5F       		.byte	0x5f
 3193 09f1 01       		.byte	0x1
 3194 09f2 6F000000 		.4byte	0x6f
 3195 09f6 01       		.byte	0x1
 3196 09f7 010A0000 		.4byte	0xa01
 3197 09fb 21       		.uleb128 0x21
 3198 09fc 6F000000 		.4byte	0x6f
 3199 0a00 00       		.byte	0
 3200 0a01 20       		.uleb128 0x20
 3201 0a02 01       		.byte	0x1
 3202 0a03 06010000 		.4byte	.LASF106
 3203 0a07 05       		.byte	0x5
 3204 0a08 9B       		.byte	0x9b
 3205 0a09 01       		.byte	0x1
 3206 0a0a 01       		.byte	0x1
 3207 0a0b 1A0A0000 		.4byte	0xa1a
 3208 0a0f 21       		.uleb128 0x21
 3209 0a10 6F000000 		.4byte	0x6f
 3210 0a14 21       		.uleb128 0x21
 3211 0a15 6F000000 		.4byte	0x6f
 3212 0a19 00       		.byte	0
 3213 0a1a 20       		.uleb128 0x20
 3214 0a1b 01       		.byte	0x1
 3215 0a1c 61060000 		.4byte	.LASF107
 3216 0a20 05       		.byte	0x5
 3217 0a21 9C       		.byte	0x9c
 3218 0a22 01       		.byte	0x1
 3219 0a23 01       		.byte	0x1
 3220 0a24 330A0000 		.4byte	0xa33
 3221 0a28 21       		.uleb128 0x21
 3222 0a29 6F000000 		.4byte	0x6f
 3223 0a2d 21       		.uleb128 0x21
 3224 0a2e 6F000000 		.4byte	0x6f
 3225 0a32 00       		.byte	0
 3226 0a33 22       		.uleb128 0x22
 3227 0a34 01       		.byte	0x1
 3228 0a35 95060000 		.4byte	.LASF108
 3229 0a39 05       		.byte	0x5
 3230 0a3a 9F       		.byte	0x9f
 3231 0a3b 01       		.byte	0x1
 3232 0a3c 01       		.byte	0x1
 3233 0a3d 22       		.uleb128 0x22
 3234 0a3e 01       		.byte	0x1
 3235 0a3f 58010000 		.4byte	.LASF109
 3236 0a43 05       		.byte	0x5
 3237 0a44 58       		.byte	0x58
 3238 0a45 01       		.byte	0x1
 3239 0a46 01       		.byte	0x1
 3240 0a47 22       		.uleb128 0x22
 3241 0a48 01       		.byte	0x1
 3242 0a49 03040000 		.4byte	.LASF110
 3243 0a4d 05       		.byte	0x5
 3244 0a4e 5A       		.byte	0x5a
 3245 0a4f 01       		.byte	0x1
 3246 0a50 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 97


 3247 0a51 22       		.uleb128 0x22
 3248 0a52 01       		.byte	0x1
 3249 0a53 72000000 		.4byte	.LASF111
 3250 0a57 05       		.byte	0x5
 3251 0a58 63       		.byte	0x63
 3252 0a59 01       		.byte	0x1
 3253 0a5a 01       		.byte	0x1
 3254 0a5b 00       		.byte	0
 3255              		.section	.debug_abbrev,"",%progbits
 3256              	.Ldebug_abbrev0:
 3257 0000 01       		.uleb128 0x1
 3258 0001 11       		.uleb128 0x11
 3259 0002 01       		.byte	0x1
 3260 0003 25       		.uleb128 0x25
 3261 0004 0E       		.uleb128 0xe
 3262 0005 13       		.uleb128 0x13
 3263 0006 0B       		.uleb128 0xb
 3264 0007 03       		.uleb128 0x3
 3265 0008 0E       		.uleb128 0xe
 3266 0009 1B       		.uleb128 0x1b
 3267 000a 0E       		.uleb128 0xe
 3268 000b 55       		.uleb128 0x55
 3269 000c 06       		.uleb128 0x6
 3270 000d 11       		.uleb128 0x11
 3271 000e 01       		.uleb128 0x1
 3272 000f 52       		.uleb128 0x52
 3273 0010 01       		.uleb128 0x1
 3274 0011 10       		.uleb128 0x10
 3275 0012 06       		.uleb128 0x6
 3276 0013 00       		.byte	0
 3277 0014 00       		.byte	0
 3278 0015 02       		.uleb128 0x2
 3279 0016 24       		.uleb128 0x24
 3280 0017 00       		.byte	0
 3281 0018 0B       		.uleb128 0xb
 3282 0019 0B       		.uleb128 0xb
 3283 001a 3E       		.uleb128 0x3e
 3284 001b 0B       		.uleb128 0xb
 3285 001c 03       		.uleb128 0x3
 3286 001d 0E       		.uleb128 0xe
 3287 001e 00       		.byte	0
 3288 001f 00       		.byte	0
 3289 0020 03       		.uleb128 0x3
 3290 0021 24       		.uleb128 0x24
 3291 0022 00       		.byte	0
 3292 0023 0B       		.uleb128 0xb
 3293 0024 0B       		.uleb128 0xb
 3294 0025 3E       		.uleb128 0x3e
 3295 0026 0B       		.uleb128 0xb
 3296 0027 03       		.uleb128 0x3
 3297 0028 08       		.uleb128 0x8
 3298 0029 00       		.byte	0
 3299 002a 00       		.byte	0
 3300 002b 04       		.uleb128 0x4
 3301 002c 16       		.uleb128 0x16
 3302 002d 00       		.byte	0
 3303 002e 03       		.uleb128 0x3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 98


 3304 002f 0E       		.uleb128 0xe
 3305 0030 3A       		.uleb128 0x3a
 3306 0031 0B       		.uleb128 0xb
 3307 0032 3B       		.uleb128 0x3b
 3308 0033 0B       		.uleb128 0xb
 3309 0034 49       		.uleb128 0x49
 3310 0035 13       		.uleb128 0x13
 3311 0036 00       		.byte	0
 3312 0037 00       		.byte	0
 3313 0038 05       		.uleb128 0x5
 3314 0039 35       		.uleb128 0x35
 3315 003a 00       		.byte	0
 3316 003b 49       		.uleb128 0x49
 3317 003c 13       		.uleb128 0x13
 3318 003d 00       		.byte	0
 3319 003e 00       		.byte	0
 3320 003f 06       		.uleb128 0x6
 3321 0040 13       		.uleb128 0x13
 3322 0041 01       		.byte	0x1
 3323 0042 03       		.uleb128 0x3
 3324 0043 0E       		.uleb128 0xe
 3325 0044 0B       		.uleb128 0xb
 3326 0045 0B       		.uleb128 0xb
 3327 0046 3A       		.uleb128 0x3a
 3328 0047 0B       		.uleb128 0xb
 3329 0048 3B       		.uleb128 0x3b
 3330 0049 0B       		.uleb128 0xb
 3331 004a 01       		.uleb128 0x1
 3332 004b 13       		.uleb128 0x13
 3333 004c 00       		.byte	0
 3334 004d 00       		.byte	0
 3335 004e 07       		.uleb128 0x7
 3336 004f 0D       		.uleb128 0xd
 3337 0050 00       		.byte	0
 3338 0051 03       		.uleb128 0x3
 3339 0052 0E       		.uleb128 0xe
 3340 0053 3A       		.uleb128 0x3a
 3341 0054 0B       		.uleb128 0xb
 3342 0055 3B       		.uleb128 0x3b
 3343 0056 0B       		.uleb128 0xb
 3344 0057 49       		.uleb128 0x49
 3345 0058 13       		.uleb128 0x13
 3346 0059 38       		.uleb128 0x38
 3347 005a 0A       		.uleb128 0xa
 3348 005b 00       		.byte	0
 3349 005c 00       		.byte	0
 3350 005d 08       		.uleb128 0x8
 3351 005e 0D       		.uleb128 0xd
 3352 005f 00       		.byte	0
 3353 0060 03       		.uleb128 0x3
 3354 0061 0E       		.uleb128 0xe
 3355 0062 3A       		.uleb128 0x3a
 3356 0063 0B       		.uleb128 0xb
 3357 0064 3B       		.uleb128 0x3b
 3358 0065 05       		.uleb128 0x5
 3359 0066 49       		.uleb128 0x49
 3360 0067 13       		.uleb128 0x13
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 99


 3361 0068 38       		.uleb128 0x38
 3362 0069 0A       		.uleb128 0xa
 3363 006a 00       		.byte	0
 3364 006b 00       		.byte	0
 3365 006c 09       		.uleb128 0x9
 3366 006d 16       		.uleb128 0x16
 3367 006e 00       		.byte	0
 3368 006f 03       		.uleb128 0x3
 3369 0070 0E       		.uleb128 0xe
 3370 0071 3A       		.uleb128 0x3a
 3371 0072 0B       		.uleb128 0xb
 3372 0073 3B       		.uleb128 0x3b
 3373 0074 05       		.uleb128 0x5
 3374 0075 49       		.uleb128 0x49
 3375 0076 13       		.uleb128 0x13
 3376 0077 00       		.byte	0
 3377 0078 00       		.byte	0
 3378 0079 0A       		.uleb128 0xa
 3379 007a 13       		.uleb128 0x13
 3380 007b 01       		.byte	0x1
 3381 007c 03       		.uleb128 0x3
 3382 007d 0E       		.uleb128 0xe
 3383 007e 0B       		.uleb128 0xb
 3384 007f 0B       		.uleb128 0xb
 3385 0080 3A       		.uleb128 0x3a
 3386 0081 0B       		.uleb128 0xb
 3387 0082 3B       		.uleb128 0x3b
 3388 0083 05       		.uleb128 0x5
 3389 0084 01       		.uleb128 0x1
 3390 0085 13       		.uleb128 0x13
 3391 0086 00       		.byte	0
 3392 0087 00       		.byte	0
 3393 0088 0B       		.uleb128 0xb
 3394 0089 01       		.uleb128 0x1
 3395 008a 01       		.byte	0x1
 3396 008b 49       		.uleb128 0x49
 3397 008c 13       		.uleb128 0x13
 3398 008d 01       		.uleb128 0x1
 3399 008e 13       		.uleb128 0x13
 3400 008f 00       		.byte	0
 3401 0090 00       		.byte	0
 3402 0091 0C       		.uleb128 0xc
 3403 0092 21       		.uleb128 0x21
 3404 0093 00       		.byte	0
 3405 0094 49       		.uleb128 0x49
 3406 0095 13       		.uleb128 0x13
 3407 0096 2F       		.uleb128 0x2f
 3408 0097 0B       		.uleb128 0xb
 3409 0098 00       		.byte	0
 3410 0099 00       		.byte	0
 3411 009a 0D       		.uleb128 0xd
 3412 009b 2E       		.uleb128 0x2e
 3413 009c 00       		.byte	0
 3414 009d 03       		.uleb128 0x3
 3415 009e 0E       		.uleb128 0xe
 3416 009f 3A       		.uleb128 0x3a
 3417 00a0 0B       		.uleb128 0xb
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 100


 3418 00a1 3B       		.uleb128 0x3b
 3419 00a2 05       		.uleb128 0x5
 3420 00a3 27       		.uleb128 0x27
 3421 00a4 0C       		.uleb128 0xc
 3422 00a5 11       		.uleb128 0x11
 3423 00a6 01       		.uleb128 0x1
 3424 00a7 12       		.uleb128 0x12
 3425 00a8 01       		.uleb128 0x1
 3426 00a9 40       		.uleb128 0x40
 3427 00aa 06       		.uleb128 0x6
 3428 00ab 9742     		.uleb128 0x2117
 3429 00ad 0C       		.uleb128 0xc
 3430 00ae 00       		.byte	0
 3431 00af 00       		.byte	0
 3432 00b0 0E       		.uleb128 0xe
 3433 00b1 2E       		.uleb128 0x2e
 3434 00b2 00       		.byte	0
 3435 00b3 03       		.uleb128 0x3
 3436 00b4 0E       		.uleb128 0xe
 3437 00b5 3A       		.uleb128 0x3a
 3438 00b6 0B       		.uleb128 0xb
 3439 00b7 3B       		.uleb128 0x3b
 3440 00b8 05       		.uleb128 0x5
 3441 00b9 27       		.uleb128 0x27
 3442 00ba 0C       		.uleb128 0xc
 3443 00bb 11       		.uleb128 0x11
 3444 00bc 01       		.uleb128 0x1
 3445 00bd 12       		.uleb128 0x12
 3446 00be 01       		.uleb128 0x1
 3447 00bf 40       		.uleb128 0x40
 3448 00c0 0A       		.uleb128 0xa
 3449 00c1 9742     		.uleb128 0x2117
 3450 00c3 0C       		.uleb128 0xc
 3451 00c4 00       		.byte	0
 3452 00c5 00       		.byte	0
 3453 00c6 0F       		.uleb128 0xf
 3454 00c7 2E       		.uleb128 0x2e
 3455 00c8 01       		.byte	0x1
 3456 00c9 3F       		.uleb128 0x3f
 3457 00ca 0C       		.uleb128 0xc
 3458 00cb 03       		.uleb128 0x3
 3459 00cc 0E       		.uleb128 0xe
 3460 00cd 3A       		.uleb128 0x3a
 3461 00ce 0B       		.uleb128 0xb
 3462 00cf 3B       		.uleb128 0x3b
 3463 00d0 0B       		.uleb128 0xb
 3464 00d1 27       		.uleb128 0x27
 3465 00d2 0C       		.uleb128 0xc
 3466 00d3 11       		.uleb128 0x11
 3467 00d4 01       		.uleb128 0x1
 3468 00d5 12       		.uleb128 0x12
 3469 00d6 01       		.uleb128 0x1
 3470 00d7 40       		.uleb128 0x40
 3471 00d8 06       		.uleb128 0x6
 3472 00d9 9742     		.uleb128 0x2117
 3473 00db 0C       		.uleb128 0xc
 3474 00dc 01       		.uleb128 0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 101


 3475 00dd 13       		.uleb128 0x13
 3476 00de 00       		.byte	0
 3477 00df 00       		.byte	0
 3478 00e0 10       		.uleb128 0x10
 3479 00e1 898201   		.uleb128 0x4109
 3480 00e4 01       		.byte	0x1
 3481 00e5 11       		.uleb128 0x11
 3482 00e6 01       		.uleb128 0x1
 3483 00e7 31       		.uleb128 0x31
 3484 00e8 13       		.uleb128 0x13
 3485 00e9 01       		.uleb128 0x1
 3486 00ea 13       		.uleb128 0x13
 3487 00eb 00       		.byte	0
 3488 00ec 00       		.byte	0
 3489 00ed 11       		.uleb128 0x11
 3490 00ee 8A8201   		.uleb128 0x410a
 3491 00f1 00       		.byte	0
 3492 00f2 02       		.uleb128 0x2
 3493 00f3 0A       		.uleb128 0xa
 3494 00f4 9142     		.uleb128 0x2111
 3495 00f6 0A       		.uleb128 0xa
 3496 00f7 00       		.byte	0
 3497 00f8 00       		.byte	0
 3498 00f9 12       		.uleb128 0x12
 3499 00fa 898201   		.uleb128 0x4109
 3500 00fd 00       		.byte	0
 3501 00fe 11       		.uleb128 0x11
 3502 00ff 01       		.uleb128 0x1
 3503 0100 31       		.uleb128 0x31
 3504 0101 13       		.uleb128 0x13
 3505 0102 00       		.byte	0
 3506 0103 00       		.byte	0
 3507 0104 13       		.uleb128 0x13
 3508 0105 2E       		.uleb128 0x2e
 3509 0106 01       		.byte	0x1
 3510 0107 3F       		.uleb128 0x3f
 3511 0108 0C       		.uleb128 0xc
 3512 0109 03       		.uleb128 0x3
 3513 010a 0E       		.uleb128 0xe
 3514 010b 3A       		.uleb128 0x3a
 3515 010c 0B       		.uleb128 0xb
 3516 010d 3B       		.uleb128 0x3b
 3517 010e 05       		.uleb128 0x5
 3518 010f 27       		.uleb128 0x27
 3519 0110 0C       		.uleb128 0xc
 3520 0111 11       		.uleb128 0x11
 3521 0112 01       		.uleb128 0x1
 3522 0113 12       		.uleb128 0x12
 3523 0114 01       		.uleb128 0x1
 3524 0115 40       		.uleb128 0x40
 3525 0116 06       		.uleb128 0x6
 3526 0117 9742     		.uleb128 0x2117
 3527 0119 0C       		.uleb128 0xc
 3528 011a 01       		.uleb128 0x1
 3529 011b 13       		.uleb128 0x13
 3530 011c 00       		.byte	0
 3531 011d 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 102


 3532 011e 14       		.uleb128 0x14
 3533 011f 34       		.uleb128 0x34
 3534 0120 00       		.byte	0
 3535 0121 03       		.uleb128 0x3
 3536 0122 0E       		.uleb128 0xe
 3537 0123 3A       		.uleb128 0x3a
 3538 0124 0B       		.uleb128 0xb
 3539 0125 3B       		.uleb128 0x3b
 3540 0126 05       		.uleb128 0x5
 3541 0127 49       		.uleb128 0x49
 3542 0128 13       		.uleb128 0x13
 3543 0129 1C       		.uleb128 0x1c
 3544 012a 0B       		.uleb128 0xb
 3545 012b 00       		.byte	0
 3546 012c 00       		.byte	0
 3547 012d 15       		.uleb128 0x15
 3548 012e 34       		.uleb128 0x34
 3549 012f 00       		.byte	0
 3550 0130 03       		.uleb128 0x3
 3551 0131 08       		.uleb128 0x8
 3552 0132 3A       		.uleb128 0x3a
 3553 0133 0B       		.uleb128 0xb
 3554 0134 3B       		.uleb128 0x3b
 3555 0135 05       		.uleb128 0x5
 3556 0136 49       		.uleb128 0x49
 3557 0137 13       		.uleb128 0x13
 3558 0138 00       		.byte	0
 3559 0139 00       		.byte	0
 3560 013a 16       		.uleb128 0x16
 3561 013b 34       		.uleb128 0x34
 3562 013c 00       		.byte	0
 3563 013d 03       		.uleb128 0x3
 3564 013e 0E       		.uleb128 0xe
 3565 013f 3A       		.uleb128 0x3a
 3566 0140 0B       		.uleb128 0xb
 3567 0141 3B       		.uleb128 0x3b
 3568 0142 05       		.uleb128 0x5
 3569 0143 49       		.uleb128 0x49
 3570 0144 13       		.uleb128 0x13
 3571 0145 02       		.uleb128 0x2
 3572 0146 06       		.uleb128 0x6
 3573 0147 00       		.byte	0
 3574 0148 00       		.byte	0
 3575 0149 17       		.uleb128 0x17
 3576 014a 34       		.uleb128 0x34
 3577 014b 00       		.byte	0
 3578 014c 03       		.uleb128 0x3
 3579 014d 0E       		.uleb128 0xe
 3580 014e 3A       		.uleb128 0x3a
 3581 014f 0B       		.uleb128 0xb
 3582 0150 3B       		.uleb128 0x3b
 3583 0151 05       		.uleb128 0x5
 3584 0152 49       		.uleb128 0x49
 3585 0153 13       		.uleb128 0x13
 3586 0154 02       		.uleb128 0x2
 3587 0155 0A       		.uleb128 0xa
 3588 0156 00       		.byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 103


 3589 0157 00       		.byte	0
 3590 0158 18       		.uleb128 0x18
 3591 0159 26       		.uleb128 0x26
 3592 015a 00       		.byte	0
 3593 015b 49       		.uleb128 0x49
 3594 015c 13       		.uleb128 0x13
 3595 015d 00       		.byte	0
 3596 015e 00       		.byte	0
 3597 015f 19       		.uleb128 0x19
 3598 0160 05       		.uleb128 0x5
 3599 0161 00       		.byte	0
 3600 0162 03       		.uleb128 0x3
 3601 0163 0E       		.uleb128 0xe
 3602 0164 3A       		.uleb128 0x3a
 3603 0165 0B       		.uleb128 0xb
 3604 0166 3B       		.uleb128 0x3b
 3605 0167 05       		.uleb128 0x5
 3606 0168 49       		.uleb128 0x49
 3607 0169 13       		.uleb128 0x13
 3608 016a 02       		.uleb128 0x2
 3609 016b 06       		.uleb128 0x6
 3610 016c 00       		.byte	0
 3611 016d 00       		.byte	0
 3612 016e 1A       		.uleb128 0x1a
 3613 016f 898201   		.uleb128 0x4109
 3614 0172 00       		.byte	0
 3615 0173 11       		.uleb128 0x11
 3616 0174 01       		.uleb128 0x1
 3617 0175 9542     		.uleb128 0x2115
 3618 0177 0C       		.uleb128 0xc
 3619 0178 31       		.uleb128 0x31
 3620 0179 13       		.uleb128 0x13
 3621 017a 00       		.byte	0
 3622 017b 00       		.byte	0
 3623 017c 1B       		.uleb128 0x1b
 3624 017d 2E       		.uleb128 0x2e
 3625 017e 00       		.byte	0
 3626 017f 03       		.uleb128 0x3
 3627 0180 0E       		.uleb128 0xe
 3628 0181 3A       		.uleb128 0x3a
 3629 0182 0B       		.uleb128 0xb
 3630 0183 3B       		.uleb128 0x3b
 3631 0184 05       		.uleb128 0x5
 3632 0185 27       		.uleb128 0x27
 3633 0186 0C       		.uleb128 0xc
 3634 0187 20       		.uleb128 0x20
 3635 0188 0B       		.uleb128 0xb
 3636 0189 00       		.byte	0
 3637 018a 00       		.byte	0
 3638 018b 1C       		.uleb128 0x1c
 3639 018c 1D       		.uleb128 0x1d
 3640 018d 01       		.byte	0x1
 3641 018e 31       		.uleb128 0x31
 3642 018f 13       		.uleb128 0x13
 3643 0190 52       		.uleb128 0x52
 3644 0191 01       		.uleb128 0x1
 3645 0192 55       		.uleb128 0x55
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 104


 3646 0193 06       		.uleb128 0x6
 3647 0194 58       		.uleb128 0x58
 3648 0195 0B       		.uleb128 0xb
 3649 0196 59       		.uleb128 0x59
 3650 0197 05       		.uleb128 0x5
 3651 0198 01       		.uleb128 0x1
 3652 0199 13       		.uleb128 0x13
 3653 019a 00       		.byte	0
 3654 019b 00       		.byte	0
 3655 019c 1D       		.uleb128 0x1d
 3656 019d 1D       		.uleb128 0x1d
 3657 019e 01       		.byte	0x1
 3658 019f 31       		.uleb128 0x31
 3659 01a0 13       		.uleb128 0x13
 3660 01a1 11       		.uleb128 0x11
 3661 01a2 01       		.uleb128 0x1
 3662 01a3 12       		.uleb128 0x12
 3663 01a4 01       		.uleb128 0x1
 3664 01a5 58       		.uleb128 0x58
 3665 01a6 0B       		.uleb128 0xb
 3666 01a7 59       		.uleb128 0x59
 3667 01a8 05       		.uleb128 0x5
 3668 01a9 01       		.uleb128 0x1
 3669 01aa 13       		.uleb128 0x13
 3670 01ab 00       		.byte	0
 3671 01ac 00       		.byte	0
 3672 01ad 1E       		.uleb128 0x1e
 3673 01ae 2E       		.uleb128 0x2e
 3674 01af 01       		.byte	0x1
 3675 01b0 3F       		.uleb128 0x3f
 3676 01b1 0C       		.uleb128 0xc
 3677 01b2 03       		.uleb128 0x3
 3678 01b3 0E       		.uleb128 0xe
 3679 01b4 3A       		.uleb128 0x3a
 3680 01b5 0B       		.uleb128 0xb
 3681 01b6 3B       		.uleb128 0x3b
 3682 01b7 05       		.uleb128 0x5
 3683 01b8 27       		.uleb128 0x27
 3684 01b9 0C       		.uleb128 0xc
 3685 01ba 49       		.uleb128 0x49
 3686 01bb 13       		.uleb128 0x13
 3687 01bc 11       		.uleb128 0x11
 3688 01bd 01       		.uleb128 0x1
 3689 01be 12       		.uleb128 0x12
 3690 01bf 01       		.uleb128 0x1
 3691 01c0 40       		.uleb128 0x40
 3692 01c1 06       		.uleb128 0x6
 3693 01c2 9742     		.uleb128 0x2117
 3694 01c4 0C       		.uleb128 0xc
 3695 01c5 01       		.uleb128 0x1
 3696 01c6 13       		.uleb128 0x13
 3697 01c7 00       		.byte	0
 3698 01c8 00       		.byte	0
 3699 01c9 1F       		.uleb128 0x1f
 3700 01ca 34       		.uleb128 0x34
 3701 01cb 00       		.byte	0
 3702 01cc 03       		.uleb128 0x3
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 105


 3703 01cd 0E       		.uleb128 0xe
 3704 01ce 3A       		.uleb128 0x3a
 3705 01cf 0B       		.uleb128 0xb
 3706 01d0 3B       		.uleb128 0x3b
 3707 01d1 0B       		.uleb128 0xb
 3708 01d2 49       		.uleb128 0x49
 3709 01d3 13       		.uleb128 0x13
 3710 01d4 02       		.uleb128 0x2
 3711 01d5 0A       		.uleb128 0xa
 3712 01d6 00       		.byte	0
 3713 01d7 00       		.byte	0
 3714 01d8 20       		.uleb128 0x20
 3715 01d9 2E       		.uleb128 0x2e
 3716 01da 01       		.byte	0x1
 3717 01db 3F       		.uleb128 0x3f
 3718 01dc 0C       		.uleb128 0xc
 3719 01dd 03       		.uleb128 0x3
 3720 01de 0E       		.uleb128 0xe
 3721 01df 3A       		.uleb128 0x3a
 3722 01e0 0B       		.uleb128 0xb
 3723 01e1 3B       		.uleb128 0x3b
 3724 01e2 0B       		.uleb128 0xb
 3725 01e3 27       		.uleb128 0x27
 3726 01e4 0C       		.uleb128 0xc
 3727 01e5 3C       		.uleb128 0x3c
 3728 01e6 0C       		.uleb128 0xc
 3729 01e7 01       		.uleb128 0x1
 3730 01e8 13       		.uleb128 0x13
 3731 01e9 00       		.byte	0
 3732 01ea 00       		.byte	0
 3733 01eb 21       		.uleb128 0x21
 3734 01ec 05       		.uleb128 0x5
 3735 01ed 00       		.byte	0
 3736 01ee 49       		.uleb128 0x49
 3737 01ef 13       		.uleb128 0x13
 3738 01f0 00       		.byte	0
 3739 01f1 00       		.byte	0
 3740 01f2 22       		.uleb128 0x22
 3741 01f3 2E       		.uleb128 0x2e
 3742 01f4 00       		.byte	0
 3743 01f5 3F       		.uleb128 0x3f
 3744 01f6 0C       		.uleb128 0xc
 3745 01f7 03       		.uleb128 0x3
 3746 01f8 0E       		.uleb128 0xe
 3747 01f9 3A       		.uleb128 0x3a
 3748 01fa 0B       		.uleb128 0xb
 3749 01fb 3B       		.uleb128 0x3b
 3750 01fc 0B       		.uleb128 0xb
 3751 01fd 27       		.uleb128 0x27
 3752 01fe 0C       		.uleb128 0xc
 3753 01ff 3C       		.uleb128 0x3c
 3754 0200 0C       		.uleb128 0xc
 3755 0201 00       		.byte	0
 3756 0202 00       		.byte	0
 3757 0203 23       		.uleb128 0x23
 3758 0204 2E       		.uleb128 0x2e
 3759 0205 01       		.byte	0x1
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 106


 3760 0206 3F       		.uleb128 0x3f
 3761 0207 0C       		.uleb128 0xc
 3762 0208 03       		.uleb128 0x3
 3763 0209 0E       		.uleb128 0xe
 3764 020a 3A       		.uleb128 0x3a
 3765 020b 0B       		.uleb128 0xb
 3766 020c 3B       		.uleb128 0x3b
 3767 020d 0B       		.uleb128 0xb
 3768 020e 27       		.uleb128 0x27
 3769 020f 0C       		.uleb128 0xc
 3770 0210 49       		.uleb128 0x49
 3771 0211 13       		.uleb128 0x13
 3772 0212 3C       		.uleb128 0x3c
 3773 0213 0C       		.uleb128 0xc
 3774 0214 01       		.uleb128 0x1
 3775 0215 13       		.uleb128 0x13
 3776 0216 00       		.byte	0
 3777 0217 00       		.byte	0
 3778 0218 24       		.uleb128 0x24
 3779 0219 2E       		.uleb128 0x2e
 3780 021a 00       		.byte	0
 3781 021b 3F       		.uleb128 0x3f
 3782 021c 0C       		.uleb128 0xc
 3783 021d 03       		.uleb128 0x3
 3784 021e 0E       		.uleb128 0xe
 3785 021f 3A       		.uleb128 0x3a
 3786 0220 0B       		.uleb128 0xb
 3787 0221 3B       		.uleb128 0x3b
 3788 0222 0B       		.uleb128 0xb
 3789 0223 27       		.uleb128 0x27
 3790 0224 0C       		.uleb128 0xc
 3791 0225 49       		.uleb128 0x49
 3792 0226 13       		.uleb128 0x13
 3793 0227 3C       		.uleb128 0x3c
 3794 0228 0C       		.uleb128 0xc
 3795 0229 00       		.byte	0
 3796 022a 00       		.byte	0
 3797 022b 00       		.byte	0
 3798              		.section	.debug_loc,"",%progbits
 3799              	.Ldebug_loc0:
 3800              	.LLST0:
 3801 0000 00000000 		.4byte	.LFB11
 3802 0004 04000000 		.4byte	.LCFI0
 3803 0008 0200     		.2byte	0x2
 3804 000a 7D       		.byte	0x7d
 3805 000b 00       		.sleb128 0
 3806 000c 04000000 		.4byte	.LCFI0
 3807 0010 64010000 		.4byte	.LFE11
 3808 0014 0200     		.2byte	0x2
 3809 0016 7D       		.byte	0x7d
 3810 0017 24       		.sleb128 36
 3811 0018 00000000 		.4byte	0
 3812 001c 00000000 		.4byte	0
 3813              	.LLST1:
 3814 0020 00000000 		.4byte	.LFB0
 3815 0024 02000000 		.4byte	.LCFI1
 3816 0028 0200     		.2byte	0x2
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 107


 3817 002a 7D       		.byte	0x7d
 3818 002b 00       		.sleb128 0
 3819 002c 02000000 		.4byte	.LCFI1
 3820 0030 E4010000 		.4byte	.LFE0
 3821 0034 0200     		.2byte	0x2
 3822 0036 7D       		.byte	0x7d
 3823 0037 08       		.sleb128 8
 3824 0038 00000000 		.4byte	0
 3825 003c 00000000 		.4byte	0
 3826              	.LLST2:
 3827 0040 00000000 		.4byte	.LFB1
 3828 0044 04000000 		.4byte	.LCFI2
 3829 0048 0200     		.2byte	0x2
 3830 004a 7D       		.byte	0x7d
 3831 004b 00       		.sleb128 0
 3832 004c 04000000 		.4byte	.LCFI2
 3833 0050 24020000 		.4byte	.LFE1
 3834 0054 0200     		.2byte	0x2
 3835 0056 7D       		.byte	0x7d
 3836 0057 10       		.sleb128 16
 3837 0058 00000000 		.4byte	0
 3838 005c 00000000 		.4byte	0
 3839              	.LLST3:
 3840 0060 C4010000 		.4byte	.LVL33
 3841 0064 C8010000 		.4byte	.LVL34
 3842 0068 0500     		.2byte	0x5
 3843 006a 71       		.byte	0x71
 3844 006b 00       		.sleb128 0
 3845 006c 38       		.byte	0x38
 3846 006d 24       		.byte	0x24
 3847 006e 9F       		.byte	0x9f
 3848 006f C8010000 		.4byte	.LVL34
 3849 0073 D5010000 		.4byte	.LVL35-1
 3850 0077 0B00     		.2byte	0xb
 3851 0079 71       		.byte	0x71
 3852 007a 00       		.sleb128 0
 3853 007b 38       		.byte	0x38
 3854 007c 24       		.byte	0x24
 3855 007d 72       		.byte	0x72
 3856 007e 00       		.sleb128 0
 3857 007f 08       		.byte	0x8
 3858 0080 FF       		.byte	0xff
 3859 0081 1A       		.byte	0x1a
 3860 0082 21       		.byte	0x21
 3861 0083 9F       		.byte	0x9f
 3862 0084 00000000 		.4byte	0
 3863 0088 00000000 		.4byte	0
 3864              	.LLST4:
 3865 008c 00000000 		.4byte	.LFB2
 3866 0090 02000000 		.4byte	.LCFI3
 3867 0094 0200     		.2byte	0x2
 3868 0096 7D       		.byte	0x7d
 3869 0097 00       		.sleb128 0
 3870 0098 02000000 		.4byte	.LCFI3
 3871 009c 60000000 		.4byte	.LFE2
 3872 00a0 0200     		.2byte	0x2
 3873 00a2 7D       		.byte	0x7d
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 108


 3874 00a3 0C       		.sleb128 12
 3875 00a4 00000000 		.4byte	0
 3876 00a8 00000000 		.4byte	0
 3877              	.LLST5:
 3878 00ac 00000000 		.4byte	.LVL36
 3879 00b0 0A000000 		.4byte	.LVL37
 3880 00b4 0100     		.2byte	0x1
 3881 00b6 50       		.byte	0x50
 3882 00b7 0A000000 		.4byte	.LVL37
 3883 00bb 60000000 		.4byte	.LFE2
 3884 00bf 0400     		.2byte	0x4
 3885 00c1 F3       		.byte	0xf3
 3886 00c2 01       		.uleb128 0x1
 3887 00c3 50       		.byte	0x50
 3888 00c4 9F       		.byte	0x9f
 3889 00c5 00000000 		.4byte	0
 3890 00c9 00000000 		.4byte	0
 3891              	.LLST6:
 3892 00cd 00000000 		.4byte	.LVL36
 3893 00d1 1A000000 		.4byte	.LVL38
 3894 00d5 0100     		.2byte	0x1
 3895 00d7 51       		.byte	0x51
 3896 00d8 1A000000 		.4byte	.LVL38
 3897 00dc 60000000 		.4byte	.LFE2
 3898 00e0 0400     		.2byte	0x4
 3899 00e2 F3       		.byte	0xf3
 3900 00e3 01       		.uleb128 0x1
 3901 00e4 51       		.byte	0x51
 3902 00e5 9F       		.byte	0x9f
 3903 00e6 00000000 		.4byte	0
 3904 00ea 00000000 		.4byte	0
 3905              	.LLST7:
 3906 00ee 00000000 		.4byte	.LFB3
 3907 00f2 02000000 		.4byte	.LCFI4
 3908 00f6 0200     		.2byte	0x2
 3909 00f8 7D       		.byte	0x7d
 3910 00f9 00       		.sleb128 0
 3911 00fa 02000000 		.4byte	.LCFI4
 3912 00fe D8000000 		.4byte	.LFE3
 3913 0102 0200     		.2byte	0x2
 3914 0104 7D       		.byte	0x7d
 3915 0105 10       		.sleb128 16
 3916 0106 00000000 		.4byte	0
 3917 010a 00000000 		.4byte	0
 3918              	.LLST8:
 3919 010e 00000000 		.4byte	.LVL39
 3920 0112 07000000 		.4byte	.LVL40-1
 3921 0116 0100     		.2byte	0x1
 3922 0118 50       		.byte	0x50
 3923 0119 07000000 		.4byte	.LVL40-1
 3924 011d D8000000 		.4byte	.LFE3
 3925 0121 0400     		.2byte	0x4
 3926 0123 F3       		.byte	0xf3
 3927 0124 01       		.uleb128 0x1
 3928 0125 50       		.byte	0x50
 3929 0126 9F       		.byte	0x9f
 3930 0127 00000000 		.4byte	0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 109


 3931 012b 00000000 		.4byte	0
 3932              	.LLST9:
 3933 012f 00000000 		.4byte	.LVL39
 3934 0133 07000000 		.4byte	.LVL40-1
 3935 0137 0100     		.2byte	0x1
 3936 0139 51       		.byte	0x51
 3937 013a 07000000 		.4byte	.LVL40-1
 3938 013e D8000000 		.4byte	.LFE3
 3939 0142 0400     		.2byte	0x4
 3940 0144 F3       		.byte	0xf3
 3941 0145 01       		.uleb128 0x1
 3942 0146 51       		.byte	0x51
 3943 0147 9F       		.byte	0x9f
 3944 0148 00000000 		.4byte	0
 3945 014c 00000000 		.4byte	0
 3946              	.LLST10:
 3947 0150 0C000000 		.4byte	.LVL41
 3948 0154 18000000 		.4byte	.LVL42
 3949 0158 0100     		.2byte	0x1
 3950 015a 50       		.byte	0x50
 3951 015b 18000000 		.4byte	.LVL42
 3952 015f B6000000 		.4byte	.LVL45
 3953 0163 0100     		.2byte	0x1
 3954 0165 55       		.byte	0x55
 3955 0166 B6000000 		.4byte	.LVL45
 3956 016a BD000000 		.4byte	.LVL46-1
 3957 016e 0100     		.2byte	0x1
 3958 0170 50       		.byte	0x50
 3959 0171 BD000000 		.4byte	.LVL46-1
 3960 0175 D8000000 		.4byte	.LFE3
 3961 0179 0100     		.2byte	0x1
 3962 017b 55       		.byte	0x55
 3963 017c 00000000 		.4byte	0
 3964 0180 00000000 		.4byte	0
 3965              	.LLST11:
 3966 0184 00000000 		.4byte	.LFB4
 3967 0188 02000000 		.4byte	.LCFI5
 3968 018c 0200     		.2byte	0x2
 3969 018e 7D       		.byte	0x7d
 3970 018f 00       		.sleb128 0
 3971 0190 02000000 		.4byte	.LCFI5
 3972 0194 38020000 		.4byte	.LFE4
 3973 0198 0200     		.2byte	0x2
 3974 019a 7D       		.byte	0x7d
 3975 019b 10       		.sleb128 16
 3976 019c 00000000 		.4byte	0
 3977 01a0 00000000 		.4byte	0
 3978              	.LLST12:
 3979 01a4 0A000000 		.4byte	.LVL48
 3980 01a8 1A000000 		.4byte	.LVL49
 3981 01ac 0100     		.2byte	0x1
 3982 01ae 50       		.byte	0x50
 3983 01af 1A000000 		.4byte	.LVL49
 3984 01b3 FC010000 		.4byte	.LVL62
 3985 01b7 0100     		.2byte	0x1
 3986 01b9 55       		.byte	0x55
 3987 01ba FC010000 		.4byte	.LVL62
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 110


 3988 01be 03020000 		.4byte	.LVL63-1
 3989 01c2 0100     		.2byte	0x1
 3990 01c4 50       		.byte	0x50
 3991 01c5 03020000 		.4byte	.LVL63-1
 3992 01c9 38020000 		.4byte	.LFE4
 3993 01cd 0100     		.2byte	0x1
 3994 01cf 55       		.byte	0x55
 3995 01d0 00000000 		.4byte	0
 3996 01d4 00000000 		.4byte	0
 3997              	.LLST13:
 3998 01d8 00000000 		.4byte	.LFB5
 3999 01dc 02000000 		.4byte	.LCFI6
 4000 01e0 0200     		.2byte	0x2
 4001 01e2 7D       		.byte	0x7d
 4002 01e3 00       		.sleb128 0
 4003 01e4 02000000 		.4byte	.LCFI6
 4004 01e8 2C000000 		.4byte	.LFE5
 4005 01ec 0200     		.2byte	0x2
 4006 01ee 7D       		.byte	0x7d
 4007 01ef 10       		.sleb128 16
 4008 01f0 00000000 		.4byte	0
 4009 01f4 00000000 		.4byte	0
 4010              	.LLST14:
 4011 01f8 00000000 		.4byte	.LVL64
 4012 01fc 07000000 		.4byte	.LVL65-1
 4013 0200 0100     		.2byte	0x1
 4014 0202 50       		.byte	0x50
 4015 0203 07000000 		.4byte	.LVL65-1
 4016 0207 2C000000 		.4byte	.LFE5
 4017 020b 0400     		.2byte	0x4
 4018 020d F3       		.byte	0xf3
 4019 020e 01       		.uleb128 0x1
 4020 020f 50       		.byte	0x50
 4021 0210 9F       		.byte	0x9f
 4022 0211 00000000 		.4byte	0
 4023 0215 00000000 		.4byte	0
 4024              	.LLST15:
 4025 0219 08000000 		.4byte	.LVL65
 4026 021d 1F000000 		.4byte	.LVL67-1
 4027 0221 0100     		.2byte	0x1
 4028 0223 50       		.byte	0x50
 4029 0224 00000000 		.4byte	0
 4030 0228 00000000 		.4byte	0
 4031              	.LLST16:
 4032 022c 00000000 		.4byte	.LFB8
 4033 0230 02000000 		.4byte	.LCFI7
 4034 0234 0200     		.2byte	0x2
 4035 0236 7D       		.byte	0x7d
 4036 0237 00       		.sleb128 0
 4037 0238 02000000 		.4byte	.LCFI7
 4038 023c 54000000 		.4byte	.LFE8
 4039 0240 0200     		.2byte	0x2
 4040 0242 7D       		.byte	0x7d
 4041 0243 10       		.sleb128 16
 4042 0244 00000000 		.4byte	0
 4043 0248 00000000 		.4byte	0
 4044              	.LLST17:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 111


 4045 024c 00000000 		.4byte	.LVL68
 4046 0250 0C000000 		.4byte	.LVL69
 4047 0254 0100     		.2byte	0x1
 4048 0256 50       		.byte	0x50
 4049 0257 0C000000 		.4byte	.LVL69
 4050 025b 54000000 		.4byte	.LFE8
 4051 025f 0400     		.2byte	0x4
 4052 0261 F3       		.byte	0xf3
 4053 0262 01       		.uleb128 0x1
 4054 0263 50       		.byte	0x50
 4055 0264 9F       		.byte	0x9f
 4056 0265 00000000 		.4byte	0
 4057 0269 00000000 		.4byte	0
 4058              	.LLST18:
 4059 026d 00000000 		.4byte	.LFB9
 4060 0271 02000000 		.4byte	.LCFI8
 4061 0275 0200     		.2byte	0x2
 4062 0277 7D       		.byte	0x7d
 4063 0278 00       		.sleb128 0
 4064 0279 02000000 		.4byte	.LCFI8
 4065 027d 2C000000 		.4byte	.LFE9
 4066 0281 0200     		.2byte	0x2
 4067 0283 7D       		.byte	0x7d
 4068 0284 08       		.sleb128 8
 4069 0285 00000000 		.4byte	0
 4070 0289 00000000 		.4byte	0
 4071              	.LLST19:
 4072 028d 00000000 		.4byte	.LFB10
 4073 0291 02000000 		.4byte	.LCFI9
 4074 0295 0200     		.2byte	0x2
 4075 0297 7D       		.byte	0x7d
 4076 0298 00       		.sleb128 0
 4077 0299 02000000 		.4byte	.LCFI9
 4078 029d 50000000 		.4byte	.LFE10
 4079 02a1 0200     		.2byte	0x2
 4080 02a3 7D       		.byte	0x7d
 4081 02a4 10       		.sleb128 16
 4082 02a5 00000000 		.4byte	0
 4083 02a9 00000000 		.4byte	0
 4084              	.LLST20:
 4085 02ad 00000000 		.4byte	.LVL72
 4086 02b1 0C000000 		.4byte	.LVL73
 4087 02b5 0100     		.2byte	0x1
 4088 02b7 50       		.byte	0x50
 4089 02b8 0C000000 		.4byte	.LVL73
 4090 02bc 50000000 		.4byte	.LFE10
 4091 02c0 0400     		.2byte	0x4
 4092 02c2 F3       		.byte	0xf3
 4093 02c3 01       		.uleb128 0x1
 4094 02c4 50       		.byte	0x50
 4095 02c5 9F       		.byte	0x9f
 4096 02c6 00000000 		.4byte	0
 4097 02ca 00000000 		.4byte	0
 4098              		.section	.debug_aranges,"",%progbits
 4099 0000 6C000000 		.4byte	0x6c
 4100 0004 0200     		.2byte	0x2
 4101 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 112


 4102 000a 04       		.byte	0x4
 4103 000b 00       		.byte	0
 4104 000c 0000     		.2byte	0
 4105 000e 0000     		.2byte	0
 4106 0010 00000000 		.4byte	.LFB11
 4107 0014 64010000 		.4byte	.LFE11-.LFB11
 4108 0018 00000000 		.4byte	.LFB12
 4109 001c A4000000 		.4byte	.LFE12-.LFB12
 4110 0020 00000000 		.4byte	.LFB0
 4111 0024 E4010000 		.4byte	.LFE0-.LFB0
 4112 0028 00000000 		.4byte	.LFB1
 4113 002c 24020000 		.4byte	.LFE1-.LFB1
 4114 0030 00000000 		.4byte	.LFB2
 4115 0034 60000000 		.4byte	.LFE2-.LFB2
 4116 0038 00000000 		.4byte	.LFB3
 4117 003c D8000000 		.4byte	.LFE3-.LFB3
 4118 0040 00000000 		.4byte	.LFB4
 4119 0044 38020000 		.4byte	.LFE4-.LFB4
 4120 0048 00000000 		.4byte	.LFB5
 4121 004c 2C000000 		.4byte	.LFE5-.LFB5
 4122 0050 00000000 		.4byte	.LFB8
 4123 0054 54000000 		.4byte	.LFE8-.LFB8
 4124 0058 00000000 		.4byte	.LFB9
 4125 005c 2C000000 		.4byte	.LFE9-.LFB9
 4126 0060 00000000 		.4byte	.LFB10
 4127 0064 50000000 		.4byte	.LFE10-.LFB10
 4128 0068 00000000 		.4byte	0
 4129 006c 00000000 		.4byte	0
 4130              		.section	.debug_ranges,"",%progbits
 4131              	.Ldebug_ranges0:
 4132 0000 1A000000 		.4byte	.LBB10
 4133 0004 1C000000 		.4byte	.LBE10
 4134 0008 24000000 		.4byte	.LBB15
 4135 000c 06010000 		.4byte	.LBE15
 4136 0010 00000000 		.4byte	0
 4137 0014 00000000 		.4byte	0
 4138 0018 00000000 		.4byte	.LFB11
 4139 001c 64010000 		.4byte	.LFE11
 4140 0020 00000000 		.4byte	.LFB12
 4141 0024 A4000000 		.4byte	.LFE12
 4142 0028 00000000 		.4byte	.LFB0
 4143 002c E4010000 		.4byte	.LFE0
 4144 0030 00000000 		.4byte	.LFB1
 4145 0034 24020000 		.4byte	.LFE1
 4146 0038 00000000 		.4byte	.LFB2
 4147 003c 60000000 		.4byte	.LFE2
 4148 0040 00000000 		.4byte	.LFB3
 4149 0044 D8000000 		.4byte	.LFE3
 4150 0048 00000000 		.4byte	.LFB4
 4151 004c 38020000 		.4byte	.LFE4
 4152 0050 00000000 		.4byte	.LFB5
 4153 0054 2C000000 		.4byte	.LFE5
 4154 0058 00000000 		.4byte	.LFB8
 4155 005c 54000000 		.4byte	.LFE8
 4156 0060 00000000 		.4byte	.LFB9
 4157 0064 2C000000 		.4byte	.LFE9
 4158 0068 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 113


 4159 006c 50000000 		.4byte	.LFE10
 4160 0070 00000000 		.4byte	0
 4161 0074 00000000 		.4byte	0
 4162              		.section	.debug_line,"",%progbits
 4163              	.Ldebug_line0:
 4164 0000 6B030000 		.section	.debug_str,"MS",%progbits,1
 4164      02006500 
 4164      00000201 
 4164      FB0E0D00 
 4164      01010101 
 4165              	.LASF103:
 4166 0000 43795664 		.ascii	"CyVdLvAnalogDisable\000"
 4166      4C76416E 
 4166      616C6F67 
 4166      44697361 
 4166      626C6500 
 4167              	.LASF10:
 4168 0014 75696E74 		.ascii	"uint16\000"
 4168      313600
 4169              	.LASF88:
 4170 001b 4379494D 		.ascii	"CyIMO_Start\000"
 4170      4F5F5374 
 4170      61727400 
 4171              	.LASF58:
 4172 0027 4379506D 		.ascii	"CyPmHibSlpRestore\000"
 4172      48696253 
 4172      6C705265 
 4172      73746F72 
 4172      6500
 4173              	.LASF43:
 4174 0039 77616B65 		.ascii	"wakeupTrim0\000"
 4174      75705472 
 4174      696D3000 
 4175              	.LASF44:
 4176 0045 77616B65 		.ascii	"wakeupTrim1\000"
 4176      75705472 
 4176      696D3100 
 4177              	.LASF20:
 4178 0051 6D617374 		.ascii	"masterClkSrc\000"
 4178      6572436C 
 4178      6B537263 
 4178      00
 4179              	.LASF56:
 4180 005e 43595F50 		.ascii	"CY_PM_BACKUP_STRUCT\000"
 4180      4D5F4241 
 4180      434B5550 
 4180      5F535452 
 4180      55435400 
 4181              	.LASF111:
 4182 0072 43795854 		.ascii	"CyXTAL_32KHZ_Start\000"
 4182      414C5F33 
 4182      324B485A 
 4182      5F537461 
 4182      727400
 4183              	.LASF28:
 4184 0085 636C6B53 		.ascii	"clkSyncDiv\000"
 4184      796E6344 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 114


 4184      697600
 4185              	.LASF60:
 4186 0090 4379506D 		.ascii	"CyPmRestoreClocks\000"
 4186      52657374 
 4186      6F726543 
 4186      6C6F636B 
 4186      7300
 4187              	.LASF7:
 4188 00a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 4188      206C6F6E 
 4188      6720756E 
 4188      7369676E 
 4188      65642069 
 4189              	.LASF70:
 4190 00b9 4379506D 		.ascii	"CyPmHviLviSaveDisable\000"
 4190      4876694C 
 4190      76695361 
 4190      76654469 
 4190      7361626C 
 4191              	.LASF76:
 4192 00cf 746D7053 		.ascii	"tmpStatus\000"
 4192      74617475 
 4192      7300
 4193              	.LASF49:
 4194 00d9 6C766961 		.ascii	"lviaTrip\000"
 4194      54726970 
 4194      00
 4195              	.LASF22:
 4196 00e2 696D6F55 		.ascii	"imoUsbClk\000"
 4196      7362436C 
 4196      6B00
 4197              	.LASF80:
 4198 00ec 4379506D 		.ascii	"CyPmFtwSetInterval\000"
 4198      46747753 
 4198      6574496E 
 4198      74657276 
 4198      616C00
 4199              	.LASF50:
 4200 00ff 68766961 		.ascii	"hviaEn\000"
 4200      456E00
 4201              	.LASF106:
 4202 0106 43795664 		.ascii	"CyVdLvDigitEnable\000"
 4202      4C764469 
 4202      67697445 
 4202      6E61626C 
 4202      6500
 4203              	.LASF36:
 4204 0118 696C6F50 		.ascii	"iloPowerMode\000"
 4204      6F776572 
 4204      4D6F6465 
 4204      00
 4205              	.LASF6:
 4206 0125 6C6F6E67 		.ascii	"long long int\000"
 4206      206C6F6E 
 4206      6720696E 
 4206      7400
 4207              	.LASF0:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 115


 4208 0133 7369676E 		.ascii	"signed char\000"
 4208      65642063 
 4208      68617200 
 4209              	.LASF29:
 4210 013f 636C6B42 		.ascii	"clkBusDiv\000"
 4210      75734469 
 4210      7600
 4211              	.LASF68:
 4212 0149 696E7465 		.ascii	"interruptState\000"
 4212      72727570 
 4212      74537461 
 4212      746500
 4213              	.LASF109:
 4214 0158 4379494C 		.ascii	"CyILO_Start1K\000"
 4214      4F5F5374 
 4214      61727431 
 4214      4B00
 4215              	.LASF27:
 4216 0166 696D6F32 		.ascii	"imo2x\000"
 4216      7800
 4217              	.LASF4:
 4218 016c 6C6F6E67 		.ascii	"long int\000"
 4218      20696E74 
 4218      00
 4219              	.LASF72:
 4220 0175 4379506D 		.ascii	"CyPmHviLviRestore\000"
 4220      4876694C 
 4220      76695265 
 4220      73746F72 
 4220      6500
 4221              	.LASF9:
 4222 0187 75696E74 		.ascii	"uint8\000"
 4222      3800
 4223              	.LASF99:
 4224 018d 4379504C 		.ascii	"CyPLL_OUT_Start\000"
 4224      4C5F4F55 
 4224      545F5374 
 4224      61727400 
 4225              	.LASF89:
 4226 019d 43794465 		.ascii	"CyDelayUs\000"
 4226      6C617955 
 4226      7300
 4227              	.LASF13:
 4228 01a7 646F7562 		.ascii	"double\000"
 4228      6C6500
 4229              	.LASF113:
 4230 01ae 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\cyPm.c\000"
 4230      6E657261 
 4230      7465645F 
 4230      536F7572 
 4230      63655C50 
 4231              	.LASF11:
 4232 01ce 75696E74 		.ascii	"uint32\000"
 4232      333200
 4233              	.LASF31:
 4234 01d5 786D687A 		.ascii	"xmhzEnableState\000"
 4234      456E6162 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 116


 4234      6C655374 
 4234      61746500 
 4235              	.LASF71:
 4236 01e5 4379506D 		.ascii	"CyPmHibRestore\000"
 4236      48696252 
 4236      6573746F 
 4236      726500
 4237              	.LASF74:
 4238 01f4 6D61736B 		.ascii	"mask\000"
 4238      00
 4239              	.LASF53:
 4240 01f9 696D6F41 		.ascii	"imoActFreq\000"
 4240      63744672 
 4240      657100
 4241              	.LASF8:
 4242 0204 756E7369 		.ascii	"unsigned int\000"
 4242      676E6564 
 4242      20696E74 
 4242      00
 4243              	.LASF45:
 4244 0211 73636374 		.ascii	"scctData\000"
 4244      44617461 
 4244      00
 4245              	.LASF90:
 4246 021a 4379494D 		.ascii	"CyIMO_SetSource\000"
 4246      4F5F5365 
 4246      74536F75 
 4246      72636500 
 4247              	.LASF21:
 4248 022a 696D6F46 		.ascii	"imoFreq\000"
 4248      72657100 
 4249              	.LASF5:
 4250 0232 6C6F6E67 		.ascii	"long unsigned int\000"
 4250      20756E73 
 4250      69676E65 
 4250      6420696E 
 4250      7400
 4251              	.LASF46:
 4252 0244 6C766964 		.ascii	"lvidEn\000"
 4252      456E00
 4253              	.LASF34:
 4254 024b 6379506D 		.ascii	"cyPmClockBackupStruct\000"
 4254      436C6F63 
 4254      6B426163 
 4254      6B757053 
 4254      74727563 
 4255              	.LASF116:
 4256 0261 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4256      74657243 
 4256      72697469 
 4256      63616C53 
 4256      65637469 
 4257              	.LASF35:
 4258 0278 6379506D 		.ascii	"cyPmBackupStruct\000"
 4258      4261636B 
 4258      75705374 
 4258      72756374 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 117


 4258      00
 4259              	.LASF105:
 4260 0289 4379494C 		.ascii	"CyILO_SetPowerMode\000"
 4260      4F5F5365 
 4260      74506F77 
 4260      65724D6F 
 4260      646500
 4261              	.LASF100:
 4262 029c 4379494D 		.ascii	"CyIMO_Stop\000"
 4262      4F5F5374 
 4262      6F7000
 4263              	.LASF33:
 4264 02a7 43595F50 		.ascii	"CY_PM_CLOCK_BACKUP_STRUCT\000"
 4264      4D5F434C 
 4264      4F434B5F 
 4264      4241434B 
 4264      55505F53 
 4265              	.LASF3:
 4266 02c1 73686F72 		.ascii	"short unsigned int\000"
 4266      7420756E 
 4266      7369676E 
 4266      65642069 
 4266      6E7400
 4267              	.LASF78:
 4268 02d4 63747749 		.ascii	"ctwInterval\000"
 4268      6E746572 
 4268      76616C00 
 4269              	.LASF104:
 4270 02e0 43795664 		.ascii	"CyVdHvAnalogDisable\000"
 4270      4876416E 
 4270      616C6F67 
 4270      44697361 
 4270      626C6500 
 4271              	.LASF86:
 4272 02f4 43794D61 		.ascii	"CyMasterClk_SetSource\000"
 4272      73746572 
 4272      436C6B5F 
 4272      53657453 
 4272      6F757263 
 4273              	.LASF40:
 4274 030a 77616B65 		.ascii	"wakeupCfg0\000"
 4274      75704366 
 4274      673000
 4275              	.LASF41:
 4276 0315 77616B65 		.ascii	"wakeupCfg1\000"
 4276      75704366 
 4276      673100
 4277              	.LASF42:
 4278 0320 77616B65 		.ascii	"wakeupCfg2\000"
 4278      75704366 
 4278      673200
 4279              	.LASF62:
 4280 032b 636C6B42 		.ascii	"clkBusDivTmp\000"
 4280      75734469 
 4280      76546D70 
 4280      00
 4281              	.LASF114:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 118


 4282 0338 433A5C55 		.ascii	"C:\\Users\\chuck.erhardt\\Documents\\PSoC Creator\\"
 4282      73657273 
 4282      5C636875 
 4282      636B2E65 
 4282      72686172 
 4283 0366 57353130 		.ascii	"W5100_Example1\\W5100_Example1-FreeSoC_Explorer.cyd"
 4283      305F4578 
 4283      616D706C 
 4283      65315C57 
 4283      35313030 
 4284 0398 736E00   		.ascii	"sn\000"
 4285              	.LASF55:
 4286 039b 626F6F73 		.ascii	"boostRefExt\000"
 4286      74526566 
 4286      45787400 
 4287              	.LASF26:
 4288 03a7 636C6B49 		.ascii	"clkImoSrc\000"
 4288      6D6F5372 
 4288      6300
 4289              	.LASF59:
 4290 03b1 4379506D 		.ascii	"CyPmSaveClocks\000"
 4290      53617665 
 4290      436C6F63 
 4290      6B7300
 4291              	.LASF98:
 4292 03c0 43795854 		.ascii	"CyXTAL_Start\000"
 4292      414C5F53 
 4292      74617274 
 4292      00
 4293              	.LASF39:
 4294 03cd 736C7054 		.ascii	"slpTrBypass\000"
 4294      72427970 
 4294      61737300 
 4295              	.LASF17:
 4296 03d9 73697A65 		.ascii	"sizetype\000"
 4296      74797065 
 4296      00
 4297              	.LASF63:
 4298 03e2 6379506D 		.ascii	"cyPmImoFreqMhz2Reg\000"
 4298      496D6F46 
 4298      7265714D 
 4298      687A3252 
 4298      656700
 4299              	.LASF18:
 4300 03f5 656E436C 		.ascii	"enClkA\000"
 4300      6B4100
 4301              	.LASF19:
 4302 03fc 656E436C 		.ascii	"enClkD\000"
 4302      6B4400
 4303              	.LASF110:
 4304 0403 4379494C 		.ascii	"CyILO_Start100K\000"
 4304      4F5F5374 
 4304      61727431 
 4304      30304B00 
 4305              	.LASF66:
 4306 0413 77616B65 		.ascii	"wakeupSource\000"
 4306      7570536F 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 119


 4306      75726365 
 4306      00
 4307              	.LASF91:
 4308 0420 4379504C 		.ascii	"CyPLL_OUT_Stop\000"
 4308      4C5F4F55 
 4308      545F5374 
 4308      6F7000
 4309              	.LASF93:
 4310 042f 43794D61 		.ascii	"CyMasterClk_SetDivider\000"
 4310      73746572 
 4310      436C6B5F 
 4310      53657444 
 4310      69766964 
 4311              	.LASF25:
 4312 0446 696D6F43 		.ascii	"imoClkSrc\000"
 4312      6C6B5372 
 4312      6300
 4313              	.LASF12:
 4314 0450 666C6F61 		.ascii	"float\000"
 4314      7400
 4315              	.LASF101:
 4316 0456 43794578 		.ascii	"CyExitCriticalSection\000"
 4316      69744372 
 4316      69746963 
 4316      616C5365 
 4316      6374696F 
 4317              	.LASF67:
 4318 046c 4379506D 		.ascii	"CyPmSleep\000"
 4318      536C6565 
 4318      7000
 4319              	.LASF51:
 4320 0476 6C766964 		.ascii	"lvidRst\000"
 4320      52737400 
 4321              	.LASF64:
 4322 047e 4379506D 		.ascii	"CyPmAltAct\000"
 4322      416C7441 
 4322      637400
 4323              	.LASF96:
 4324 0489 43794465 		.ascii	"CyDelayCycles\000"
 4324      6C617943 
 4324      79636C65 
 4324      7300
 4325              	.LASF112:
 4326 0497 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 4326      4320342E 
 4326      372E3320 
 4326      32303133 
 4326      30333132 
 4327 04ca 616E6368 		.ascii	"anch revision 196615]\000"
 4327      20726576 
 4327      6973696F 
 4327      6E203139 
 4327      36363135 
 4328              	.LASF16:
 4329 04e0 72656738 		.ascii	"reg8\000"
 4329      00
 4330              	.LASF79:
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 120


 4331 04e5 4379506D 		.ascii	"CyPmOppsSet\000"
 4331      4F707073 
 4331      53657400 
 4332              	.LASF1:
 4333 04f1 756E7369 		.ascii	"unsigned char\000"
 4333      676E6564 
 4333      20636861 
 4333      7200
 4334              	.LASF83:
 4335 04ff 6379506D 		.ascii	"cyPmClockBackup\000"
 4335      436C6F63 
 4335      6B426163 
 4335      6B757000 
 4336              	.LASF30:
 4337 050f 706C6C45 		.ascii	"pllEnableState\000"
 4337      6E61626C 
 4337      65537461 
 4337      746500
 4338              	.LASF37:
 4339 051e 696C6F31 		.ascii	"ilo1kEnable\000"
 4339      6B456E61 
 4339      626C6500 
 4340              	.LASF2:
 4341 052a 73686F72 		.ascii	"short int\000"
 4341      7420696E 
 4341      7400
 4342              	.LASF57:
 4343 0534 4379506D 		.ascii	"CyPmHibSlpSaveSet\000"
 4343      48696253 
 4343      6C705361 
 4343      76655365 
 4343      7400
 4344              	.LASF38:
 4345 0546 696C6F31 		.ascii	"ilo100kEnable\000"
 4345      30306B45 
 4345      6E61626C 
 4345      6500
 4346              	.LASF14:
 4347 0554 63686172 		.ascii	"char\000"
 4347      00
 4348              	.LASF92:
 4349 0559 4379494D 		.ascii	"CyIMO_DisableDoubler\000"
 4349      4F5F4469 
 4349      7361626C 
 4349      65446F75 
 4349      626C6572 
 4350              	.LASF102:
 4351 056e 43795664 		.ascii	"CyVdLvDigitDisable\000"
 4351      4C764469 
 4351      67697444 
 4351      69736162 
 4351      6C6500
 4352              	.LASF54:
 4353 0581 696D6F41 		.ascii	"imoActFreq12Mhz\000"
 4353      63744672 
 4353      65713132 
 4353      4D687A00 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 121


 4354              	.LASF73:
 4355 0591 4379506D 		.ascii	"CyPmHibernate\000"
 4355      48696265 
 4355      726E6174 
 4355      6500
 4356              	.LASF85:
 4357 059f 4379466C 		.ascii	"CyFlash_SetWaitCycles\000"
 4357      6173685F 
 4357      53657457 
 4357      61697443 
 4357      79636C65 
 4358              	.LASF81:
 4359 05b5 66747749 		.ascii	"ftwInterval\000"
 4359      6E746572 
 4359      76616C00 
 4360              	.LASF84:
 4361 05c1 6379506D 		.ascii	"cyPmImoFreqReg2Mhz\000"
 4361      496D6F46 
 4361      72657152 
 4361      6567324D 
 4361      687A00
 4362              	.LASF115:
 4363 05d4 4379506D 		.ascii	"CyPmReadStatus\000"
 4363      52656164 
 4363      53746174 
 4363      757300
 4364              	.LASF94:
 4365 05e3 43794275 		.ascii	"CyBusClk_SetDivider\000"
 4365      73436C6B 
 4365      5F536574 
 4365      44697669 
 4365      64657200 
 4366              	.LASF32:
 4367 05f7 636C6B44 		.ascii	"clkDistDelay\000"
 4367      69737444 
 4367      656C6179 
 4367      00
 4368              	.LASF77:
 4369 0604 4379506D 		.ascii	"CyPmCtwSetInterval\000"
 4369      43747753 
 4369      6574496E 
 4369      74657276 
 4369      616C00
 4370              	.LASF61:
 4371 0617 73746174 		.ascii	"status\000"
 4371      757300
 4372              	.LASF48:
 4373 061e 6C766961 		.ascii	"lviaEn\000"
 4373      456E00
 4374              	.LASF87:
 4375 0625 4379494D 		.ascii	"CyIMO_SetFreq\000"
 4375      4F5F5365 
 4375      74467265 
 4375      7100
 4376              	.LASF97:
 4377 0633 4379494D 		.ascii	"CyIMO_EnableDoubler\000"
 4377      4F5F456E 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 122


 4377      61626C65 
 4377      446F7562 
 4377      6C657200 
 4378              	.LASF69:
 4379 0647 4379506D 		.ascii	"CyPmHibSaveSet\000"
 4379      48696253 
 4379      61766553 
 4379      657400
 4380              	.LASF65:
 4381 0656 77616B65 		.ascii	"wakeupTime\000"
 4381      75705469 
 4381      6D6500
 4382              	.LASF107:
 4383 0661 43795664 		.ascii	"CyVdLvAnalogEnable\000"
 4383      4C76416E 
 4383      616C6F67 
 4383      456E6162 
 4383      6C6500
 4384              	.LASF15:
 4385 0674 63797374 		.ascii	"cystatus\000"
 4385      61747573 
 4385      00
 4386              	.LASF23:
 4387 067d 666C6173 		.ascii	"flashWaitCycles\000"
 4387      68576169 
 4387      74437963 
 4387      6C657300 
 4388              	.LASF52:
 4389 068d 6C766961 		.ascii	"lviaRst\000"
 4389      52737400 
 4390              	.LASF108:
 4391 0695 43795664 		.ascii	"CyVdHvAnalogEnable\000"
 4391      4876416E 
 4391      616C6F67 
 4391      456E6162 
 4391      6C6500
 4392              	.LASF95:
 4393 06a8 43795854 		.ascii	"CyXTAL_Stop\000"
 4393      414C5F53 
 4393      746F7000 
 4394              	.LASF82:
 4395 06b4 6379506D 		.ascii	"cyPmBackup\000"
 4395      4261636B 
 4395      757000
 4396              	.LASF47:
 4397 06bf 6C766964 		.ascii	"lvidTrip\000"
 4397      54726970 
 4397      00
 4398              	.LASF24:
 4399 06c8 696D6F45 		.ascii	"imoEnable\000"
 4399      6E61626C 
 4399      6500
 4400              	.LASF75:
 4401 06d2 696E7465 		.ascii	"interruptStatus\000"
 4401      72727570 
 4401      74537461 
 4401      74757300 
ARM GAS  C:\Users\CHUCK~1.ERH\AppData\Local\Temp\cc2qSQr8.s 			page 123


 4402              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
